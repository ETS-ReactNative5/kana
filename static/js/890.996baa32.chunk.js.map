{"version":3,"file":"static/js/890.996baa32.chunk.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/arrayLikeToArray.js","../node_modules/@babel/runtime/helpers/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/assertThisInitialized.js","../node_modules/@babel/runtime/helpers/classCallCheck.js","../node_modules/@babel/runtime/helpers/construct.js","../node_modules/@babel/runtime/helpers/createClass.js","../node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js","../node_modules/@babel/runtime/helpers/createSuper.js","../node_modules/@babel/runtime/helpers/defineProperty.js","../node_modules/@babel/runtime/helpers/getPrototypeOf.js","../node_modules/@babel/runtime/helpers/inherits.js","../node_modules/@babel/runtime/helpers/isNativeFunction.js","../node_modules/@babel/runtime/helpers/isNativeReflectConstruct.js","../node_modules/@babel/runtime/helpers/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/nonIterableRest.js","../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js","../node_modules/@babel/runtime/helpers/setPrototypeOf.js","../node_modules/@babel/runtime/helpers/slicedToArray.js","../node_modules/@babel/runtime/helpers/typeof.js","../node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js","../node_modules/@babel/runtime/helpers/wrapNativeSuper.js","../node_modules/@babel/runtime/regenerator/index.js","../node_modules/jsfive/esm/core.js","../node_modules/jsfive/index.js","../node_modules/jsfive/esm/datatype-msg.js","../node_modules/jsfive/node_modules/pako/dist/pako.esm.mjs","../node_modules/jsfive/esm/btree.js","../node_modules/jsfive/esm/misc-low-level.js","../node_modules/jsfive/esm/dataobjects.js","../node_modules/jsfive/esm/high-level.js","../node_modules/regenerator-runtime/runtime.js","../node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","../node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/@babel/runtime/helpers/esm/createClass.js","../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","../node_modules/@babel/runtime/helpers/esm/createSuper.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/inherits.js","../node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/scran.js/module/WasmArray.js","../node_modules/scran.js/module/wasm/scran.js","../node_modules/scran.js/module/wasm.js"],"sourcesContent":["function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nmodule.exports = _arrayLikeToArray;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nmodule.exports = _arrayWithHoles;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nmodule.exports = _assertThisInitialized;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var setPrototypeOf = require(\"./setPrototypeOf.js\");\n\nvar isNativeReflectConstruct = require(\"./isNativeReflectConstruct.js\");\n\nfunction _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    module.exports = _construct = Reflect.construct;\n    module.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n  } else {\n    module.exports = _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n\n    module.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n  }\n\n  return _construct.apply(null, arguments);\n}\n\nmodule.exports = _construct;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nmodule.exports = _createClass;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}\n\nmodule.exports = _createForOfIteratorHelper;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var getPrototypeOf = require(\"./getPrototypeOf.js\");\n\nvar isNativeReflectConstruct = require(\"./isNativeReflectConstruct.js\");\n\nvar possibleConstructorReturn = require(\"./possibleConstructorReturn.js\");\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return possibleConstructorReturn(this, result);\n  };\n}\n\nmodule.exports = _createSuper;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _getPrototypeOf(o) {\n  module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  module.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n  return _getPrototypeOf(o);\n}\n\nmodule.exports = _getPrototypeOf;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var setPrototypeOf = require(\"./setPrototypeOf.js\");\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}\n\nmodule.exports = _inherits;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _isNativeFunction(fn) {\n  return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}\n\nmodule.exports = _isNativeFunction;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nmodule.exports = _isNativeReflectConstruct;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nmodule.exports = _iterableToArrayLimit;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableRest;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var _typeof = require(\"@babel/runtime/helpers/typeof\")[\"default\"];\n\nvar assertThisInitialized = require(\"./assertThisInitialized.js\");\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n\n  return assertThisInitialized(self);\n}\n\nmodule.exports = _possibleConstructorReturn;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _setPrototypeOf(o, p) {\n  module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  module.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n  return _setPrototypeOf(o, p);\n}\n\nmodule.exports = _setPrototypeOf;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var arrayWithHoles = require(\"./arrayWithHoles.js\");\n\nvar iterableToArrayLimit = require(\"./iterableToArrayLimit.js\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\n\nvar nonIterableRest = require(\"./nonIterableRest.js\");\n\nfunction _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}\n\nmodule.exports = _slicedToArray;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    module.exports = _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n\n    module.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n  } else {\n    module.exports = _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n\n    module.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n  }\n\n  return _typeof(obj);\n}\n\nmodule.exports = _typeof;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\n\nmodule.exports = _unsupportedIterableToArray;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var getPrototypeOf = require(\"./getPrototypeOf.js\");\n\nvar setPrototypeOf = require(\"./setPrototypeOf.js\");\n\nvar isNativeFunction = require(\"./isNativeFunction.js\");\n\nvar construct = require(\"./construct.js\");\n\nfunction _wrapNativeSuper(Class) {\n  var _cache = typeof Map === \"function\" ? new Map() : undefined;\n\n  module.exports = _wrapNativeSuper = function _wrapNativeSuper(Class) {\n    if (Class === null || !isNativeFunction(Class)) return Class;\n\n    if (typeof Class !== \"function\") {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n\n    if (typeof _cache !== \"undefined\") {\n      if (_cache.has(Class)) return _cache.get(Class);\n\n      _cache.set(Class, Wrapper);\n    }\n\n    function Wrapper() {\n      return construct(Class, arguments, getPrototypeOf(this).constructor);\n    }\n\n    Wrapper.prototype = Object.create(Class.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    return setPrototypeOf(Wrapper, Class);\n  };\n\n  module.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n  return _wrapNativeSuper(Class);\n}\n\nmodule.exports = _wrapNativeSuper;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","module.exports = require(\"regenerator-runtime\");\n","export function _unpack_struct_from(structure, buf, offset = 0) {\n  var output = new Map();\n  for (let [key, fmt] of structure.entries()) {\n    let value = struct.unpack_from('<' + fmt, buf, offset);\n    offset += struct.calcsize(fmt);\n    if (value.length == 1) { value = value[0] };\n    output.set(key, value);\n  }\n  return output\n}\n\nexport function assert(thing) {\n  if (!thing) { thing() }\n}\n\nexport function _structure_size(structure) {\n  //\"\"\" Return the size of a structure in bytes. \"\"\"\n  var fmt = '<' + Array.from(structure.values()).join('');\n  return struct.calcsize(fmt);\n}\n\nexport function _padded_size(size, padding_multiple = 8) {\n  //\"\"\" Return the size of a field padded to be a multiple a given value. \"\"\"\n  return (Math.ceil(size / padding_multiple) * padding_multiple);\n}\n\nvar dtype_to_format = {\n  \"u\": \"Uint\",\n  \"i\": \"Int\",\n  \"f\": \"Float\"\n}\n\nexport function dtype_getter(dtype_str) {\n  var big_endian = struct._is_big_endian(dtype_str);\n  var getter, nbytes;\n  if (/S/.test(dtype_str)) {\n    // string type\n    getter = \"getString\";\n    nbytes = ((dtype_str.match(/S(\\d*)/) || [])[1] || 1) | 0;\n  }\n  else {\n    let [_, fstr, bytestr] = dtype_str.match(/[<>=!@]?(i|u|f)(\\d*)/);\n    nbytes = parseInt(bytestr || 4, 10);\n    let nbits = nbytes * 8;\n    getter = \"get\" + dtype_to_format[fstr] + nbits.toFixed();\n  }\n  return [getter, big_endian, nbytes];\n}\n\n// Pretty sure we can just use a number for this...\nexport class Reference {\n  /*\n  \"\"\"\n  HDF5 Reference.\n  \"\"\"\n  */\n  constructor(address_of_reference) {\n    this.address_of_reference = address_of_reference;\n  }\n\n  __bool__() {\n    return (this.address_of_reference != 0);\n  }\n}\n\nclass Struct {\n  constructor() {\n    this.big_endian = isBigEndian();\n    this.getters = {\n      \"s\": \"getUint8\",\n      \"b\": \"getInt8\",\n      \"B\": \"getUint8\",\n      \"h\": \"getInt16\",\n      \"H\": \"getUint16\",\n      \"i\": \"getInt32\",\n      \"I\": \"getUint32\",\n      \"l\": \"getInt32\",\n      \"L\": \"getUint32\",\n      \"q\": \"getInt64\",\n      \"Q\": \"getUint64\",\n      \"f\": \"getFloat32\",\n      \"d\": \"getFloat64\"\n    }\n    this.byte_lengths = {\n      \"s\": 1,\n      \"b\": 1,\n      \"B\": 1,\n      \"h\": 2,\n      \"H\": 2,\n      \"i\": 4,\n      \"I\": 4,\n      \"l\": 4,\n      \"L\": 4,\n      \"q\": 8,\n      \"Q\": 8,\n      \"f\": 4,\n      \"d\": 8\n    }\n    let all_formats = Object.keys(this.byte_lengths).join('');\n    this.fmt_size_regex = '(\\\\d*)([' + all_formats + '])';\n  }\n  calcsize(fmt) {\n    var size = 0;\n    var match;\n    var regex = new RegExp(this.fmt_size_regex, 'g');\n    while ((match = regex.exec(fmt)) !== null) {\n      let n = parseInt(match[1] || 1, 10);\n      let f = match[2];\n      let subsize = this.byte_lengths[f];\n      size += n * subsize;\n    }\n    return size;\n  }\n  _is_big_endian(fmt) {\n    var big_endian;\n    if (/^</.test(fmt)) {\n      big_endian = false;\n    }\n    else if (/^(!|>)/.test(fmt)) {\n      big_endian = true;\n    }\n    else {\n      big_endian = this.big_endian;\n    }\n    return big_endian;\n  }\n  unpack_from(fmt, buffer, offset) {\n    var offset = Number(offset || 0);\n    var view = new DataView64(buffer, 0);\n    var output = [];\n    var big_endian = this._is_big_endian(fmt);\n    var match;\n    var regex = new RegExp(this.fmt_size_regex, 'g');\n    while ((match = regex.exec(fmt)) !== null) {\n      let n = parseInt(match[1] || 1, 10);\n      let f = match[2];\n      let getter = this.getters[f];\n      let size = this.byte_lengths[f];\n      var append_target;\n      if (f == 's') {\n        var sarray = new Array();\n        append_target = sarray;\n      }\n      else {\n        append_target = output;\n      }\n      for (var i = 0; i < n; i++) {\n        append_target.push(view[getter](offset, !big_endian));\n        offset += size;\n      }\n      if (f == 's') {\n        output.push(sarray.reduce(function (a, b) { return a + String.fromCharCode(b) }, ''));\n      }\n    }\n    return output\n  }\n}\n\nexport const struct = new Struct();\n\nfunction isBigEndian() {\n  const array = new Uint8Array(4);\n  const view = new Uint32Array(array.buffer);\n  return !((view[0] = 1) & array[0]);\n}\n\nvar WARN_OVERFLOW = false;\nvar MAX_INT64 = 1n << 63n - 1n;\nvar MIN_INT64 = -1n << 63n;\nvar MAX_UINT64 = 1n << 64n;\nvar MIN_UINT64 = 0n;\n\nexport class DataView64 extends DataView {\n  getUint64(byteOffset, littleEndian) {\n    // split 64-bit number into two 32-bit (4-byte) parts\n    const left = BigInt(this.getUint32(byteOffset, littleEndian));\n    const right = BigInt(this.getUint32(byteOffset + 4, littleEndian));\n\n    // combine the two 32-bit values\n    let combined = littleEndian ? left + (right << 32n) : (left << 32n) + right;\n\n    if (WARN_OVERFLOW && (combined < MIN_UINT64 || combined > MAX_UINT64)) {\n      console.warn(combined, 'exceeds range of 64-bit unsigned int');\n    }\n\n    return Number(combined);\n  }\n\n  getInt64(byteOffset, littleEndian) {\n    // split 64-bit number into two 32-bit (4-byte) parts\n    // untested!!\n    var low, high;\n    if (littleEndian) {\n      low = this.getUint32(byteOffset, true);\n      high = this.getInt32(byteOffset + 4, true);\n    }\n    else {\n      high = this.getInt32(byteOffset, false);\n      low = this.getUint32(byteOffset + 4, false);\n    }\n\n    let combined = BigInt(low) + (BigInt(high) << 32n);\n\n    if (WARN_OVERFLOW && (combined < MIN_INT64 || combined > MAX_INT64)) {\n      console.warn(combined, 'exceeds range of 64-bit signed int');\n    }\n\n    return Number(combined);\n  }\n\n  getString(byteOffset, littleEndian, length) {\n    var output = \"\";\n    for (var i = 0; i < length; i++) {\n      let c = this.getUint8(byteOffset + i);\n      if (c) {\n        // filter out zero character codes (padding)\n        output += String.fromCharCode(c);\n      }\n    }\n    return decodeURIComponent(escape(output));\n  }\n\n  getVLENStruct(byteOffset, littleEndian, length) {\n    // get the addressing information for VLEN data\n    let item_size = this.getUint32(byteOffset, littleEndian);\n    let collection_address = this.getUint64(byteOffset + 4, littleEndian);\n    let object_index = this.getUint32(byteOffset + 12, littleEndian);\n    return [item_size, collection_address, object_index];\n  }\n\n}\n\nexport function bitSize(integer) {\n  return integer.toString(2).length;\n}\n\nexport function _unpack_integer(nbytes, fh, offset = 0, littleEndian = true) {\n  //let padded_bytelength = 1 << Math.ceil(Math.log2(nbytes));\n  //let format = _int_format(padded_bytelength);\n  //let buf = new ArrayBuffer(padded_bytelength); // all zeros to start\n  let bytes = new Uint8Array(fh.slice(offset, offset+nbytes));\n  if (!littleEndian) {\n    bytes.reverse();\n  }\n  let integer = bytes.reduce((accumulator, currentValue, index) => accumulator + (currentValue << (index * 8)), 0);\n  return integer;\n  \n  //new Uint8Array(buf).set(new Uint8Array(fh.slice(offset, offset + nbytes)));\n  //return struct.unpack_from(format, buf, 0)[0];\n}\n\nfunction _int_format(bytelength) {\n  assert([1,2,4,8].includes(bytelength));\n  let index = Math.log2(bytelength);\n  return [\"<B\", \"<H\", \"<I\", \"<Q\"][index];\n}\n\nfunction getUint64(dataview, byteOffset, littleEndian) {\n  // split 64-bit number into two 32-bit (4-byte) parts\n  const left = BigInt(this.getUint32(byteOffset, littleEndian));\n  const right = BigInt(this.getUint32(byteOffset + 4, littleEndian));\n\n  // combine the two 32-bit values\n  return littleEndian ? left + right << 32n : left << 32n + right;\n}\n\nvar VLEN_ADDRESS = new Map([\n  ['item_size', 'I'],\n  ['collection_address', 'Q'],  //# 8 byte addressing,\n  ['object_index', 'I'],\n]);\n\n","export * from './esm/high-level.js';","import {_structure_size, _unpack_struct_from} from './core.js';\n\nexport class DatatypeMessage {\n  //\"\"\" Representation of a HDF5 Datatype Message. \"\"\"\n  //# Contents and layout defined in IV.A.2.d.\n\n  constructor(buf, offset) {\n    this.buf = buf;\n    this.offset = offset;\n    this.dtype = this.determine_dtype();\n  }\n  determine_dtype() {\n    //\"\"\" Return the dtype (often numpy-like) for the datatype message.  \"\"\"\n    let datatype_msg = _unpack_struct_from(DATATYPE_MSG, this.buf, this.offset);\n    this.offset += DATATYPE_MSG_SIZE\n    //# last 4 bits\n    let datatype_class = datatype_msg.get('class_and_version') & 0x0F;\n\n    if (datatype_class == DATATYPE_FIXED_POINT) {\n      return this._determine_dtype_fixed_point(datatype_msg);\n    }\n    else if (datatype_class == DATATYPE_FLOATING_POINT) {\n      return this._determine_dtype_floating_point(datatype_msg)\n    }\n    else if (datatype_class == DATATYPE_TIME) {\n      throw \"Time datatype class not supported.\"\n    }\n    else if (datatype_class == DATATYPE_STRING) {\n      return this._determine_dtype_string(datatype_msg);\n    }\n    else if (datatype_class == DATATYPE_BITFIELD) {\n      throw \"Bitfield datatype class not supported.\"\n    }\n    else if (datatype_class == DATATYPE_OPAQUE) {\n      throw \"Opaque datatype class not supported.\"\n    }\n    else if (datatype_class == DATATYPE_COMPOUND) {\n      return this._determine_dtype_compound(datatype_msg);\n    }\n    else if (datatype_class == DATATYPE_REFERENCE) {\n      return ['REFERENCE', datatype_msg.get('size')];\n    }\n    else if (datatype_class == DATATYPE_ENUMERATED) {\n      throw \"Enumerated datatype class not supported.\"\n    }\n    else if (datatype_class == DATATYPE_ARRAY) {\n      throw \"Array datatype class not supported.\"\n    }\n    else if (datatype_class == DATATYPE_VARIABLE_LENGTH) {\n      let vlen_type = this._determine_dtype_vlen(datatype_msg);\n      if (vlen_type[0] == 'VLEN_SEQUENCE') {\n        let base_type = this.determine_dtype();\n        vlen_type = ['VLEN_SEQUENCE', base_type];\n      }\n      return vlen_type\n    }\n    else {\n      throw 'Invalid datatype class ' + datatype_class;\n    }\n  }\n\n  _determine_dtype_fixed_point(datatype_msg) {\n    //\"\"\" Return the NumPy dtype for a fixed point class. \"\"\"\n    //# fixed-point types are assumed to follow IEEE standard format\n    let length_in_bytes = datatype_msg.get('size');\n    if (!([1, 2, 4, 8].includes(length_in_bytes))) {\n        throw \"Unsupported datatype size\";\n    }\n\n    let signed = datatype_msg.get('class_bit_field_0') & 0x08;\n    var dtype_char;\n    if (signed > 0) {\n      dtype_char = 'i';\n    }\n    else {\n      dtype_char = 'u';\n    }\n\n    let byte_order = datatype_msg.get('class_bit_field_0') & 0x01;\n    var byte_order_char;\n    if (byte_order == 0) {\n      byte_order_char = '<';  //# little-endian\n    }\n    else {\n      byte_order_char = '>';  //# big-endian\n    }\n\n    //# 4-byte fixed-point property description\n    //# not read, assumed to be IEEE standard format\n    this.offset += 4\n\n    return byte_order_char + dtype_char + length_in_bytes.toFixed();\n  }\n\n  _determine_dtype_floating_point(datatype_msg) {\n    //\"\"\" Return the NumPy dtype for a floating point class. \"\"\"\n    //# Floating point types are assumed to follow IEEE standard formats\n    let length_in_bytes = datatype_msg.get('size');\n    if (!([1, 2, 4, 8].includes(length_in_bytes))) {\n      throw \"Unsupported datatype size\";\n    }\n\n    let dtype_char = 'f'\n\n    let byte_order = datatype_msg.get('class_bit_field_0') & 0x01;\n    var byte_order_char;\n    if (byte_order == 0) {\n      byte_order_char = '<';  //# little-endian\n    }\n    else {\n      byte_order_char = '>';  //# big-endian\n    }\n\n    //# 12-bytes floating-point property description\n    //# not read, assumed to be IEEE standard format\n    this.offset += 12\n\n    return byte_order_char + dtype_char + length_in_bytes.toFixed();\n  }\n  \n  _determine_dtype_string(datatype_msg) {\n    //\"\"\" Return the NumPy dtype for a string class. \"\"\"\n    return 'S' + datatype_msg.get('size').toFixed();\n  }\n  \n  _determine_dtype_vlen(datatype_msg) {\n    //\"\"\" Return the dtype information for a variable length class. \"\"\"\n    let vlen_type = datatype_msg.get('class_bit_field_0') & 0x01;\n    if (vlen_type != 1) {\n      return ['VLEN_SEQUENCE', 0, 0];\n    }\n    let padding_type = datatype_msg.get('class_bit_field_0') >> 4;  //# bits 4-7\n    let character_set = datatype_msg.get('class_bit_field_1') & 0x01; \n    return ['VLEN_STRING', padding_type, character_set];\n  }\n  _determine_dtype_compound(datatype_msg) {\n    throw \"not yet implemented!\";\n  }\n}   \n\n\nvar DATATYPE_MSG = new Map([\n  ['class_and_version', 'B'],\n  ['class_bit_field_0', 'B'],\n  ['class_bit_field_1', 'B'],\n  ['class_bit_field_2', 'B'],\n  ['size', 'I'],\n]);\nvar DATATYPE_MSG_SIZE = _structure_size(DATATYPE_MSG);\n\n\nvar COMPOUND_PROP_DESC_V1 = new Map([\n    ['offset', 'I'],\n    ['dimensionality', 'B'],\n    ['reserved_0', 'B'],\n    ['reserved_1', 'B'],\n    ['reserved_2', 'B'],\n    ['permutation', 'I'],\n    ['reserved_3', 'I'],\n    ['dim_size_1', 'I'],\n    ['dim_size_2', 'I'],\n    ['dim_size_3', 'I'],\n    ['dim_size_4', 'I'],\n]);\nvar COMPOUND_PROP_DESC_V1_SIZE = _structure_size(COMPOUND_PROP_DESC_V1);\n\n\n//# Datatype message, datatype classes\nvar DATATYPE_FIXED_POINT = 0;\nvar DATATYPE_FLOATING_POINT = 1;\nvar DATATYPE_TIME = 2;\nvar DATATYPE_STRING = 3;\nvar DATATYPE_BITFIELD = 4;\nvar DATATYPE_OPAQUE = 5;\nvar DATATYPE_COMPOUND = 6;\nvar DATATYPE_REFERENCE = 7;\nvar DATATYPE_ENUMERATED = 8;\nvar DATATYPE_VARIABLE_LENGTH = 9;\nvar DATATYPE_ARRAY = 10;","\n/*! pako 2.0.4 https://github.com/nodeca/pako @license (MIT AND Zlib) */\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n/* eslint-disable space-unary-ops */\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\n\n//const Z_FILTERED          = 1;\n//const Z_HUFFMAN_ONLY      = 2;\n//const Z_RLE               = 3;\nconst Z_FIXED$1               = 4;\n//const Z_DEFAULT_STRATEGY  = 0;\n\n/* Possible values of the data_type field (though see inflate()) */\nconst Z_BINARY              = 0;\nconst Z_TEXT                = 1;\n//const Z_ASCII             = 1; // = Z_TEXT\nconst Z_UNKNOWN$1             = 2;\n\n/*============================================================================*/\n\n\nfunction zero$1(buf) { let len = buf.length; while (--len >= 0) { buf[len] = 0; } }\n\n// From zutil.h\n\nconst STORED_BLOCK = 0;\nconst STATIC_TREES = 1;\nconst DYN_TREES    = 2;\n/* The three kinds of block type */\n\nconst MIN_MATCH$1    = 3;\nconst MAX_MATCH$1    = 258;\n/* The minimum and maximum match lengths */\n\n// From deflate.h\n/* ===========================================================================\n * Internal compression state.\n */\n\nconst LENGTH_CODES$1  = 29;\n/* number of length codes, not counting the special END_BLOCK code */\n\nconst LITERALS$1      = 256;\n/* number of literal bytes 0..255 */\n\nconst L_CODES$1       = LITERALS$1 + 1 + LENGTH_CODES$1;\n/* number of Literal or Length codes, including the END_BLOCK code */\n\nconst D_CODES$1       = 30;\n/* number of distance codes */\n\nconst BL_CODES$1      = 19;\n/* number of codes used to transfer the bit lengths */\n\nconst HEAP_SIZE$1     = 2 * L_CODES$1 + 1;\n/* maximum heap size */\n\nconst MAX_BITS$1      = 15;\n/* All codes must not exceed MAX_BITS bits */\n\nconst Buf_size      = 16;\n/* size of bit buffer in bi_buf */\n\n\n/* ===========================================================================\n * Constants\n */\n\nconst MAX_BL_BITS = 7;\n/* Bit length codes must not exceed MAX_BL_BITS bits */\n\nconst END_BLOCK   = 256;\n/* end of block literal code */\n\nconst REP_3_6     = 16;\n/* repeat previous bit length 3-6 times (2 bits of repeat count) */\n\nconst REPZ_3_10   = 17;\n/* repeat a zero length 3-10 times  (3 bits of repeat count) */\n\nconst REPZ_11_138 = 18;\n/* repeat a zero length 11-138 times  (7 bits of repeat count) */\n\n/* eslint-disable comma-spacing,array-bracket-spacing */\nconst extra_lbits =   /* extra bits for each length code */\n  new Uint8Array([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0]);\n\nconst extra_dbits =   /* extra bits for each distance code */\n  new Uint8Array([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13]);\n\nconst extra_blbits =  /* extra bits for each bit length code */\n  new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7]);\n\nconst bl_order =\n  new Uint8Array([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]);\n/* eslint-enable comma-spacing,array-bracket-spacing */\n\n/* The lengths of the bit length codes are sent in order of decreasing\n * probability, to avoid transmitting the lengths for unused bit length codes.\n */\n\n/* ===========================================================================\n * Local data. These are initialized only once.\n */\n\n// We pre-fill arrays with 0 to avoid uninitialized gaps\n\nconst DIST_CODE_LEN = 512; /* see definition of array dist_code below */\n\n// !!!! Use flat array instead of structure, Freq = i*2, Len = i*2+1\nconst static_ltree  = new Array((L_CODES$1 + 2) * 2);\nzero$1(static_ltree);\n/* The static literal tree. Since the bit lengths are imposed, there is no\n * need for the L_CODES extra codes used during heap construction. However\n * The codes 286 and 287 are needed to build a canonical tree (see _tr_init\n * below).\n */\n\nconst static_dtree  = new Array(D_CODES$1 * 2);\nzero$1(static_dtree);\n/* The static distance tree. (Actually a trivial tree since all codes use\n * 5 bits.)\n */\n\nconst _dist_code    = new Array(DIST_CODE_LEN);\nzero$1(_dist_code);\n/* Distance codes. The first 256 values correspond to the distances\n * 3 .. 258, the last 256 values correspond to the top 8 bits of\n * the 15 bit distances.\n */\n\nconst _length_code  = new Array(MAX_MATCH$1 - MIN_MATCH$1 + 1);\nzero$1(_length_code);\n/* length code for each normalized match length (0 == MIN_MATCH) */\n\nconst base_length   = new Array(LENGTH_CODES$1);\nzero$1(base_length);\n/* First normalized length for each code (0 = MIN_MATCH) */\n\nconst base_dist     = new Array(D_CODES$1);\nzero$1(base_dist);\n/* First normalized distance for each code (0 = distance of 1) */\n\n\nfunction StaticTreeDesc(static_tree, extra_bits, extra_base, elems, max_length) {\n\n  this.static_tree  = static_tree;  /* static tree or NULL */\n  this.extra_bits   = extra_bits;   /* extra bits for each code or NULL */\n  this.extra_base   = extra_base;   /* base index for extra_bits */\n  this.elems        = elems;        /* max number of elements in the tree */\n  this.max_length   = max_length;   /* max bit length for the codes */\n\n  // show if `static_tree` has data or dummy - needed for monomorphic objects\n  this.has_stree    = static_tree && static_tree.length;\n}\n\n\nlet static_l_desc;\nlet static_d_desc;\nlet static_bl_desc;\n\n\nfunction TreeDesc(dyn_tree, stat_desc) {\n  this.dyn_tree = dyn_tree;     /* the dynamic tree */\n  this.max_code = 0;            /* largest code with non zero frequency */\n  this.stat_desc = stat_desc;   /* the corresponding static tree */\n}\n\n\n\nconst d_code = (dist) => {\n\n  return dist < 256 ? _dist_code[dist] : _dist_code[256 + (dist >>> 7)];\n};\n\n\n/* ===========================================================================\n * Output a short LSB first on the stream.\n * IN assertion: there is enough room in pendingBuf.\n */\nconst put_short = (s, w) => {\n//    put_byte(s, (uch)((w) & 0xff));\n//    put_byte(s, (uch)((ush)(w) >> 8));\n  s.pending_buf[s.pending++] = (w) & 0xff;\n  s.pending_buf[s.pending++] = (w >>> 8) & 0xff;\n};\n\n\n/* ===========================================================================\n * Send a value on a given number of bits.\n * IN assertion: length <= 16 and value fits in length bits.\n */\nconst send_bits = (s, value, length) => {\n\n  if (s.bi_valid > (Buf_size - length)) {\n    s.bi_buf |= (value << s.bi_valid) & 0xffff;\n    put_short(s, s.bi_buf);\n    s.bi_buf = value >> (Buf_size - s.bi_valid);\n    s.bi_valid += length - Buf_size;\n  } else {\n    s.bi_buf |= (value << s.bi_valid) & 0xffff;\n    s.bi_valid += length;\n  }\n};\n\n\nconst send_code = (s, c, tree) => {\n\n  send_bits(s, tree[c * 2]/*.Code*/, tree[c * 2 + 1]/*.Len*/);\n};\n\n\n/* ===========================================================================\n * Reverse the first len bits of a code, using straightforward code (a faster\n * method would use a table)\n * IN assertion: 1 <= len <= 15\n */\nconst bi_reverse = (code, len) => {\n\n  let res = 0;\n  do {\n    res |= code & 1;\n    code >>>= 1;\n    res <<= 1;\n  } while (--len > 0);\n  return res >>> 1;\n};\n\n\n/* ===========================================================================\n * Flush the bit buffer, keeping at most 7 bits in it.\n */\nconst bi_flush = (s) => {\n\n  if (s.bi_valid === 16) {\n    put_short(s, s.bi_buf);\n    s.bi_buf = 0;\n    s.bi_valid = 0;\n\n  } else if (s.bi_valid >= 8) {\n    s.pending_buf[s.pending++] = s.bi_buf & 0xff;\n    s.bi_buf >>= 8;\n    s.bi_valid -= 8;\n  }\n};\n\n\n/* ===========================================================================\n * Compute the optimal bit lengths for a tree and update the total bit length\n * for the current block.\n * IN assertion: the fields freq and dad are set, heap[heap_max] and\n *    above are the tree nodes sorted by increasing frequency.\n * OUT assertions: the field len is set to the optimal bit length, the\n *     array bl_count contains the frequencies for each bit length.\n *     The length opt_len is updated; static_len is also updated if stree is\n *     not null.\n */\nconst gen_bitlen = (s, desc) =>\n//    deflate_state *s;\n//    tree_desc *desc;    /* the tree descriptor */\n{\n  const tree            = desc.dyn_tree;\n  const max_code        = desc.max_code;\n  const stree           = desc.stat_desc.static_tree;\n  const has_stree       = desc.stat_desc.has_stree;\n  const extra           = desc.stat_desc.extra_bits;\n  const base            = desc.stat_desc.extra_base;\n  const max_length      = desc.stat_desc.max_length;\n  let h;              /* heap index */\n  let n, m;           /* iterate over the tree elements */\n  let bits;           /* bit length */\n  let xbits;          /* extra bits */\n  let f;              /* frequency */\n  let overflow = 0;   /* number of elements with bit length too large */\n\n  for (bits = 0; bits <= MAX_BITS$1; bits++) {\n    s.bl_count[bits] = 0;\n  }\n\n  /* In a first pass, compute the optimal bit lengths (which may\n   * overflow in the case of the bit length tree).\n   */\n  tree[s.heap[s.heap_max] * 2 + 1]/*.Len*/ = 0; /* root of the heap */\n\n  for (h = s.heap_max + 1; h < HEAP_SIZE$1; h++) {\n    n = s.heap[h];\n    bits = tree[tree[n * 2 + 1]/*.Dad*/ * 2 + 1]/*.Len*/ + 1;\n    if (bits > max_length) {\n      bits = max_length;\n      overflow++;\n    }\n    tree[n * 2 + 1]/*.Len*/ = bits;\n    /* We overwrite tree[n].Dad which is no longer needed */\n\n    if (n > max_code) { continue; } /* not a leaf node */\n\n    s.bl_count[bits]++;\n    xbits = 0;\n    if (n >= base) {\n      xbits = extra[n - base];\n    }\n    f = tree[n * 2]/*.Freq*/;\n    s.opt_len += f * (bits + xbits);\n    if (has_stree) {\n      s.static_len += f * (stree[n * 2 + 1]/*.Len*/ + xbits);\n    }\n  }\n  if (overflow === 0) { return; }\n\n  // Trace((stderr,\"\\nbit length overflow\\n\"));\n  /* This happens for example on obj2 and pic of the Calgary corpus */\n\n  /* Find the first bit length which could increase: */\n  do {\n    bits = max_length - 1;\n    while (s.bl_count[bits] === 0) { bits--; }\n    s.bl_count[bits]--;      /* move one leaf down the tree */\n    s.bl_count[bits + 1] += 2; /* move one overflow item as its brother */\n    s.bl_count[max_length]--;\n    /* The brother of the overflow item also moves one step up,\n     * but this does not affect bl_count[max_length]\n     */\n    overflow -= 2;\n  } while (overflow > 0);\n\n  /* Now recompute all bit lengths, scanning in increasing frequency.\n   * h is still equal to HEAP_SIZE. (It is simpler to reconstruct all\n   * lengths instead of fixing only the wrong ones. This idea is taken\n   * from 'ar' written by Haruhiko Okumura.)\n   */\n  for (bits = max_length; bits !== 0; bits--) {\n    n = s.bl_count[bits];\n    while (n !== 0) {\n      m = s.heap[--h];\n      if (m > max_code) { continue; }\n      if (tree[m * 2 + 1]/*.Len*/ !== bits) {\n        // Trace((stderr,\"code %d bits %d->%d\\n\", m, tree[m].Len, bits));\n        s.opt_len += (bits - tree[m * 2 + 1]/*.Len*/) * tree[m * 2]/*.Freq*/;\n        tree[m * 2 + 1]/*.Len*/ = bits;\n      }\n      n--;\n    }\n  }\n};\n\n\n/* ===========================================================================\n * Generate the codes for a given tree and bit counts (which need not be\n * optimal).\n * IN assertion: the array bl_count contains the bit length statistics for\n * the given tree and the field len is set for all tree elements.\n * OUT assertion: the field code is set for all tree elements of non\n *     zero code length.\n */\nconst gen_codes = (tree, max_code, bl_count) =>\n//    ct_data *tree;             /* the tree to decorate */\n//    int max_code;              /* largest code with non zero frequency */\n//    ushf *bl_count;            /* number of codes at each bit length */\n{\n  const next_code = new Array(MAX_BITS$1 + 1); /* next code value for each bit length */\n  let code = 0;              /* running code value */\n  let bits;                  /* bit index */\n  let n;                     /* code index */\n\n  /* The distribution counts are first used to generate the code values\n   * without bit reversal.\n   */\n  for (bits = 1; bits <= MAX_BITS$1; bits++) {\n    next_code[bits] = code = (code + bl_count[bits - 1]) << 1;\n  }\n  /* Check that the bit counts in bl_count are consistent. The last code\n   * must be all ones.\n   */\n  //Assert (code + bl_count[MAX_BITS]-1 == (1<<MAX_BITS)-1,\n  //        \"inconsistent bit counts\");\n  //Tracev((stderr,\"\\ngen_codes: max_code %d \", max_code));\n\n  for (n = 0;  n <= max_code; n++) {\n    let len = tree[n * 2 + 1]/*.Len*/;\n    if (len === 0) { continue; }\n    /* Now reverse the bits */\n    tree[n * 2]/*.Code*/ = bi_reverse(next_code[len]++, len);\n\n    //Tracecv(tree != static_ltree, (stderr,\"\\nn %3d %c l %2d c %4x (%x) \",\n    //     n, (isgraph(n) ? n : ' '), len, tree[n].Code, next_code[len]-1));\n  }\n};\n\n\n/* ===========================================================================\n * Initialize the various 'constant' tables.\n */\nconst tr_static_init = () => {\n\n  let n;        /* iterates over tree elements */\n  let bits;     /* bit counter */\n  let length;   /* length value */\n  let code;     /* code value */\n  let dist;     /* distance index */\n  const bl_count = new Array(MAX_BITS$1 + 1);\n  /* number of codes at each bit length for an optimal tree */\n\n  // do check in _tr_init()\n  //if (static_init_done) return;\n\n  /* For some embedded targets, global variables are not initialized: */\n/*#ifdef NO_INIT_GLOBAL_POINTERS\n  static_l_desc.static_tree = static_ltree;\n  static_l_desc.extra_bits = extra_lbits;\n  static_d_desc.static_tree = static_dtree;\n  static_d_desc.extra_bits = extra_dbits;\n  static_bl_desc.extra_bits = extra_blbits;\n#endif*/\n\n  /* Initialize the mapping length (0..255) -> length code (0..28) */\n  length = 0;\n  for (code = 0; code < LENGTH_CODES$1 - 1; code++) {\n    base_length[code] = length;\n    for (n = 0; n < (1 << extra_lbits[code]); n++) {\n      _length_code[length++] = code;\n    }\n  }\n  //Assert (length == 256, \"tr_static_init: length != 256\");\n  /* Note that the length 255 (match length 258) can be represented\n   * in two different ways: code 284 + 5 bits or code 285, so we\n   * overwrite length_code[255] to use the best encoding:\n   */\n  _length_code[length - 1] = code;\n\n  /* Initialize the mapping dist (0..32K) -> dist code (0..29) */\n  dist = 0;\n  for (code = 0; code < 16; code++) {\n    base_dist[code] = dist;\n    for (n = 0; n < (1 << extra_dbits[code]); n++) {\n      _dist_code[dist++] = code;\n    }\n  }\n  //Assert (dist == 256, \"tr_static_init: dist != 256\");\n  dist >>= 7; /* from now on, all distances are divided by 128 */\n  for (; code < D_CODES$1; code++) {\n    base_dist[code] = dist << 7;\n    for (n = 0; n < (1 << (extra_dbits[code] - 7)); n++) {\n      _dist_code[256 + dist++] = code;\n    }\n  }\n  //Assert (dist == 256, \"tr_static_init: 256+dist != 512\");\n\n  /* Construct the codes of the static literal tree */\n  for (bits = 0; bits <= MAX_BITS$1; bits++) {\n    bl_count[bits] = 0;\n  }\n\n  n = 0;\n  while (n <= 143) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 8;\n    n++;\n    bl_count[8]++;\n  }\n  while (n <= 255) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 9;\n    n++;\n    bl_count[9]++;\n  }\n  while (n <= 279) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 7;\n    n++;\n    bl_count[7]++;\n  }\n  while (n <= 287) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 8;\n    n++;\n    bl_count[8]++;\n  }\n  /* Codes 286 and 287 do not exist, but we must include them in the\n   * tree construction to get a canonical Huffman tree (longest code\n   * all ones)\n   */\n  gen_codes(static_ltree, L_CODES$1 + 1, bl_count);\n\n  /* The static distance tree is trivial: */\n  for (n = 0; n < D_CODES$1; n++) {\n    static_dtree[n * 2 + 1]/*.Len*/ = 5;\n    static_dtree[n * 2]/*.Code*/ = bi_reverse(n, 5);\n  }\n\n  // Now data ready and we can init static trees\n  static_l_desc = new StaticTreeDesc(static_ltree, extra_lbits, LITERALS$1 + 1, L_CODES$1, MAX_BITS$1);\n  static_d_desc = new StaticTreeDesc(static_dtree, extra_dbits, 0,          D_CODES$1, MAX_BITS$1);\n  static_bl_desc = new StaticTreeDesc(new Array(0), extra_blbits, 0,         BL_CODES$1, MAX_BL_BITS);\n\n  //static_init_done = true;\n};\n\n\n/* ===========================================================================\n * Initialize a new block.\n */\nconst init_block = (s) => {\n\n  let n; /* iterates over tree elements */\n\n  /* Initialize the trees. */\n  for (n = 0; n < L_CODES$1;  n++) { s.dyn_ltree[n * 2]/*.Freq*/ = 0; }\n  for (n = 0; n < D_CODES$1;  n++) { s.dyn_dtree[n * 2]/*.Freq*/ = 0; }\n  for (n = 0; n < BL_CODES$1; n++) { s.bl_tree[n * 2]/*.Freq*/ = 0; }\n\n  s.dyn_ltree[END_BLOCK * 2]/*.Freq*/ = 1;\n  s.opt_len = s.static_len = 0;\n  s.last_lit = s.matches = 0;\n};\n\n\n/* ===========================================================================\n * Flush the bit buffer and align the output on a byte boundary\n */\nconst bi_windup = (s) =>\n{\n  if (s.bi_valid > 8) {\n    put_short(s, s.bi_buf);\n  } else if (s.bi_valid > 0) {\n    //put_byte(s, (Byte)s->bi_buf);\n    s.pending_buf[s.pending++] = s.bi_buf;\n  }\n  s.bi_buf = 0;\n  s.bi_valid = 0;\n};\n\n/* ===========================================================================\n * Copy a stored block, storing first the length and its\n * one's complement if requested.\n */\nconst copy_block = (s, buf, len, header) =>\n//DeflateState *s;\n//charf    *buf;    /* the input data */\n//unsigned len;     /* its length */\n//int      header;  /* true if block header must be written */\n{\n  bi_windup(s);        /* align on byte boundary */\n\n  if (header) {\n    put_short(s, len);\n    put_short(s, ~len);\n  }\n//  while (len--) {\n//    put_byte(s, *buf++);\n//  }\n  s.pending_buf.set(s.window.subarray(buf, buf + len), s.pending);\n  s.pending += len;\n};\n\n/* ===========================================================================\n * Compares to subtrees, using the tree depth as tie breaker when\n * the subtrees have equal frequency. This minimizes the worst case length.\n */\nconst smaller = (tree, n, m, depth) => {\n\n  const _n2 = n * 2;\n  const _m2 = m * 2;\n  return (tree[_n2]/*.Freq*/ < tree[_m2]/*.Freq*/ ||\n         (tree[_n2]/*.Freq*/ === tree[_m2]/*.Freq*/ && depth[n] <= depth[m]));\n};\n\n/* ===========================================================================\n * Restore the heap property by moving down the tree starting at node k,\n * exchanging a node with the smallest of its two sons if necessary, stopping\n * when the heap property is re-established (each father smaller than its\n * two sons).\n */\nconst pqdownheap = (s, tree, k) =>\n//    deflate_state *s;\n//    ct_data *tree;  /* the tree to restore */\n//    int k;               /* node to move down */\n{\n  const v = s.heap[k];\n  let j = k << 1;  /* left son of k */\n  while (j <= s.heap_len) {\n    /* Set j to the smallest of the two sons: */\n    if (j < s.heap_len &&\n      smaller(tree, s.heap[j + 1], s.heap[j], s.depth)) {\n      j++;\n    }\n    /* Exit if v is smaller than both sons */\n    if (smaller(tree, v, s.heap[j], s.depth)) { break; }\n\n    /* Exchange v with the smallest son */\n    s.heap[k] = s.heap[j];\n    k = j;\n\n    /* And continue down the tree, setting j to the left son of k */\n    j <<= 1;\n  }\n  s.heap[k] = v;\n};\n\n\n// inlined manually\n// const SMALLEST = 1;\n\n/* ===========================================================================\n * Send the block data compressed using the given Huffman trees\n */\nconst compress_block = (s, ltree, dtree) =>\n//    deflate_state *s;\n//    const ct_data *ltree; /* literal tree */\n//    const ct_data *dtree; /* distance tree */\n{\n  let dist;           /* distance of matched string */\n  let lc;             /* match length or unmatched char (if dist == 0) */\n  let lx = 0;         /* running index in l_buf */\n  let code;           /* the code to send */\n  let extra;          /* number of extra bits to send */\n\n  if (s.last_lit !== 0) {\n    do {\n      dist = (s.pending_buf[s.d_buf + lx * 2] << 8) | (s.pending_buf[s.d_buf + lx * 2 + 1]);\n      lc = s.pending_buf[s.l_buf + lx];\n      lx++;\n\n      if (dist === 0) {\n        send_code(s, lc, ltree); /* send a literal byte */\n        //Tracecv(isgraph(lc), (stderr,\" '%c' \", lc));\n      } else {\n        /* Here, lc is the match length - MIN_MATCH */\n        code = _length_code[lc];\n        send_code(s, code + LITERALS$1 + 1, ltree); /* send the length code */\n        extra = extra_lbits[code];\n        if (extra !== 0) {\n          lc -= base_length[code];\n          send_bits(s, lc, extra);       /* send the extra length bits */\n        }\n        dist--; /* dist is now the match distance - 1 */\n        code = d_code(dist);\n        //Assert (code < D_CODES, \"bad d_code\");\n\n        send_code(s, code, dtree);       /* send the distance code */\n        extra = extra_dbits[code];\n        if (extra !== 0) {\n          dist -= base_dist[code];\n          send_bits(s, dist, extra);   /* send the extra distance bits */\n        }\n      } /* literal or match pair ? */\n\n      /* Check that the overlay between pending_buf and d_buf+l_buf is ok: */\n      //Assert((uInt)(s->pending) < s->lit_bufsize + 2*lx,\n      //       \"pendingBuf overflow\");\n\n    } while (lx < s.last_lit);\n  }\n\n  send_code(s, END_BLOCK, ltree);\n};\n\n\n/* ===========================================================================\n * Construct one Huffman tree and assigns the code bit strings and lengths.\n * Update the total bit length for the current block.\n * IN assertion: the field freq is set for all tree elements.\n * OUT assertions: the fields len and code are set to the optimal bit length\n *     and corresponding code. The length opt_len is updated; static_len is\n *     also updated if stree is not null. The field max_code is set.\n */\nconst build_tree = (s, desc) =>\n//    deflate_state *s;\n//    tree_desc *desc; /* the tree descriptor */\n{\n  const tree     = desc.dyn_tree;\n  const stree    = desc.stat_desc.static_tree;\n  const has_stree = desc.stat_desc.has_stree;\n  const elems    = desc.stat_desc.elems;\n  let n, m;          /* iterate over heap elements */\n  let max_code = -1; /* largest code with non zero frequency */\n  let node;          /* new node being created */\n\n  /* Construct the initial heap, with least frequent element in\n   * heap[SMALLEST]. The sons of heap[n] are heap[2*n] and heap[2*n+1].\n   * heap[0] is not used.\n   */\n  s.heap_len = 0;\n  s.heap_max = HEAP_SIZE$1;\n\n  for (n = 0; n < elems; n++) {\n    if (tree[n * 2]/*.Freq*/ !== 0) {\n      s.heap[++s.heap_len] = max_code = n;\n      s.depth[n] = 0;\n\n    } else {\n      tree[n * 2 + 1]/*.Len*/ = 0;\n    }\n  }\n\n  /* The pkzip format requires that at least one distance code exists,\n   * and that at least one bit should be sent even if there is only one\n   * possible code. So to avoid special checks later on we force at least\n   * two codes of non zero frequency.\n   */\n  while (s.heap_len < 2) {\n    node = s.heap[++s.heap_len] = (max_code < 2 ? ++max_code : 0);\n    tree[node * 2]/*.Freq*/ = 1;\n    s.depth[node] = 0;\n    s.opt_len--;\n\n    if (has_stree) {\n      s.static_len -= stree[node * 2 + 1]/*.Len*/;\n    }\n    /* node is 0 or 1 so it does not have extra bits */\n  }\n  desc.max_code = max_code;\n\n  /* The elements heap[heap_len/2+1 .. heap_len] are leaves of the tree,\n   * establish sub-heaps of increasing lengths:\n   */\n  for (n = (s.heap_len >> 1/*int /2*/); n >= 1; n--) { pqdownheap(s, tree, n); }\n\n  /* Construct the Huffman tree by repeatedly combining the least two\n   * frequent nodes.\n   */\n  node = elems;              /* next internal node of the tree */\n  do {\n    //pqremove(s, tree, n);  /* n = node of least frequency */\n    /*** pqremove ***/\n    n = s.heap[1/*SMALLEST*/];\n    s.heap[1/*SMALLEST*/] = s.heap[s.heap_len--];\n    pqdownheap(s, tree, 1/*SMALLEST*/);\n    /***/\n\n    m = s.heap[1/*SMALLEST*/]; /* m = node of next least frequency */\n\n    s.heap[--s.heap_max] = n; /* keep the nodes sorted by frequency */\n    s.heap[--s.heap_max] = m;\n\n    /* Create a new node father of n and m */\n    tree[node * 2]/*.Freq*/ = tree[n * 2]/*.Freq*/ + tree[m * 2]/*.Freq*/;\n    s.depth[node] = (s.depth[n] >= s.depth[m] ? s.depth[n] : s.depth[m]) + 1;\n    tree[n * 2 + 1]/*.Dad*/ = tree[m * 2 + 1]/*.Dad*/ = node;\n\n    /* and insert the new node in the heap */\n    s.heap[1/*SMALLEST*/] = node++;\n    pqdownheap(s, tree, 1/*SMALLEST*/);\n\n  } while (s.heap_len >= 2);\n\n  s.heap[--s.heap_max] = s.heap[1/*SMALLEST*/];\n\n  /* At this point, the fields freq and dad are set. We can now\n   * generate the bit lengths.\n   */\n  gen_bitlen(s, desc);\n\n  /* The field len is now set, we can generate the bit codes */\n  gen_codes(tree, max_code, s.bl_count);\n};\n\n\n/* ===========================================================================\n * Scan a literal or distance tree to determine the frequencies of the codes\n * in the bit length tree.\n */\nconst scan_tree = (s, tree, max_code) =>\n//    deflate_state *s;\n//    ct_data *tree;   /* the tree to be scanned */\n//    int max_code;    /* and its largest code of non zero frequency */\n{\n  let n;                     /* iterates over all tree elements */\n  let prevlen = -1;          /* last emitted length */\n  let curlen;                /* length of current code */\n\n  let nextlen = tree[0 * 2 + 1]/*.Len*/; /* length of next code */\n\n  let count = 0;             /* repeat count of the current code */\n  let max_count = 7;         /* max repeat count */\n  let min_count = 4;         /* min repeat count */\n\n  if (nextlen === 0) {\n    max_count = 138;\n    min_count = 3;\n  }\n  tree[(max_code + 1) * 2 + 1]/*.Len*/ = 0xffff; /* guard */\n\n  for (n = 0; n <= max_code; n++) {\n    curlen = nextlen;\n    nextlen = tree[(n + 1) * 2 + 1]/*.Len*/;\n\n    if (++count < max_count && curlen === nextlen) {\n      continue;\n\n    } else if (count < min_count) {\n      s.bl_tree[curlen * 2]/*.Freq*/ += count;\n\n    } else if (curlen !== 0) {\n\n      if (curlen !== prevlen) { s.bl_tree[curlen * 2]/*.Freq*/++; }\n      s.bl_tree[REP_3_6 * 2]/*.Freq*/++;\n\n    } else if (count <= 10) {\n      s.bl_tree[REPZ_3_10 * 2]/*.Freq*/++;\n\n    } else {\n      s.bl_tree[REPZ_11_138 * 2]/*.Freq*/++;\n    }\n\n    count = 0;\n    prevlen = curlen;\n\n    if (nextlen === 0) {\n      max_count = 138;\n      min_count = 3;\n\n    } else if (curlen === nextlen) {\n      max_count = 6;\n      min_count = 3;\n\n    } else {\n      max_count = 7;\n      min_count = 4;\n    }\n  }\n};\n\n\n/* ===========================================================================\n * Send a literal or distance tree in compressed form, using the codes in\n * bl_tree.\n */\nconst send_tree = (s, tree, max_code) =>\n//    deflate_state *s;\n//    ct_data *tree; /* the tree to be scanned */\n//    int max_code;       /* and its largest code of non zero frequency */\n{\n  let n;                     /* iterates over all tree elements */\n  let prevlen = -1;          /* last emitted length */\n  let curlen;                /* length of current code */\n\n  let nextlen = tree[0 * 2 + 1]/*.Len*/; /* length of next code */\n\n  let count = 0;             /* repeat count of the current code */\n  let max_count = 7;         /* max repeat count */\n  let min_count = 4;         /* min repeat count */\n\n  /* tree[max_code+1].Len = -1; */  /* guard already set */\n  if (nextlen === 0) {\n    max_count = 138;\n    min_count = 3;\n  }\n\n  for (n = 0; n <= max_code; n++) {\n    curlen = nextlen;\n    nextlen = tree[(n + 1) * 2 + 1]/*.Len*/;\n\n    if (++count < max_count && curlen === nextlen) {\n      continue;\n\n    } else if (count < min_count) {\n      do { send_code(s, curlen, s.bl_tree); } while (--count !== 0);\n\n    } else if (curlen !== 0) {\n      if (curlen !== prevlen) {\n        send_code(s, curlen, s.bl_tree);\n        count--;\n      }\n      //Assert(count >= 3 && count <= 6, \" 3_6?\");\n      send_code(s, REP_3_6, s.bl_tree);\n      send_bits(s, count - 3, 2);\n\n    } else if (count <= 10) {\n      send_code(s, REPZ_3_10, s.bl_tree);\n      send_bits(s, count - 3, 3);\n\n    } else {\n      send_code(s, REPZ_11_138, s.bl_tree);\n      send_bits(s, count - 11, 7);\n    }\n\n    count = 0;\n    prevlen = curlen;\n    if (nextlen === 0) {\n      max_count = 138;\n      min_count = 3;\n\n    } else if (curlen === nextlen) {\n      max_count = 6;\n      min_count = 3;\n\n    } else {\n      max_count = 7;\n      min_count = 4;\n    }\n  }\n};\n\n\n/* ===========================================================================\n * Construct the Huffman tree for the bit lengths and return the index in\n * bl_order of the last bit length code to send.\n */\nconst build_bl_tree = (s) => {\n\n  let max_blindex;  /* index of last bit length code of non zero freq */\n\n  /* Determine the bit length frequencies for literal and distance trees */\n  scan_tree(s, s.dyn_ltree, s.l_desc.max_code);\n  scan_tree(s, s.dyn_dtree, s.d_desc.max_code);\n\n  /* Build the bit length tree: */\n  build_tree(s, s.bl_desc);\n  /* opt_len now includes the length of the tree representations, except\n   * the lengths of the bit lengths codes and the 5+5+4 bits for the counts.\n   */\n\n  /* Determine the number of bit length codes to send. The pkzip format\n   * requires that at least 4 bit length codes be sent. (appnote.txt says\n   * 3 but the actual value used is 4.)\n   */\n  for (max_blindex = BL_CODES$1 - 1; max_blindex >= 3; max_blindex--) {\n    if (s.bl_tree[bl_order[max_blindex] * 2 + 1]/*.Len*/ !== 0) {\n      break;\n    }\n  }\n  /* Update opt_len to include the bit length tree and counts */\n  s.opt_len += 3 * (max_blindex + 1) + 5 + 5 + 4;\n  //Tracev((stderr, \"\\ndyn trees: dyn %ld, stat %ld\",\n  //        s->opt_len, s->static_len));\n\n  return max_blindex;\n};\n\n\n/* ===========================================================================\n * Send the header for a block using dynamic Huffman trees: the counts, the\n * lengths of the bit length codes, the literal tree and the distance tree.\n * IN assertion: lcodes >= 257, dcodes >= 1, blcodes >= 4.\n */\nconst send_all_trees = (s, lcodes, dcodes, blcodes) =>\n//    deflate_state *s;\n//    int lcodes, dcodes, blcodes; /* number of codes for each tree */\n{\n  let rank;                    /* index in bl_order */\n\n  //Assert (lcodes >= 257 && dcodes >= 1 && blcodes >= 4, \"not enough codes\");\n  //Assert (lcodes <= L_CODES && dcodes <= D_CODES && blcodes <= BL_CODES,\n  //        \"too many codes\");\n  //Tracev((stderr, \"\\nbl counts: \"));\n  send_bits(s, lcodes - 257, 5); /* not +255 as stated in appnote.txt */\n  send_bits(s, dcodes - 1,   5);\n  send_bits(s, blcodes - 4,  4); /* not -3 as stated in appnote.txt */\n  for (rank = 0; rank < blcodes; rank++) {\n    //Tracev((stderr, \"\\nbl code %2d \", bl_order[rank]));\n    send_bits(s, s.bl_tree[bl_order[rank] * 2 + 1]/*.Len*/, 3);\n  }\n  //Tracev((stderr, \"\\nbl tree: sent %ld\", s->bits_sent));\n\n  send_tree(s, s.dyn_ltree, lcodes - 1); /* literal tree */\n  //Tracev((stderr, \"\\nlit tree: sent %ld\", s->bits_sent));\n\n  send_tree(s, s.dyn_dtree, dcodes - 1); /* distance tree */\n  //Tracev((stderr, \"\\ndist tree: sent %ld\", s->bits_sent));\n};\n\n\n/* ===========================================================================\n * Check if the data type is TEXT or BINARY, using the following algorithm:\n * - TEXT if the two conditions below are satisfied:\n *    a) There are no non-portable control characters belonging to the\n *       \"black list\" (0..6, 14..25, 28..31).\n *    b) There is at least one printable character belonging to the\n *       \"white list\" (9 {TAB}, 10 {LF}, 13 {CR}, 32..255).\n * - BINARY otherwise.\n * - The following partially-portable control characters form a\n *   \"gray list\" that is ignored in this detection algorithm:\n *   (7 {BEL}, 8 {BS}, 11 {VT}, 12 {FF}, 26 {SUB}, 27 {ESC}).\n * IN assertion: the fields Freq of dyn_ltree are set.\n */\nconst detect_data_type = (s) => {\n  /* black_mask is the bit mask of black-listed bytes\n   * set bits 0..6, 14..25, and 28..31\n   * 0xf3ffc07f = binary 11110011111111111100000001111111\n   */\n  let black_mask = 0xf3ffc07f;\n  let n;\n\n  /* Check for non-textual (\"black-listed\") bytes. */\n  for (n = 0; n <= 31; n++, black_mask >>>= 1) {\n    if ((black_mask & 1) && (s.dyn_ltree[n * 2]/*.Freq*/ !== 0)) {\n      return Z_BINARY;\n    }\n  }\n\n  /* Check for textual (\"white-listed\") bytes. */\n  if (s.dyn_ltree[9 * 2]/*.Freq*/ !== 0 || s.dyn_ltree[10 * 2]/*.Freq*/ !== 0 ||\n      s.dyn_ltree[13 * 2]/*.Freq*/ !== 0) {\n    return Z_TEXT;\n  }\n  for (n = 32; n < LITERALS$1; n++) {\n    if (s.dyn_ltree[n * 2]/*.Freq*/ !== 0) {\n      return Z_TEXT;\n    }\n  }\n\n  /* There are no \"black-listed\" or \"white-listed\" bytes:\n   * this stream either is empty or has tolerated (\"gray-listed\") bytes only.\n   */\n  return Z_BINARY;\n};\n\n\nlet static_init_done = false;\n\n/* ===========================================================================\n * Initialize the tree data structures for a new zlib stream.\n */\nconst _tr_init$1 = (s) =>\n{\n\n  if (!static_init_done) {\n    tr_static_init();\n    static_init_done = true;\n  }\n\n  s.l_desc  = new TreeDesc(s.dyn_ltree, static_l_desc);\n  s.d_desc  = new TreeDesc(s.dyn_dtree, static_d_desc);\n  s.bl_desc = new TreeDesc(s.bl_tree, static_bl_desc);\n\n  s.bi_buf = 0;\n  s.bi_valid = 0;\n\n  /* Initialize the first block of the first file: */\n  init_block(s);\n};\n\n\n/* ===========================================================================\n * Send a stored block\n */\nconst _tr_stored_block$1 = (s, buf, stored_len, last) =>\n//DeflateState *s;\n//charf *buf;       /* input block */\n//ulg stored_len;   /* length of input block */\n//int last;         /* one if this is the last block for a file */\n{\n  send_bits(s, (STORED_BLOCK << 1) + (last ? 1 : 0), 3);    /* send block type */\n  copy_block(s, buf, stored_len, true); /* with header */\n};\n\n\n/* ===========================================================================\n * Send one empty static block to give enough lookahead for inflate.\n * This takes 10 bits, of which 7 may remain in the bit buffer.\n */\nconst _tr_align$1 = (s) => {\n  send_bits(s, STATIC_TREES << 1, 3);\n  send_code(s, END_BLOCK, static_ltree);\n  bi_flush(s);\n};\n\n\n/* ===========================================================================\n * Determine the best encoding for the current block: dynamic trees, static\n * trees or store, and output the encoded block to the zip file.\n */\nconst _tr_flush_block$1 = (s, buf, stored_len, last) =>\n//DeflateState *s;\n//charf *buf;       /* input block, or NULL if too old */\n//ulg stored_len;   /* length of input block */\n//int last;         /* one if this is the last block for a file */\n{\n  let opt_lenb, static_lenb;  /* opt_len and static_len in bytes */\n  let max_blindex = 0;        /* index of last bit length code of non zero freq */\n\n  /* Build the Huffman trees unless a stored block is forced */\n  if (s.level > 0) {\n\n    /* Check if the file is binary or text */\n    if (s.strm.data_type === Z_UNKNOWN$1) {\n      s.strm.data_type = detect_data_type(s);\n    }\n\n    /* Construct the literal and distance trees */\n    build_tree(s, s.l_desc);\n    // Tracev((stderr, \"\\nlit data: dyn %ld, stat %ld\", s->opt_len,\n    //        s->static_len));\n\n    build_tree(s, s.d_desc);\n    // Tracev((stderr, \"\\ndist data: dyn %ld, stat %ld\", s->opt_len,\n    //        s->static_len));\n    /* At this point, opt_len and static_len are the total bit lengths of\n     * the compressed block data, excluding the tree representations.\n     */\n\n    /* Build the bit length tree for the above two trees, and get the index\n     * in bl_order of the last bit length code to send.\n     */\n    max_blindex = build_bl_tree(s);\n\n    /* Determine the best encoding. Compute the block lengths in bytes. */\n    opt_lenb = (s.opt_len + 3 + 7) >>> 3;\n    static_lenb = (s.static_len + 3 + 7) >>> 3;\n\n    // Tracev((stderr, \"\\nopt %lu(%lu) stat %lu(%lu) stored %lu lit %u \",\n    //        opt_lenb, s->opt_len, static_lenb, s->static_len, stored_len,\n    //        s->last_lit));\n\n    if (static_lenb <= opt_lenb) { opt_lenb = static_lenb; }\n\n  } else {\n    // Assert(buf != (char*)0, \"lost buf\");\n    opt_lenb = static_lenb = stored_len + 5; /* force a stored block */\n  }\n\n  if ((stored_len + 4 <= opt_lenb) && (buf !== -1)) {\n    /* 4: two words for the lengths */\n\n    /* The test buf != NULL is only necessary if LIT_BUFSIZE > WSIZE.\n     * Otherwise we can't have processed more than WSIZE input bytes since\n     * the last block flush, because compression would have been\n     * successful. If LIT_BUFSIZE <= WSIZE, it is never too late to\n     * transform a block into a stored block.\n     */\n    _tr_stored_block$1(s, buf, stored_len, last);\n\n  } else if (s.strategy === Z_FIXED$1 || static_lenb === opt_lenb) {\n\n    send_bits(s, (STATIC_TREES << 1) + (last ? 1 : 0), 3);\n    compress_block(s, static_ltree, static_dtree);\n\n  } else {\n    send_bits(s, (DYN_TREES << 1) + (last ? 1 : 0), 3);\n    send_all_trees(s, s.l_desc.max_code + 1, s.d_desc.max_code + 1, max_blindex + 1);\n    compress_block(s, s.dyn_ltree, s.dyn_dtree);\n  }\n  // Assert (s->compressed_len == s->bits_sent, \"bad compressed size\");\n  /* The above check is made mod 2^32, for files larger than 512 MB\n   * and uLong implemented on 32 bits.\n   */\n  init_block(s);\n\n  if (last) {\n    bi_windup(s);\n  }\n  // Tracev((stderr,\"\\ncomprlen %lu(%lu) \", s->compressed_len>>3,\n  //       s->compressed_len-7*last));\n};\n\n/* ===========================================================================\n * Save the match info and tally the frequency counts. Return true if\n * the current block must be flushed.\n */\nconst _tr_tally$1 = (s, dist, lc) =>\n//    deflate_state *s;\n//    unsigned dist;  /* distance of matched string */\n//    unsigned lc;    /* match length-MIN_MATCH or unmatched char (if dist==0) */\n{\n  //let out_length, in_length, dcode;\n\n  s.pending_buf[s.d_buf + s.last_lit * 2]     = (dist >>> 8) & 0xff;\n  s.pending_buf[s.d_buf + s.last_lit * 2 + 1] = dist & 0xff;\n\n  s.pending_buf[s.l_buf + s.last_lit] = lc & 0xff;\n  s.last_lit++;\n\n  if (dist === 0) {\n    /* lc is the unmatched char */\n    s.dyn_ltree[lc * 2]/*.Freq*/++;\n  } else {\n    s.matches++;\n    /* Here, lc is the match length - MIN_MATCH */\n    dist--;             /* dist = match distance - 1 */\n    //Assert((ush)dist < (ush)MAX_DIST(s) &&\n    //       (ush)lc <= (ush)(MAX_MATCH-MIN_MATCH) &&\n    //       (ush)d_code(dist) < (ush)D_CODES,  \"_tr_tally: bad match\");\n\n    s.dyn_ltree[(_length_code[lc] + LITERALS$1 + 1) * 2]/*.Freq*/++;\n    s.dyn_dtree[d_code(dist) * 2]/*.Freq*/++;\n  }\n\n// (!) This block is disabled in zlib defaults,\n// don't enable it for binary compatibility\n\n//#ifdef TRUNCATE_BLOCK\n//  /* Try to guess if it is profitable to stop the current block here */\n//  if ((s.last_lit & 0x1fff) === 0 && s.level > 2) {\n//    /* Compute an upper bound for the compressed length */\n//    out_length = s.last_lit*8;\n//    in_length = s.strstart - s.block_start;\n//\n//    for (dcode = 0; dcode < D_CODES; dcode++) {\n//      out_length += s.dyn_dtree[dcode*2]/*.Freq*/ * (5 + extra_dbits[dcode]);\n//    }\n//    out_length >>>= 3;\n//    //Tracev((stderr,\"\\nlast_lit %u, in %ld, out ~%ld(%ld%%) \",\n//    //       s->last_lit, in_length, out_length,\n//    //       100L - out_length*100L/in_length));\n//    if (s.matches < (s.last_lit>>1)/*int /2*/ && out_length < (in_length>>1)/*int /2*/) {\n//      return true;\n//    }\n//  }\n//#endif\n\n  return (s.last_lit === s.lit_bufsize - 1);\n  /* We avoid equality with lit_bufsize because of wraparound at 64K\n   * on 16 bit machines and because stored blocks are restricted to\n   * 64K-1 bytes.\n   */\n};\n\nvar _tr_init_1  = _tr_init$1;\nvar _tr_stored_block_1 = _tr_stored_block$1;\nvar _tr_flush_block_1  = _tr_flush_block$1;\nvar _tr_tally_1 = _tr_tally$1;\nvar _tr_align_1 = _tr_align$1;\n\nvar trees = {\n\t_tr_init: _tr_init_1,\n\t_tr_stored_block: _tr_stored_block_1,\n\t_tr_flush_block: _tr_flush_block_1,\n\t_tr_tally: _tr_tally_1,\n\t_tr_align: _tr_align_1\n};\n\n// Note: adler32 takes 12% for level 0 and 2% for level 6.\n// It isn't worth it to make additional optimizations as in original.\n// Small size is preferable.\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nconst adler32 = (adler, buf, len, pos) => {\n  let s1 = (adler & 0xffff) |0,\n      s2 = ((adler >>> 16) & 0xffff) |0,\n      n = 0;\n\n  while (len !== 0) {\n    // Set limit ~ twice less than 5552, to keep\n    // s2 in 31-bits, because we force signed ints.\n    // in other case %= will fail.\n    n = len > 2000 ? 2000 : len;\n    len -= n;\n\n    do {\n      s1 = (s1 + buf[pos++]) |0;\n      s2 = (s2 + s1) |0;\n    } while (--n);\n\n    s1 %= 65521;\n    s2 %= 65521;\n  }\n\n  return (s1 | (s2 << 16)) |0;\n};\n\n\nvar adler32_1 = adler32;\n\n// Note: we can't get significant speed boost here.\n// So write code to minimize size - no pregenerated tables\n// and array tools dependencies.\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n// Use ordinary array, since untyped makes no boost here\nconst makeTable = () => {\n  let c, table = [];\n\n  for (var n = 0; n < 256; n++) {\n    c = n;\n    for (var k = 0; k < 8; k++) {\n      c = ((c & 1) ? (0xEDB88320 ^ (c >>> 1)) : (c >>> 1));\n    }\n    table[n] = c;\n  }\n\n  return table;\n};\n\n// Create table on load. Just 255 signed longs. Not a problem.\nconst crcTable = new Uint32Array(makeTable());\n\n\nconst crc32 = (crc, buf, len, pos) => {\n  const t = crcTable;\n  const end = pos + len;\n\n  crc ^= -1;\n\n  for (let i = pos; i < end; i++) {\n    crc = (crc >>> 8) ^ t[(crc ^ buf[i]) & 0xFF];\n  }\n\n  return (crc ^ (-1)); // >>> 0;\n};\n\n\nvar crc32_1 = crc32;\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nvar messages = {\n  2:      'need dictionary',     /* Z_NEED_DICT       2  */\n  1:      'stream end',          /* Z_STREAM_END      1  */\n  0:      '',                    /* Z_OK              0  */\n  '-1':   'file error',          /* Z_ERRNO         (-1) */\n  '-2':   'stream error',        /* Z_STREAM_ERROR  (-2) */\n  '-3':   'data error',          /* Z_DATA_ERROR    (-3) */\n  '-4':   'insufficient memory', /* Z_MEM_ERROR     (-4) */\n  '-5':   'buffer error',        /* Z_BUF_ERROR     (-5) */\n  '-6':   'incompatible version' /* Z_VERSION_ERROR (-6) */\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nvar constants$2 = {\n\n  /* Allowed flush values; see deflate() and inflate() below for details */\n  Z_NO_FLUSH:         0,\n  Z_PARTIAL_FLUSH:    1,\n  Z_SYNC_FLUSH:       2,\n  Z_FULL_FLUSH:       3,\n  Z_FINISH:           4,\n  Z_BLOCK:            5,\n  Z_TREES:            6,\n\n  /* Return codes for the compression/decompression functions. Negative values\n  * are errors, positive values are used for special but normal events.\n  */\n  Z_OK:               0,\n  Z_STREAM_END:       1,\n  Z_NEED_DICT:        2,\n  Z_ERRNO:           -1,\n  Z_STREAM_ERROR:    -2,\n  Z_DATA_ERROR:      -3,\n  Z_MEM_ERROR:       -4,\n  Z_BUF_ERROR:       -5,\n  //Z_VERSION_ERROR: -6,\n\n  /* compression levels */\n  Z_NO_COMPRESSION:         0,\n  Z_BEST_SPEED:             1,\n  Z_BEST_COMPRESSION:       9,\n  Z_DEFAULT_COMPRESSION:   -1,\n\n\n  Z_FILTERED:               1,\n  Z_HUFFMAN_ONLY:           2,\n  Z_RLE:                    3,\n  Z_FIXED:                  4,\n  Z_DEFAULT_STRATEGY:       0,\n\n  /* Possible values of the data_type field (though see inflate()) */\n  Z_BINARY:                 0,\n  Z_TEXT:                   1,\n  //Z_ASCII:                1, // = Z_TEXT (deprecated)\n  Z_UNKNOWN:                2,\n\n  /* The deflate compression method */\n  Z_DEFLATED:               8\n  //Z_NULL:                 null // Use -1 or null inline, depending on var type\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nconst { _tr_init, _tr_stored_block, _tr_flush_block, _tr_tally, _tr_align } = trees;\n\n\n\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nconst {\n  Z_NO_FLUSH: Z_NO_FLUSH$2, Z_PARTIAL_FLUSH, Z_FULL_FLUSH: Z_FULL_FLUSH$1, Z_FINISH: Z_FINISH$3, Z_BLOCK: Z_BLOCK$1,\n  Z_OK: Z_OK$3, Z_STREAM_END: Z_STREAM_END$3, Z_STREAM_ERROR: Z_STREAM_ERROR$2, Z_DATA_ERROR: Z_DATA_ERROR$2, Z_BUF_ERROR: Z_BUF_ERROR$1,\n  Z_DEFAULT_COMPRESSION: Z_DEFAULT_COMPRESSION$1,\n  Z_FILTERED, Z_HUFFMAN_ONLY, Z_RLE, Z_FIXED, Z_DEFAULT_STRATEGY: Z_DEFAULT_STRATEGY$1,\n  Z_UNKNOWN,\n  Z_DEFLATED: Z_DEFLATED$2\n} = constants$2;\n\n/*============================================================================*/\n\n\nconst MAX_MEM_LEVEL = 9;\n/* Maximum value for memLevel in deflateInit2 */\nconst MAX_WBITS$1 = 15;\n/* 32K LZ77 window */\nconst DEF_MEM_LEVEL = 8;\n\n\nconst LENGTH_CODES  = 29;\n/* number of length codes, not counting the special END_BLOCK code */\nconst LITERALS      = 256;\n/* number of literal bytes 0..255 */\nconst L_CODES       = LITERALS + 1 + LENGTH_CODES;\n/* number of Literal or Length codes, including the END_BLOCK code */\nconst D_CODES       = 30;\n/* number of distance codes */\nconst BL_CODES      = 19;\n/* number of codes used to transfer the bit lengths */\nconst HEAP_SIZE     = 2 * L_CODES + 1;\n/* maximum heap size */\nconst MAX_BITS  = 15;\n/* All codes must not exceed MAX_BITS bits */\n\nconst MIN_MATCH = 3;\nconst MAX_MATCH = 258;\nconst MIN_LOOKAHEAD = (MAX_MATCH + MIN_MATCH + 1);\n\nconst PRESET_DICT = 0x20;\n\nconst INIT_STATE = 42;\nconst EXTRA_STATE = 69;\nconst NAME_STATE = 73;\nconst COMMENT_STATE = 91;\nconst HCRC_STATE = 103;\nconst BUSY_STATE = 113;\nconst FINISH_STATE = 666;\n\nconst BS_NEED_MORE      = 1; /* block not completed, need more input or more output */\nconst BS_BLOCK_DONE     = 2; /* block flush performed */\nconst BS_FINISH_STARTED = 3; /* finish started, need only more output at next deflate */\nconst BS_FINISH_DONE    = 4; /* finish done, accept no more input or output */\n\nconst OS_CODE = 0x03; // Unix :) . Don't detect, use this default.\n\nconst err = (strm, errorCode) => {\n  strm.msg = messages[errorCode];\n  return errorCode;\n};\n\nconst rank = (f) => {\n  return ((f) << 1) - ((f) > 4 ? 9 : 0);\n};\n\nconst zero = (buf) => {\n  let len = buf.length; while (--len >= 0) { buf[len] = 0; }\n};\n\n\n/* eslint-disable new-cap */\nlet HASH_ZLIB = (s, prev, data) => ((prev << s.hash_shift) ^ data) & s.hash_mask;\n// This hash causes less collisions, https://github.com/nodeca/pako/issues/135\n// But breaks binary compatibility\n//let HASH_FAST = (s, prev, data) => ((prev << 8) + (prev >> 8) + (data << 4)) & s.hash_mask;\nlet HASH = HASH_ZLIB;\n\n/* =========================================================================\n * Flush as much pending output as possible. All deflate() output goes\n * through this function so some applications may wish to modify it\n * to avoid allocating a large strm->output buffer and copying into it.\n * (See also read_buf()).\n */\nconst flush_pending = (strm) => {\n  const s = strm.state;\n\n  //_tr_flush_bits(s);\n  let len = s.pending;\n  if (len > strm.avail_out) {\n    len = strm.avail_out;\n  }\n  if (len === 0) { return; }\n\n  strm.output.set(s.pending_buf.subarray(s.pending_out, s.pending_out + len), strm.next_out);\n  strm.next_out += len;\n  s.pending_out += len;\n  strm.total_out += len;\n  strm.avail_out -= len;\n  s.pending -= len;\n  if (s.pending === 0) {\n    s.pending_out = 0;\n  }\n};\n\n\nconst flush_block_only = (s, last) => {\n  _tr_flush_block(s, (s.block_start >= 0 ? s.block_start : -1), s.strstart - s.block_start, last);\n  s.block_start = s.strstart;\n  flush_pending(s.strm);\n};\n\n\nconst put_byte = (s, b) => {\n  s.pending_buf[s.pending++] = b;\n};\n\n\n/* =========================================================================\n * Put a short in the pending buffer. The 16-bit value is put in MSB order.\n * IN assertion: the stream state is correct and there is enough room in\n * pending_buf.\n */\nconst putShortMSB = (s, b) => {\n\n  //  put_byte(s, (Byte)(b >> 8));\n//  put_byte(s, (Byte)(b & 0xff));\n  s.pending_buf[s.pending++] = (b >>> 8) & 0xff;\n  s.pending_buf[s.pending++] = b & 0xff;\n};\n\n\n/* ===========================================================================\n * Read a new buffer from the current input stream, update the adler32\n * and total number of bytes read.  All deflate() input goes through\n * this function so some applications may wish to modify it to avoid\n * allocating a large strm->input buffer and copying from it.\n * (See also flush_pending()).\n */\nconst read_buf = (strm, buf, start, size) => {\n\n  let len = strm.avail_in;\n\n  if (len > size) { len = size; }\n  if (len === 0) { return 0; }\n\n  strm.avail_in -= len;\n\n  // zmemcpy(buf, strm->next_in, len);\n  buf.set(strm.input.subarray(strm.next_in, strm.next_in + len), start);\n  if (strm.state.wrap === 1) {\n    strm.adler = adler32_1(strm.adler, buf, len, start);\n  }\n\n  else if (strm.state.wrap === 2) {\n    strm.adler = crc32_1(strm.adler, buf, len, start);\n  }\n\n  strm.next_in += len;\n  strm.total_in += len;\n\n  return len;\n};\n\n\n/* ===========================================================================\n * Set match_start to the longest match starting at the given string and\n * return its length. Matches shorter or equal to prev_length are discarded,\n * in which case the result is equal to prev_length and match_start is\n * garbage.\n * IN assertions: cur_match is the head of the hash chain for the current\n *   string (strstart) and its distance is <= MAX_DIST, and prev_length >= 1\n * OUT assertion: the match length is not greater than s->lookahead.\n */\nconst longest_match = (s, cur_match) => {\n\n  let chain_length = s.max_chain_length;      /* max hash chain length */\n  let scan = s.strstart; /* current string */\n  let match;                       /* matched string */\n  let len;                           /* length of current match */\n  let best_len = s.prev_length;              /* best match length so far */\n  let nice_match = s.nice_match;             /* stop if match long enough */\n  const limit = (s.strstart > (s.w_size - MIN_LOOKAHEAD)) ?\n      s.strstart - (s.w_size - MIN_LOOKAHEAD) : 0/*NIL*/;\n\n  const _win = s.window; // shortcut\n\n  const wmask = s.w_mask;\n  const prev  = s.prev;\n\n  /* Stop when cur_match becomes <= limit. To simplify the code,\n   * we prevent matches with the string of window index 0.\n   */\n\n  const strend = s.strstart + MAX_MATCH;\n  let scan_end1  = _win[scan + best_len - 1];\n  let scan_end   = _win[scan + best_len];\n\n  /* The code is optimized for HASH_BITS >= 8 and MAX_MATCH-2 multiple of 16.\n   * It is easy to get rid of this optimization if necessary.\n   */\n  // Assert(s->hash_bits >= 8 && MAX_MATCH == 258, \"Code too clever\");\n\n  /* Do not waste too much time if we already have a good match: */\n  if (s.prev_length >= s.good_match) {\n    chain_length >>= 2;\n  }\n  /* Do not look for matches beyond the end of the input. This is necessary\n   * to make deflate deterministic.\n   */\n  if (nice_match > s.lookahead) { nice_match = s.lookahead; }\n\n  // Assert((ulg)s->strstart <= s->window_size-MIN_LOOKAHEAD, \"need lookahead\");\n\n  do {\n    // Assert(cur_match < s->strstart, \"no future\");\n    match = cur_match;\n\n    /* Skip to next match if the match length cannot increase\n     * or if the match length is less than 2.  Note that the checks below\n     * for insufficient lookahead only occur occasionally for performance\n     * reasons.  Therefore uninitialized memory will be accessed, and\n     * conditional jumps will be made that depend on those values.\n     * However the length of the match is limited to the lookahead, so\n     * the output of deflate is not affected by the uninitialized values.\n     */\n\n    if (_win[match + best_len]     !== scan_end  ||\n        _win[match + best_len - 1] !== scan_end1 ||\n        _win[match]                !== _win[scan] ||\n        _win[++match]              !== _win[scan + 1]) {\n      continue;\n    }\n\n    /* The check at best_len-1 can be removed because it will be made\n     * again later. (This heuristic is not always a win.)\n     * It is not necessary to compare scan[2] and match[2] since they\n     * are always equal when the other bytes match, given that\n     * the hash keys are equal and that HASH_BITS >= 8.\n     */\n    scan += 2;\n    match++;\n    // Assert(*scan == *match, \"match[2]?\");\n\n    /* We check for insufficient lookahead only every 8th comparison;\n     * the 256th check will be made at strstart+258.\n     */\n    do {\n      /*jshint noempty:false*/\n    } while (_win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             scan < strend);\n\n    // Assert(scan <= s->window+(unsigned)(s->window_size-1), \"wild scan\");\n\n    len = MAX_MATCH - (strend - scan);\n    scan = strend - MAX_MATCH;\n\n    if (len > best_len) {\n      s.match_start = cur_match;\n      best_len = len;\n      if (len >= nice_match) {\n        break;\n      }\n      scan_end1  = _win[scan + best_len - 1];\n      scan_end   = _win[scan + best_len];\n    }\n  } while ((cur_match = prev[cur_match & wmask]) > limit && --chain_length !== 0);\n\n  if (best_len <= s.lookahead) {\n    return best_len;\n  }\n  return s.lookahead;\n};\n\n\n/* ===========================================================================\n * Fill the window when the lookahead becomes insufficient.\n * Updates strstart and lookahead.\n *\n * IN assertion: lookahead < MIN_LOOKAHEAD\n * OUT assertions: strstart <= window_size-MIN_LOOKAHEAD\n *    At least one byte has been read, or avail_in == 0; reads are\n *    performed for at least two bytes (required for the zip translate_eol\n *    option -- not supported here).\n */\nconst fill_window = (s) => {\n\n  const _w_size = s.w_size;\n  let p, n, m, more, str;\n\n  //Assert(s->lookahead < MIN_LOOKAHEAD, \"already enough lookahead\");\n\n  do {\n    more = s.window_size - s.lookahead - s.strstart;\n\n    // JS ints have 32 bit, block below not needed\n    /* Deal with !@#$% 64K limit: */\n    //if (sizeof(int) <= 2) {\n    //    if (more == 0 && s->strstart == 0 && s->lookahead == 0) {\n    //        more = wsize;\n    //\n    //  } else if (more == (unsigned)(-1)) {\n    //        /* Very unlikely, but possible on 16 bit machine if\n    //         * strstart == 0 && lookahead == 1 (input done a byte at time)\n    //         */\n    //        more--;\n    //    }\n    //}\n\n\n    /* If the window is almost full and there is insufficient lookahead,\n     * move the upper half to the lower one to make room in the upper half.\n     */\n    if (s.strstart >= _w_size + (_w_size - MIN_LOOKAHEAD)) {\n\n      s.window.set(s.window.subarray(_w_size, _w_size + _w_size), 0);\n      s.match_start -= _w_size;\n      s.strstart -= _w_size;\n      /* we now have strstart >= MAX_DIST */\n      s.block_start -= _w_size;\n\n      /* Slide the hash table (could be avoided with 32 bit values\n       at the expense of memory usage). We slide even when level == 0\n       to keep the hash table consistent if we switch back to level > 0\n       later. (Using level 0 permanently is not an optimal usage of\n       zlib, so we don't care about this pathological case.)\n       */\n\n      n = s.hash_size;\n      p = n;\n\n      do {\n        m = s.head[--p];\n        s.head[p] = (m >= _w_size ? m - _w_size : 0);\n      } while (--n);\n\n      n = _w_size;\n      p = n;\n\n      do {\n        m = s.prev[--p];\n        s.prev[p] = (m >= _w_size ? m - _w_size : 0);\n        /* If n is not on any hash chain, prev[n] is garbage but\n         * its value will never be used.\n         */\n      } while (--n);\n\n      more += _w_size;\n    }\n    if (s.strm.avail_in === 0) {\n      break;\n    }\n\n    /* If there was no sliding:\n     *    strstart <= WSIZE+MAX_DIST-1 && lookahead <= MIN_LOOKAHEAD - 1 &&\n     *    more == window_size - lookahead - strstart\n     * => more >= window_size - (MIN_LOOKAHEAD-1 + WSIZE + MAX_DIST-1)\n     * => more >= window_size - 2*WSIZE + 2\n     * In the BIG_MEM or MMAP case (not yet supported),\n     *   window_size == input_size + MIN_LOOKAHEAD  &&\n     *   strstart + s->lookahead <= input_size => more >= MIN_LOOKAHEAD.\n     * Otherwise, window_size == 2*WSIZE so more >= 2.\n     * If there was sliding, more >= WSIZE. So in all cases, more >= 2.\n     */\n    //Assert(more >= 2, \"more < 2\");\n    n = read_buf(s.strm, s.window, s.strstart + s.lookahead, more);\n    s.lookahead += n;\n\n    /* Initialize the hash value now that we have some input: */\n    if (s.lookahead + s.insert >= MIN_MATCH) {\n      str = s.strstart - s.insert;\n      s.ins_h = s.window[str];\n\n      /* UPDATE_HASH(s, s->ins_h, s->window[str + 1]); */\n      s.ins_h = HASH(s, s.ins_h, s.window[str + 1]);\n//#if MIN_MATCH != 3\n//        Call update_hash() MIN_MATCH-3 more times\n//#endif\n      while (s.insert) {\n        /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */\n        s.ins_h = HASH(s, s.ins_h, s.window[str + MIN_MATCH - 1]);\n\n        s.prev[str & s.w_mask] = s.head[s.ins_h];\n        s.head[s.ins_h] = str;\n        str++;\n        s.insert--;\n        if (s.lookahead + s.insert < MIN_MATCH) {\n          break;\n        }\n      }\n    }\n    /* If the whole input has less than MIN_MATCH bytes, ins_h is garbage,\n     * but this is not important since only literal bytes will be emitted.\n     */\n\n  } while (s.lookahead < MIN_LOOKAHEAD && s.strm.avail_in !== 0);\n\n  /* If the WIN_INIT bytes after the end of the current data have never been\n   * written, then zero those bytes in order to avoid memory check reports of\n   * the use of uninitialized (or uninitialised as Julian writes) bytes by\n   * the longest match routines.  Update the high water mark for the next\n   * time through here.  WIN_INIT is set to MAX_MATCH since the longest match\n   * routines allow scanning to strstart + MAX_MATCH, ignoring lookahead.\n   */\n//  if (s.high_water < s.window_size) {\n//    const curr = s.strstart + s.lookahead;\n//    let init = 0;\n//\n//    if (s.high_water < curr) {\n//      /* Previous high water mark below current data -- zero WIN_INIT\n//       * bytes or up to end of window, whichever is less.\n//       */\n//      init = s.window_size - curr;\n//      if (init > WIN_INIT)\n//        init = WIN_INIT;\n//      zmemzero(s->window + curr, (unsigned)init);\n//      s->high_water = curr + init;\n//    }\n//    else if (s->high_water < (ulg)curr + WIN_INIT) {\n//      /* High water mark at or above current data, but below current data\n//       * plus WIN_INIT -- zero out to current data plus WIN_INIT, or up\n//       * to end of window, whichever is less.\n//       */\n//      init = (ulg)curr + WIN_INIT - s->high_water;\n//      if (init > s->window_size - s->high_water)\n//        init = s->window_size - s->high_water;\n//      zmemzero(s->window + s->high_water, (unsigned)init);\n//      s->high_water += init;\n//    }\n//  }\n//\n//  Assert((ulg)s->strstart <= s->window_size - MIN_LOOKAHEAD,\n//    \"not enough room for search\");\n};\n\n/* ===========================================================================\n * Copy without compression as much as possible from the input stream, return\n * the current block state.\n * This function does not insert new strings in the dictionary since\n * uncompressible data is probably not useful. This function is used\n * only for the level=0 compression option.\n * NOTE: this function should be optimized to avoid extra copying from\n * window to pending_buf.\n */\nconst deflate_stored = (s, flush) => {\n\n  /* Stored blocks are limited to 0xffff bytes, pending_buf is limited\n   * to pending_buf_size, and each stored block has a 5 byte header:\n   */\n  let max_block_size = 0xffff;\n\n  if (max_block_size > s.pending_buf_size - 5) {\n    max_block_size = s.pending_buf_size - 5;\n  }\n\n  /* Copy as much as possible from input to output: */\n  for (;;) {\n    /* Fill the window as much as possible: */\n    if (s.lookahead <= 1) {\n\n      //Assert(s->strstart < s->w_size+MAX_DIST(s) ||\n      //  s->block_start >= (long)s->w_size, \"slide too late\");\n//      if (!(s.strstart < s.w_size + (s.w_size - MIN_LOOKAHEAD) ||\n//        s.block_start >= s.w_size)) {\n//        throw  new Error(\"slide too late\");\n//      }\n\n      fill_window(s);\n      if (s.lookahead === 0 && flush === Z_NO_FLUSH$2) {\n        return BS_NEED_MORE;\n      }\n\n      if (s.lookahead === 0) {\n        break;\n      }\n      /* flush the current block */\n    }\n    //Assert(s->block_start >= 0L, \"block gone\");\n//    if (s.block_start < 0) throw new Error(\"block gone\");\n\n    s.strstart += s.lookahead;\n    s.lookahead = 0;\n\n    /* Emit a stored block if pending_buf will be full: */\n    const max_start = s.block_start + max_block_size;\n\n    if (s.strstart === 0 || s.strstart >= max_start) {\n      /* strstart == 0 is possible when wraparound on 16-bit machine */\n      s.lookahead = s.strstart - max_start;\n      s.strstart = max_start;\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n\n\n    }\n    /* Flush if we may have to slide, otherwise block_start may become\n     * negative and the data will be gone:\n     */\n    if (s.strstart - s.block_start >= (s.w_size - MIN_LOOKAHEAD)) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n\n  s.insert = 0;\n\n  if (flush === Z_FINISH$3) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n\n  if (s.strstart > s.block_start) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n\n  return BS_NEED_MORE;\n};\n\n/* ===========================================================================\n * Compress as much as possible from the input stream, return the current\n * block state.\n * This function does not perform lazy evaluation of matches and inserts\n * new strings in the dictionary only for unmatched strings or for short\n * matches. It is used only for the fast compression options.\n */\nconst deflate_fast = (s, flush) => {\n\n  let hash_head;        /* head of the hash chain */\n  let bflush;           /* set if current block must be flushed */\n\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the next match, plus MIN_MATCH bytes to insert the\n     * string following the next match.\n     */\n    if (s.lookahead < MIN_LOOKAHEAD) {\n      fill_window(s);\n      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH$2) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) {\n        break; /* flush the current block */\n      }\n    }\n\n    /* Insert the string window[strstart .. strstart+2] in the\n     * dictionary, and set hash_head to the head of the hash chain:\n     */\n    hash_head = 0/*NIL*/;\n    if (s.lookahead >= MIN_MATCH) {\n      /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n      s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + MIN_MATCH - 1]);\n      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n      s.head[s.ins_h] = s.strstart;\n      /***/\n    }\n\n    /* Find the longest match, discarding those <= prev_length.\n     * At this point we have always match_length < MIN_MATCH\n     */\n    if (hash_head !== 0/*NIL*/ && ((s.strstart - hash_head) <= (s.w_size - MIN_LOOKAHEAD))) {\n      /* To simplify the code, we prevent matches with the string\n       * of window index 0 (in particular we have to avoid a match\n       * of the string with itself at the start of the input file).\n       */\n      s.match_length = longest_match(s, hash_head);\n      /* longest_match() sets match_start */\n    }\n    if (s.match_length >= MIN_MATCH) {\n      // check_match(s, s.strstart, s.match_start, s.match_length); // for debug only\n\n      /*** _tr_tally_dist(s, s.strstart - s.match_start,\n                     s.match_length - MIN_MATCH, bflush); ***/\n      bflush = _tr_tally(s, s.strstart - s.match_start, s.match_length - MIN_MATCH);\n\n      s.lookahead -= s.match_length;\n\n      /* Insert new strings in the hash table only if the match length\n       * is not too large. This saves time but degrades compression.\n       */\n      if (s.match_length <= s.max_lazy_match/*max_insert_length*/ && s.lookahead >= MIN_MATCH) {\n        s.match_length--; /* string at strstart already in table */\n        do {\n          s.strstart++;\n          /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n          s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + MIN_MATCH - 1]);\n          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n          s.head[s.ins_h] = s.strstart;\n          /***/\n          /* strstart never exceeds WSIZE-MAX_MATCH, so there are\n           * always MIN_MATCH bytes ahead.\n           */\n        } while (--s.match_length !== 0);\n        s.strstart++;\n      } else\n      {\n        s.strstart += s.match_length;\n        s.match_length = 0;\n        s.ins_h = s.window[s.strstart];\n        /* UPDATE_HASH(s, s.ins_h, s.window[s.strstart+1]); */\n        s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + 1]);\n\n//#if MIN_MATCH != 3\n//                Call UPDATE_HASH() MIN_MATCH-3 more times\n//#endif\n        /* If lookahead < MIN_MATCH, ins_h is garbage, but it does not\n         * matter since it will be recomputed at next deflate call.\n         */\n      }\n    } else {\n      /* No match, output a literal byte */\n      //Tracevv((stderr,\"%c\", s.window[s.strstart]));\n      /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n      bflush = _tr_tally(s, 0, s.window[s.strstart]);\n\n      s.lookahead--;\n      s.strstart++;\n    }\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = ((s.strstart < (MIN_MATCH - 1)) ? s.strstart : MIN_MATCH - 1);\n  if (flush === Z_FINISH$3) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.last_lit) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n};\n\n/* ===========================================================================\n * Same as above, but achieves better compression. We use a lazy\n * evaluation for matches: a match is finally adopted only if there is\n * no better match at the next window position.\n */\nconst deflate_slow = (s, flush) => {\n\n  let hash_head;          /* head of hash chain */\n  let bflush;              /* set if current block must be flushed */\n\n  let max_insert;\n\n  /* Process the input block. */\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the next match, plus MIN_MATCH bytes to insert the\n     * string following the next match.\n     */\n    if (s.lookahead < MIN_LOOKAHEAD) {\n      fill_window(s);\n      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH$2) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) { break; } /* flush the current block */\n    }\n\n    /* Insert the string window[strstart .. strstart+2] in the\n     * dictionary, and set hash_head to the head of the hash chain:\n     */\n    hash_head = 0/*NIL*/;\n    if (s.lookahead >= MIN_MATCH) {\n      /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n      s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + MIN_MATCH - 1]);\n      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n      s.head[s.ins_h] = s.strstart;\n      /***/\n    }\n\n    /* Find the longest match, discarding those <= prev_length.\n     */\n    s.prev_length = s.match_length;\n    s.prev_match = s.match_start;\n    s.match_length = MIN_MATCH - 1;\n\n    if (hash_head !== 0/*NIL*/ && s.prev_length < s.max_lazy_match &&\n        s.strstart - hash_head <= (s.w_size - MIN_LOOKAHEAD)/*MAX_DIST(s)*/) {\n      /* To simplify the code, we prevent matches with the string\n       * of window index 0 (in particular we have to avoid a match\n       * of the string with itself at the start of the input file).\n       */\n      s.match_length = longest_match(s, hash_head);\n      /* longest_match() sets match_start */\n\n      if (s.match_length <= 5 &&\n         (s.strategy === Z_FILTERED || (s.match_length === MIN_MATCH && s.strstart - s.match_start > 4096/*TOO_FAR*/))) {\n\n        /* If prev_match is also MIN_MATCH, match_start is garbage\n         * but we will ignore the current match anyway.\n         */\n        s.match_length = MIN_MATCH - 1;\n      }\n    }\n    /* If there was a match at the previous step and the current\n     * match is not better, output the previous match:\n     */\n    if (s.prev_length >= MIN_MATCH && s.match_length <= s.prev_length) {\n      max_insert = s.strstart + s.lookahead - MIN_MATCH;\n      /* Do not insert strings in hash table beyond this. */\n\n      //check_match(s, s.strstart-1, s.prev_match, s.prev_length);\n\n      /***_tr_tally_dist(s, s.strstart - 1 - s.prev_match,\n                     s.prev_length - MIN_MATCH, bflush);***/\n      bflush = _tr_tally(s, s.strstart - 1 - s.prev_match, s.prev_length - MIN_MATCH);\n      /* Insert in hash table all strings up to the end of the match.\n       * strstart-1 and strstart are already inserted. If there is not\n       * enough lookahead, the last two strings are not inserted in\n       * the hash table.\n       */\n      s.lookahead -= s.prev_length - 1;\n      s.prev_length -= 2;\n      do {\n        if (++s.strstart <= max_insert) {\n          /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n          s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + MIN_MATCH - 1]);\n          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n          s.head[s.ins_h] = s.strstart;\n          /***/\n        }\n      } while (--s.prev_length !== 0);\n      s.match_available = 0;\n      s.match_length = MIN_MATCH - 1;\n      s.strstart++;\n\n      if (bflush) {\n        /*** FLUSH_BLOCK(s, 0); ***/\n        flush_block_only(s, false);\n        if (s.strm.avail_out === 0) {\n          return BS_NEED_MORE;\n        }\n        /***/\n      }\n\n    } else if (s.match_available) {\n      /* If there was no match at the previous position, output a\n       * single literal. If there was a match but the current match\n       * is longer, truncate the previous match to a single literal.\n       */\n      //Tracevv((stderr,\"%c\", s->window[s->strstart-1]));\n      /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/\n      bflush = _tr_tally(s, 0, s.window[s.strstart - 1]);\n\n      if (bflush) {\n        /*** FLUSH_BLOCK_ONLY(s, 0) ***/\n        flush_block_only(s, false);\n        /***/\n      }\n      s.strstart++;\n      s.lookahead--;\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n    } else {\n      /* There is no previous match to compare with, wait for\n       * the next step to decide.\n       */\n      s.match_available = 1;\n      s.strstart++;\n      s.lookahead--;\n    }\n  }\n  //Assert (flush != Z_NO_FLUSH, \"no flush?\");\n  if (s.match_available) {\n    //Tracevv((stderr,\"%c\", s->window[s->strstart-1]));\n    /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/\n    bflush = _tr_tally(s, 0, s.window[s.strstart - 1]);\n\n    s.match_available = 0;\n  }\n  s.insert = s.strstart < MIN_MATCH - 1 ? s.strstart : MIN_MATCH - 1;\n  if (flush === Z_FINISH$3) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.last_lit) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n\n  return BS_BLOCK_DONE;\n};\n\n\n/* ===========================================================================\n * For Z_RLE, simply look for runs of bytes, generate matches only of distance\n * one.  Do not maintain a hash table.  (It will be regenerated if this run of\n * deflate switches away from Z_RLE.)\n */\nconst deflate_rle = (s, flush) => {\n\n  let bflush;            /* set if current block must be flushed */\n  let prev;              /* byte at distance one to match */\n  let scan, strend;      /* scan goes up to strend for length of run */\n\n  const _win = s.window;\n\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the longest run, plus one for the unrolled loop.\n     */\n    if (s.lookahead <= MAX_MATCH) {\n      fill_window(s);\n      if (s.lookahead <= MAX_MATCH && flush === Z_NO_FLUSH$2) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) { break; } /* flush the current block */\n    }\n\n    /* See how many times the previous byte repeats */\n    s.match_length = 0;\n    if (s.lookahead >= MIN_MATCH && s.strstart > 0) {\n      scan = s.strstart - 1;\n      prev = _win[scan];\n      if (prev === _win[++scan] && prev === _win[++scan] && prev === _win[++scan]) {\n        strend = s.strstart + MAX_MATCH;\n        do {\n          /*jshint noempty:false*/\n        } while (prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 scan < strend);\n        s.match_length = MAX_MATCH - (strend - scan);\n        if (s.match_length > s.lookahead) {\n          s.match_length = s.lookahead;\n        }\n      }\n      //Assert(scan <= s->window+(uInt)(s->window_size-1), \"wild scan\");\n    }\n\n    /* Emit match if have run of MIN_MATCH or longer, else emit literal */\n    if (s.match_length >= MIN_MATCH) {\n      //check_match(s, s.strstart, s.strstart - 1, s.match_length);\n\n      /*** _tr_tally_dist(s, 1, s.match_length - MIN_MATCH, bflush); ***/\n      bflush = _tr_tally(s, 1, s.match_length - MIN_MATCH);\n\n      s.lookahead -= s.match_length;\n      s.strstart += s.match_length;\n      s.match_length = 0;\n    } else {\n      /* No match, output a literal byte */\n      //Tracevv((stderr,\"%c\", s->window[s->strstart]));\n      /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n      bflush = _tr_tally(s, 0, s.window[s.strstart]);\n\n      s.lookahead--;\n      s.strstart++;\n    }\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = 0;\n  if (flush === Z_FINISH$3) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.last_lit) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n};\n\n/* ===========================================================================\n * For Z_HUFFMAN_ONLY, do not look for matches.  Do not maintain a hash table.\n * (It will be regenerated if this run of deflate switches away from Huffman.)\n */\nconst deflate_huff = (s, flush) => {\n\n  let bflush;             /* set if current block must be flushed */\n\n  for (;;) {\n    /* Make sure that we have a literal to write. */\n    if (s.lookahead === 0) {\n      fill_window(s);\n      if (s.lookahead === 0) {\n        if (flush === Z_NO_FLUSH$2) {\n          return BS_NEED_MORE;\n        }\n        break;      /* flush the current block */\n      }\n    }\n\n    /* Output a literal byte */\n    s.match_length = 0;\n    //Tracevv((stderr,\"%c\", s->window[s->strstart]));\n    /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n    bflush = _tr_tally(s, 0, s.window[s.strstart]);\n    s.lookahead--;\n    s.strstart++;\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = 0;\n  if (flush === Z_FINISH$3) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.last_lit) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n};\n\n/* Values for max_lazy_match, good_match and max_chain_length, depending on\n * the desired pack level (0..9). The values given below have been tuned to\n * exclude worst case performance for pathological files. Better values may be\n * found for specific files.\n */\nfunction Config(good_length, max_lazy, nice_length, max_chain, func) {\n\n  this.good_length = good_length;\n  this.max_lazy = max_lazy;\n  this.nice_length = nice_length;\n  this.max_chain = max_chain;\n  this.func = func;\n}\n\nconst configuration_table = [\n  /*      good lazy nice chain */\n  new Config(0, 0, 0, 0, deflate_stored),          /* 0 store only */\n  new Config(4, 4, 8, 4, deflate_fast),            /* 1 max speed, no lazy matches */\n  new Config(4, 5, 16, 8, deflate_fast),           /* 2 */\n  new Config(4, 6, 32, 32, deflate_fast),          /* 3 */\n\n  new Config(4, 4, 16, 16, deflate_slow),          /* 4 lazy matches */\n  new Config(8, 16, 32, 32, deflate_slow),         /* 5 */\n  new Config(8, 16, 128, 128, deflate_slow),       /* 6 */\n  new Config(8, 32, 128, 256, deflate_slow),       /* 7 */\n  new Config(32, 128, 258, 1024, deflate_slow),    /* 8 */\n  new Config(32, 258, 258, 4096, deflate_slow)     /* 9 max compression */\n];\n\n\n/* ===========================================================================\n * Initialize the \"longest match\" routines for a new zlib stream\n */\nconst lm_init = (s) => {\n\n  s.window_size = 2 * s.w_size;\n\n  /*** CLEAR_HASH(s); ***/\n  zero(s.head); // Fill with NIL (= 0);\n\n  /* Set the default configuration parameters:\n   */\n  s.max_lazy_match = configuration_table[s.level].max_lazy;\n  s.good_match = configuration_table[s.level].good_length;\n  s.nice_match = configuration_table[s.level].nice_length;\n  s.max_chain_length = configuration_table[s.level].max_chain;\n\n  s.strstart = 0;\n  s.block_start = 0;\n  s.lookahead = 0;\n  s.insert = 0;\n  s.match_length = s.prev_length = MIN_MATCH - 1;\n  s.match_available = 0;\n  s.ins_h = 0;\n};\n\n\nfunction DeflateState() {\n  this.strm = null;            /* pointer back to this zlib stream */\n  this.status = 0;            /* as the name implies */\n  this.pending_buf = null;      /* output still pending */\n  this.pending_buf_size = 0;  /* size of pending_buf */\n  this.pending_out = 0;       /* next pending byte to output to the stream */\n  this.pending = 0;           /* nb of bytes in the pending buffer */\n  this.wrap = 0;              /* bit 0 true for zlib, bit 1 true for gzip */\n  this.gzhead = null;         /* gzip header information to write */\n  this.gzindex = 0;           /* where in extra, name, or comment */\n  this.method = Z_DEFLATED$2; /* can only be DEFLATED */\n  this.last_flush = -1;   /* value of flush param for previous deflate call */\n\n  this.w_size = 0;  /* LZ77 window size (32K by default) */\n  this.w_bits = 0;  /* log2(w_size)  (8..16) */\n  this.w_mask = 0;  /* w_size - 1 */\n\n  this.window = null;\n  /* Sliding window. Input bytes are read into the second half of the window,\n   * and move to the first half later to keep a dictionary of at least wSize\n   * bytes. With this organization, matches are limited to a distance of\n   * wSize-MAX_MATCH bytes, but this ensures that IO is always\n   * performed with a length multiple of the block size.\n   */\n\n  this.window_size = 0;\n  /* Actual size of window: 2*wSize, except when the user input buffer\n   * is directly used as sliding window.\n   */\n\n  this.prev = null;\n  /* Link to older string with same hash index. To limit the size of this\n   * array to 64K, this link is maintained only for the last 32K strings.\n   * An index in this array is thus a window index modulo 32K.\n   */\n\n  this.head = null;   /* Heads of the hash chains or NIL. */\n\n  this.ins_h = 0;       /* hash index of string to be inserted */\n  this.hash_size = 0;   /* number of elements in hash table */\n  this.hash_bits = 0;   /* log2(hash_size) */\n  this.hash_mask = 0;   /* hash_size-1 */\n\n  this.hash_shift = 0;\n  /* Number of bits by which ins_h must be shifted at each input\n   * step. It must be such that after MIN_MATCH steps, the oldest\n   * byte no longer takes part in the hash key, that is:\n   *   hash_shift * MIN_MATCH >= hash_bits\n   */\n\n  this.block_start = 0;\n  /* Window position at the beginning of the current output block. Gets\n   * negative when the window is moved backwards.\n   */\n\n  this.match_length = 0;      /* length of best match */\n  this.prev_match = 0;        /* previous match */\n  this.match_available = 0;   /* set if previous match exists */\n  this.strstart = 0;          /* start of string to insert */\n  this.match_start = 0;       /* start of matching string */\n  this.lookahead = 0;         /* number of valid bytes ahead in window */\n\n  this.prev_length = 0;\n  /* Length of the best match at previous step. Matches not greater than this\n   * are discarded. This is used in the lazy match evaluation.\n   */\n\n  this.max_chain_length = 0;\n  /* To speed up deflation, hash chains are never searched beyond this\n   * length.  A higher limit improves compression ratio but degrades the\n   * speed.\n   */\n\n  this.max_lazy_match = 0;\n  /* Attempt to find a better match only when the current match is strictly\n   * smaller than this value. This mechanism is used only for compression\n   * levels >= 4.\n   */\n  // That's alias to max_lazy_match, don't use directly\n  //this.max_insert_length = 0;\n  /* Insert new strings in the hash table only if the match length is not\n   * greater than this length. This saves time but degrades compression.\n   * max_insert_length is used only for compression levels <= 3.\n   */\n\n  this.level = 0;     /* compression level (1..9) */\n  this.strategy = 0;  /* favor or force Huffman coding*/\n\n  this.good_match = 0;\n  /* Use a faster search when the previous match is longer than this */\n\n  this.nice_match = 0; /* Stop searching when current match exceeds this */\n\n              /* used by trees.c: */\n\n  /* Didn't use ct_data typedef below to suppress compiler warning */\n\n  // struct ct_data_s dyn_ltree[HEAP_SIZE];   /* literal and length tree */\n  // struct ct_data_s dyn_dtree[2*D_CODES+1]; /* distance tree */\n  // struct ct_data_s bl_tree[2*BL_CODES+1];  /* Huffman tree for bit lengths */\n\n  // Use flat array of DOUBLE size, with interleaved fata,\n  // because JS does not support effective\n  this.dyn_ltree  = new Uint16Array(HEAP_SIZE * 2);\n  this.dyn_dtree  = new Uint16Array((2 * D_CODES + 1) * 2);\n  this.bl_tree    = new Uint16Array((2 * BL_CODES + 1) * 2);\n  zero(this.dyn_ltree);\n  zero(this.dyn_dtree);\n  zero(this.bl_tree);\n\n  this.l_desc   = null;         /* desc. for literal tree */\n  this.d_desc   = null;         /* desc. for distance tree */\n  this.bl_desc  = null;         /* desc. for bit length tree */\n\n  //ush bl_count[MAX_BITS+1];\n  this.bl_count = new Uint16Array(MAX_BITS + 1);\n  /* number of codes at each bit length for an optimal tree */\n\n  //int heap[2*L_CODES+1];      /* heap used to build the Huffman trees */\n  this.heap = new Uint16Array(2 * L_CODES + 1);  /* heap used to build the Huffman trees */\n  zero(this.heap);\n\n  this.heap_len = 0;               /* number of elements in the heap */\n  this.heap_max = 0;               /* element of largest frequency */\n  /* The sons of heap[n] are heap[2*n] and heap[2*n+1]. heap[0] is not used.\n   * The same heap array is used to build all trees.\n   */\n\n  this.depth = new Uint16Array(2 * L_CODES + 1); //uch depth[2*L_CODES+1];\n  zero(this.depth);\n  /* Depth of each subtree used as tie breaker for trees of equal frequency\n   */\n\n  this.l_buf = 0;          /* buffer index for literals or lengths */\n\n  this.lit_bufsize = 0;\n  /* Size of match buffer for literals/lengths.  There are 4 reasons for\n   * limiting lit_bufsize to 64K:\n   *   - frequencies can be kept in 16 bit counters\n   *   - if compression is not successful for the first block, all input\n   *     data is still in the window so we can still emit a stored block even\n   *     when input comes from standard input.  (This can also be done for\n   *     all blocks if lit_bufsize is not greater than 32K.)\n   *   - if compression is not successful for a file smaller than 64K, we can\n   *     even emit a stored file instead of a stored block (saving 5 bytes).\n   *     This is applicable only for zip (not gzip or zlib).\n   *   - creating new Huffman trees less frequently may not provide fast\n   *     adaptation to changes in the input data statistics. (Take for\n   *     example a binary file with poorly compressible code followed by\n   *     a highly compressible string table.) Smaller buffer sizes give\n   *     fast adaptation but have of course the overhead of transmitting\n   *     trees more frequently.\n   *   - I can't count above 4\n   */\n\n  this.last_lit = 0;      /* running index in l_buf */\n\n  this.d_buf = 0;\n  /* Buffer index for distances. To simplify the code, d_buf and l_buf have\n   * the same number of elements. To use different lengths, an extra flag\n   * array would be necessary.\n   */\n\n  this.opt_len = 0;       /* bit length of current block with optimal trees */\n  this.static_len = 0;    /* bit length of current block with static trees */\n  this.matches = 0;       /* number of string matches in current block */\n  this.insert = 0;        /* bytes at end of window left to insert */\n\n\n  this.bi_buf = 0;\n  /* Output buffer. bits are inserted starting at the bottom (least\n   * significant bits).\n   */\n  this.bi_valid = 0;\n  /* Number of valid bits in bi_buf.  All bits above the last valid bit\n   * are always zero.\n   */\n\n  // Used for window memory init. We safely ignore it for JS. That makes\n  // sense only for pointers and memory check tools.\n  //this.high_water = 0;\n  /* High water mark offset in window for initialized bytes -- bytes above\n   * this are set to zero in order to avoid memory check warnings when\n   * longest match routines access bytes past the input.  This is then\n   * updated to the new high water mark.\n   */\n}\n\n\nconst deflateResetKeep = (strm) => {\n\n  if (!strm || !strm.state) {\n    return err(strm, Z_STREAM_ERROR$2);\n  }\n\n  strm.total_in = strm.total_out = 0;\n  strm.data_type = Z_UNKNOWN;\n\n  const s = strm.state;\n  s.pending = 0;\n  s.pending_out = 0;\n\n  if (s.wrap < 0) {\n    s.wrap = -s.wrap;\n    /* was made negative by deflate(..., Z_FINISH); */\n  }\n  s.status = (s.wrap ? INIT_STATE : BUSY_STATE);\n  strm.adler = (s.wrap === 2) ?\n    0  // crc32(0, Z_NULL, 0)\n  :\n    1; // adler32(0, Z_NULL, 0)\n  s.last_flush = Z_NO_FLUSH$2;\n  _tr_init(s);\n  return Z_OK$3;\n};\n\n\nconst deflateReset = (strm) => {\n\n  const ret = deflateResetKeep(strm);\n  if (ret === Z_OK$3) {\n    lm_init(strm.state);\n  }\n  return ret;\n};\n\n\nconst deflateSetHeader = (strm, head) => {\n\n  if (!strm || !strm.state) { return Z_STREAM_ERROR$2; }\n  if (strm.state.wrap !== 2) { return Z_STREAM_ERROR$2; }\n  strm.state.gzhead = head;\n  return Z_OK$3;\n};\n\n\nconst deflateInit2 = (strm, level, method, windowBits, memLevel, strategy) => {\n\n  if (!strm) { // === Z_NULL\n    return Z_STREAM_ERROR$2;\n  }\n  let wrap = 1;\n\n  if (level === Z_DEFAULT_COMPRESSION$1) {\n    level = 6;\n  }\n\n  if (windowBits < 0) { /* suppress zlib wrapper */\n    wrap = 0;\n    windowBits = -windowBits;\n  }\n\n  else if (windowBits > 15) {\n    wrap = 2;           /* write gzip wrapper instead */\n    windowBits -= 16;\n  }\n\n\n  if (memLevel < 1 || memLevel > MAX_MEM_LEVEL || method !== Z_DEFLATED$2 ||\n    windowBits < 8 || windowBits > 15 || level < 0 || level > 9 ||\n    strategy < 0 || strategy > Z_FIXED) {\n    return err(strm, Z_STREAM_ERROR$2);\n  }\n\n\n  if (windowBits === 8) {\n    windowBits = 9;\n  }\n  /* until 256-byte window bug fixed */\n\n  const s = new DeflateState();\n\n  strm.state = s;\n  s.strm = strm;\n\n  s.wrap = wrap;\n  s.gzhead = null;\n  s.w_bits = windowBits;\n  s.w_size = 1 << s.w_bits;\n  s.w_mask = s.w_size - 1;\n\n  s.hash_bits = memLevel + 7;\n  s.hash_size = 1 << s.hash_bits;\n  s.hash_mask = s.hash_size - 1;\n  s.hash_shift = ~~((s.hash_bits + MIN_MATCH - 1) / MIN_MATCH);\n\n  s.window = new Uint8Array(s.w_size * 2);\n  s.head = new Uint16Array(s.hash_size);\n  s.prev = new Uint16Array(s.w_size);\n\n  // Don't need mem init magic for JS.\n  //s.high_water = 0;  /* nothing written to s->window yet */\n\n  s.lit_bufsize = 1 << (memLevel + 6); /* 16K elements by default */\n\n  s.pending_buf_size = s.lit_bufsize * 4;\n\n  //overlay = (ushf *) ZALLOC(strm, s->lit_bufsize, sizeof(ush)+2);\n  //s->pending_buf = (uchf *) overlay;\n  s.pending_buf = new Uint8Array(s.pending_buf_size);\n\n  // It is offset from `s.pending_buf` (size is `s.lit_bufsize * 2`)\n  //s->d_buf = overlay + s->lit_bufsize/sizeof(ush);\n  s.d_buf = 1 * s.lit_bufsize;\n\n  //s->l_buf = s->pending_buf + (1+sizeof(ush))*s->lit_bufsize;\n  s.l_buf = (1 + 2) * s.lit_bufsize;\n\n  s.level = level;\n  s.strategy = strategy;\n  s.method = method;\n\n  return deflateReset(strm);\n};\n\nconst deflateInit = (strm, level) => {\n\n  return deflateInit2(strm, level, Z_DEFLATED$2, MAX_WBITS$1, DEF_MEM_LEVEL, Z_DEFAULT_STRATEGY$1);\n};\n\n\nconst deflate$2 = (strm, flush) => {\n\n  let beg, val; // for gzip header write only\n\n  if (!strm || !strm.state ||\n    flush > Z_BLOCK$1 || flush < 0) {\n    return strm ? err(strm, Z_STREAM_ERROR$2) : Z_STREAM_ERROR$2;\n  }\n\n  const s = strm.state;\n\n  if (!strm.output ||\n      (!strm.input && strm.avail_in !== 0) ||\n      (s.status === FINISH_STATE && flush !== Z_FINISH$3)) {\n    return err(strm, (strm.avail_out === 0) ? Z_BUF_ERROR$1 : Z_STREAM_ERROR$2);\n  }\n\n  s.strm = strm; /* just in case */\n  const old_flush = s.last_flush;\n  s.last_flush = flush;\n\n  /* Write the header */\n  if (s.status === INIT_STATE) {\n\n    if (s.wrap === 2) { // GZIP header\n      strm.adler = 0;  //crc32(0L, Z_NULL, 0);\n      put_byte(s, 31);\n      put_byte(s, 139);\n      put_byte(s, 8);\n      if (!s.gzhead) { // s->gzhead == Z_NULL\n        put_byte(s, 0);\n        put_byte(s, 0);\n        put_byte(s, 0);\n        put_byte(s, 0);\n        put_byte(s, 0);\n        put_byte(s, s.level === 9 ? 2 :\n                    (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ?\n                     4 : 0));\n        put_byte(s, OS_CODE);\n        s.status = BUSY_STATE;\n      }\n      else {\n        put_byte(s, (s.gzhead.text ? 1 : 0) +\n                    (s.gzhead.hcrc ? 2 : 0) +\n                    (!s.gzhead.extra ? 0 : 4) +\n                    (!s.gzhead.name ? 0 : 8) +\n                    (!s.gzhead.comment ? 0 : 16)\n        );\n        put_byte(s, s.gzhead.time & 0xff);\n        put_byte(s, (s.gzhead.time >> 8) & 0xff);\n        put_byte(s, (s.gzhead.time >> 16) & 0xff);\n        put_byte(s, (s.gzhead.time >> 24) & 0xff);\n        put_byte(s, s.level === 9 ? 2 :\n                    (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ?\n                     4 : 0));\n        put_byte(s, s.gzhead.os & 0xff);\n        if (s.gzhead.extra && s.gzhead.extra.length) {\n          put_byte(s, s.gzhead.extra.length & 0xff);\n          put_byte(s, (s.gzhead.extra.length >> 8) & 0xff);\n        }\n        if (s.gzhead.hcrc) {\n          strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending, 0);\n        }\n        s.gzindex = 0;\n        s.status = EXTRA_STATE;\n      }\n    }\n    else // DEFLATE header\n    {\n      let header = (Z_DEFLATED$2 + ((s.w_bits - 8) << 4)) << 8;\n      let level_flags = -1;\n\n      if (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2) {\n        level_flags = 0;\n      } else if (s.level < 6) {\n        level_flags = 1;\n      } else if (s.level === 6) {\n        level_flags = 2;\n      } else {\n        level_flags = 3;\n      }\n      header |= (level_flags << 6);\n      if (s.strstart !== 0) { header |= PRESET_DICT; }\n      header += 31 - (header % 31);\n\n      s.status = BUSY_STATE;\n      putShortMSB(s, header);\n\n      /* Save the adler32 of the preset dictionary: */\n      if (s.strstart !== 0) {\n        putShortMSB(s, strm.adler >>> 16);\n        putShortMSB(s, strm.adler & 0xffff);\n      }\n      strm.adler = 1; // adler32(0L, Z_NULL, 0);\n    }\n  }\n\n//#ifdef GZIP\n  if (s.status === EXTRA_STATE) {\n    if (s.gzhead.extra/* != Z_NULL*/) {\n      beg = s.pending;  /* start of bytes to update crc */\n\n      while (s.gzindex < (s.gzhead.extra.length & 0xffff)) {\n        if (s.pending === s.pending_buf_size) {\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          flush_pending(strm);\n          beg = s.pending;\n          if (s.pending === s.pending_buf_size) {\n            break;\n          }\n        }\n        put_byte(s, s.gzhead.extra[s.gzindex] & 0xff);\n        s.gzindex++;\n      }\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      if (s.gzindex === s.gzhead.extra.length) {\n        s.gzindex = 0;\n        s.status = NAME_STATE;\n      }\n    }\n    else {\n      s.status = NAME_STATE;\n    }\n  }\n  if (s.status === NAME_STATE) {\n    if (s.gzhead.name/* != Z_NULL*/) {\n      beg = s.pending;  /* start of bytes to update crc */\n      //int val;\n\n      do {\n        if (s.pending === s.pending_buf_size) {\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          flush_pending(strm);\n          beg = s.pending;\n          if (s.pending === s.pending_buf_size) {\n            val = 1;\n            break;\n          }\n        }\n        // JS specific: little magic to add zero terminator to end of string\n        if (s.gzindex < s.gzhead.name.length) {\n          val = s.gzhead.name.charCodeAt(s.gzindex++) & 0xff;\n        } else {\n          val = 0;\n        }\n        put_byte(s, val);\n      } while (val !== 0);\n\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      if (val === 0) {\n        s.gzindex = 0;\n        s.status = COMMENT_STATE;\n      }\n    }\n    else {\n      s.status = COMMENT_STATE;\n    }\n  }\n  if (s.status === COMMENT_STATE) {\n    if (s.gzhead.comment/* != Z_NULL*/) {\n      beg = s.pending;  /* start of bytes to update crc */\n      //int val;\n\n      do {\n        if (s.pending === s.pending_buf_size) {\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          flush_pending(strm);\n          beg = s.pending;\n          if (s.pending === s.pending_buf_size) {\n            val = 1;\n            break;\n          }\n        }\n        // JS specific: little magic to add zero terminator to end of string\n        if (s.gzindex < s.gzhead.comment.length) {\n          val = s.gzhead.comment.charCodeAt(s.gzindex++) & 0xff;\n        } else {\n          val = 0;\n        }\n        put_byte(s, val);\n      } while (val !== 0);\n\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      if (val === 0) {\n        s.status = HCRC_STATE;\n      }\n    }\n    else {\n      s.status = HCRC_STATE;\n    }\n  }\n  if (s.status === HCRC_STATE) {\n    if (s.gzhead.hcrc) {\n      if (s.pending + 2 > s.pending_buf_size) {\n        flush_pending(strm);\n      }\n      if (s.pending + 2 <= s.pending_buf_size) {\n        put_byte(s, strm.adler & 0xff);\n        put_byte(s, (strm.adler >> 8) & 0xff);\n        strm.adler = 0; //crc32(0L, Z_NULL, 0);\n        s.status = BUSY_STATE;\n      }\n    }\n    else {\n      s.status = BUSY_STATE;\n    }\n  }\n//#endif\n\n  /* Flush as much pending output as possible */\n  if (s.pending !== 0) {\n    flush_pending(strm);\n    if (strm.avail_out === 0) {\n      /* Since avail_out is 0, deflate will be called again with\n       * more output space, but possibly with both pending and\n       * avail_in equal to zero. There won't be anything to do,\n       * but this is not an error situation so make sure we\n       * return OK instead of BUF_ERROR at next call of deflate:\n       */\n      s.last_flush = -1;\n      return Z_OK$3;\n    }\n\n    /* Make sure there is something to do and avoid duplicate consecutive\n     * flushes. For repeated and useless calls with Z_FINISH, we keep\n     * returning Z_STREAM_END instead of Z_BUF_ERROR.\n     */\n  } else if (strm.avail_in === 0 && rank(flush) <= rank(old_flush) &&\n    flush !== Z_FINISH$3) {\n    return err(strm, Z_BUF_ERROR$1);\n  }\n\n  /* User must not provide more input after the first FINISH: */\n  if (s.status === FINISH_STATE && strm.avail_in !== 0) {\n    return err(strm, Z_BUF_ERROR$1);\n  }\n\n  /* Start a new block or continue the current one.\n   */\n  if (strm.avail_in !== 0 || s.lookahead !== 0 ||\n    (flush !== Z_NO_FLUSH$2 && s.status !== FINISH_STATE)) {\n    let bstate = (s.strategy === Z_HUFFMAN_ONLY) ? deflate_huff(s, flush) :\n      (s.strategy === Z_RLE ? deflate_rle(s, flush) :\n        configuration_table[s.level].func(s, flush));\n\n    if (bstate === BS_FINISH_STARTED || bstate === BS_FINISH_DONE) {\n      s.status = FINISH_STATE;\n    }\n    if (bstate === BS_NEED_MORE || bstate === BS_FINISH_STARTED) {\n      if (strm.avail_out === 0) {\n        s.last_flush = -1;\n        /* avoid BUF_ERROR next call, see above */\n      }\n      return Z_OK$3;\n      /* If flush != Z_NO_FLUSH && avail_out == 0, the next call\n       * of deflate should use the same flush parameter to make sure\n       * that the flush is complete. So we don't have to output an\n       * empty block here, this will be done at next call. This also\n       * ensures that for a very small output buffer, we emit at most\n       * one empty block.\n       */\n    }\n    if (bstate === BS_BLOCK_DONE) {\n      if (flush === Z_PARTIAL_FLUSH) {\n        _tr_align(s);\n      }\n      else if (flush !== Z_BLOCK$1) { /* FULL_FLUSH or SYNC_FLUSH */\n\n        _tr_stored_block(s, 0, 0, false);\n        /* For a full flush, this empty block will be recognized\n         * as a special marker by inflate_sync().\n         */\n        if (flush === Z_FULL_FLUSH$1) {\n          /*** CLEAR_HASH(s); ***/             /* forget history */\n          zero(s.head); // Fill with NIL (= 0);\n\n          if (s.lookahead === 0) {\n            s.strstart = 0;\n            s.block_start = 0;\n            s.insert = 0;\n          }\n        }\n      }\n      flush_pending(strm);\n      if (strm.avail_out === 0) {\n        s.last_flush = -1; /* avoid BUF_ERROR at next call, see above */\n        return Z_OK$3;\n      }\n    }\n  }\n  //Assert(strm->avail_out > 0, \"bug2\");\n  //if (strm.avail_out <= 0) { throw new Error(\"bug2\");}\n\n  if (flush !== Z_FINISH$3) { return Z_OK$3; }\n  if (s.wrap <= 0) { return Z_STREAM_END$3; }\n\n  /* Write the trailer */\n  if (s.wrap === 2) {\n    put_byte(s, strm.adler & 0xff);\n    put_byte(s, (strm.adler >> 8) & 0xff);\n    put_byte(s, (strm.adler >> 16) & 0xff);\n    put_byte(s, (strm.adler >> 24) & 0xff);\n    put_byte(s, strm.total_in & 0xff);\n    put_byte(s, (strm.total_in >> 8) & 0xff);\n    put_byte(s, (strm.total_in >> 16) & 0xff);\n    put_byte(s, (strm.total_in >> 24) & 0xff);\n  }\n  else\n  {\n    putShortMSB(s, strm.adler >>> 16);\n    putShortMSB(s, strm.adler & 0xffff);\n  }\n\n  flush_pending(strm);\n  /* If avail_out is zero, the application will call deflate again\n   * to flush the rest.\n   */\n  if (s.wrap > 0) { s.wrap = -s.wrap; }\n  /* write the trailer only once! */\n  return s.pending !== 0 ? Z_OK$3 : Z_STREAM_END$3;\n};\n\n\nconst deflateEnd = (strm) => {\n\n  if (!strm/*== Z_NULL*/ || !strm.state/*== Z_NULL*/) {\n    return Z_STREAM_ERROR$2;\n  }\n\n  const status = strm.state.status;\n  if (status !== INIT_STATE &&\n    status !== EXTRA_STATE &&\n    status !== NAME_STATE &&\n    status !== COMMENT_STATE &&\n    status !== HCRC_STATE &&\n    status !== BUSY_STATE &&\n    status !== FINISH_STATE\n  ) {\n    return err(strm, Z_STREAM_ERROR$2);\n  }\n\n  strm.state = null;\n\n  return status === BUSY_STATE ? err(strm, Z_DATA_ERROR$2) : Z_OK$3;\n};\n\n\n/* =========================================================================\n * Initializes the compression dictionary from the given byte\n * sequence without producing any compressed output.\n */\nconst deflateSetDictionary = (strm, dictionary) => {\n\n  let dictLength = dictionary.length;\n\n  if (!strm/*== Z_NULL*/ || !strm.state/*== Z_NULL*/) {\n    return Z_STREAM_ERROR$2;\n  }\n\n  const s = strm.state;\n  const wrap = s.wrap;\n\n  if (wrap === 2 || (wrap === 1 && s.status !== INIT_STATE) || s.lookahead) {\n    return Z_STREAM_ERROR$2;\n  }\n\n  /* when using zlib wrappers, compute Adler-32 for provided dictionary */\n  if (wrap === 1) {\n    /* adler32(strm->adler, dictionary, dictLength); */\n    strm.adler = adler32_1(strm.adler, dictionary, dictLength, 0);\n  }\n\n  s.wrap = 0;   /* avoid computing Adler-32 in read_buf */\n\n  /* if dictionary would fill window, just replace the history */\n  if (dictLength >= s.w_size) {\n    if (wrap === 0) {            /* already empty otherwise */\n      /*** CLEAR_HASH(s); ***/\n      zero(s.head); // Fill with NIL (= 0);\n      s.strstart = 0;\n      s.block_start = 0;\n      s.insert = 0;\n    }\n    /* use the tail */\n    // dictionary = dictionary.slice(dictLength - s.w_size);\n    let tmpDict = new Uint8Array(s.w_size);\n    tmpDict.set(dictionary.subarray(dictLength - s.w_size, dictLength), 0);\n    dictionary = tmpDict;\n    dictLength = s.w_size;\n  }\n  /* insert dictionary into window and hash */\n  const avail = strm.avail_in;\n  const next = strm.next_in;\n  const input = strm.input;\n  strm.avail_in = dictLength;\n  strm.next_in = 0;\n  strm.input = dictionary;\n  fill_window(s);\n  while (s.lookahead >= MIN_MATCH) {\n    let str = s.strstart;\n    let n = s.lookahead - (MIN_MATCH - 1);\n    do {\n      /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */\n      s.ins_h = HASH(s, s.ins_h, s.window[str + MIN_MATCH - 1]);\n\n      s.prev[str & s.w_mask] = s.head[s.ins_h];\n\n      s.head[s.ins_h] = str;\n      str++;\n    } while (--n);\n    s.strstart = str;\n    s.lookahead = MIN_MATCH - 1;\n    fill_window(s);\n  }\n  s.strstart += s.lookahead;\n  s.block_start = s.strstart;\n  s.insert = s.lookahead;\n  s.lookahead = 0;\n  s.match_length = s.prev_length = MIN_MATCH - 1;\n  s.match_available = 0;\n  strm.next_in = next;\n  strm.input = input;\n  strm.avail_in = avail;\n  s.wrap = wrap;\n  return Z_OK$3;\n};\n\n\nvar deflateInit_1 = deflateInit;\nvar deflateInit2_1 = deflateInit2;\nvar deflateReset_1 = deflateReset;\nvar deflateResetKeep_1 = deflateResetKeep;\nvar deflateSetHeader_1 = deflateSetHeader;\nvar deflate_2$1 = deflate$2;\nvar deflateEnd_1 = deflateEnd;\nvar deflateSetDictionary_1 = deflateSetDictionary;\nvar deflateInfo = 'pako deflate (from Nodeca project)';\n\n/* Not implemented\nmodule.exports.deflateBound = deflateBound;\nmodule.exports.deflateCopy = deflateCopy;\nmodule.exports.deflateParams = deflateParams;\nmodule.exports.deflatePending = deflatePending;\nmodule.exports.deflatePrime = deflatePrime;\nmodule.exports.deflateTune = deflateTune;\n*/\n\nvar deflate_1$2 = {\n\tdeflateInit: deflateInit_1,\n\tdeflateInit2: deflateInit2_1,\n\tdeflateReset: deflateReset_1,\n\tdeflateResetKeep: deflateResetKeep_1,\n\tdeflateSetHeader: deflateSetHeader_1,\n\tdeflate: deflate_2$1,\n\tdeflateEnd: deflateEnd_1,\n\tdeflateSetDictionary: deflateSetDictionary_1,\n\tdeflateInfo: deflateInfo\n};\n\nconst _has = (obj, key) => {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n};\n\nvar assign = function (obj /*from1, from2, from3, ...*/) {\n  const sources = Array.prototype.slice.call(arguments, 1);\n  while (sources.length) {\n    const source = sources.shift();\n    if (!source) { continue; }\n\n    if (typeof source !== 'object') {\n      throw new TypeError(source + 'must be non-object');\n    }\n\n    for (const p in source) {\n      if (_has(source, p)) {\n        obj[p] = source[p];\n      }\n    }\n  }\n\n  return obj;\n};\n\n\n// Join array of chunks to single array.\nvar flattenChunks = (chunks) => {\n  // calculate data length\n  let len = 0;\n\n  for (let i = 0, l = chunks.length; i < l; i++) {\n    len += chunks[i].length;\n  }\n\n  // join chunks\n  const result = new Uint8Array(len);\n\n  for (let i = 0, pos = 0, l = chunks.length; i < l; i++) {\n    let chunk = chunks[i];\n    result.set(chunk, pos);\n    pos += chunk.length;\n  }\n\n  return result;\n};\n\nvar common = {\n\tassign: assign,\n\tflattenChunks: flattenChunks\n};\n\n// String encode/decode helpers\n\n\n// Quick check if we can use fast array to bin string conversion\n//\n// - apply(Array) can fail on Android 2.2\n// - apply(Uint8Array) can fail on iOS 5.1 Safari\n//\nlet STR_APPLY_UIA_OK = true;\n\ntry { String.fromCharCode.apply(null, new Uint8Array(1)); } catch (__) { STR_APPLY_UIA_OK = false; }\n\n\n// Table with utf8 lengths (calculated by first byte of sequence)\n// Note, that 5 & 6-byte values and some 4-byte values can not be represented in JS,\n// because max possible codepoint is 0x10ffff\nconst _utf8len = new Uint8Array(256);\nfor (let q = 0; q < 256; q++) {\n  _utf8len[q] = (q >= 252 ? 6 : q >= 248 ? 5 : q >= 240 ? 4 : q >= 224 ? 3 : q >= 192 ? 2 : 1);\n}\n_utf8len[254] = _utf8len[254] = 1; // Invalid sequence start\n\n\n// convert string to array (typed, when possible)\nvar string2buf = (str) => {\n  if (typeof TextEncoder === 'function' && TextEncoder.prototype.encode) {\n    return new TextEncoder().encode(str);\n  }\n\n  let buf, c, c2, m_pos, i, str_len = str.length, buf_len = 0;\n\n  // count binary size\n  for (m_pos = 0; m_pos < str_len; m_pos++) {\n    c = str.charCodeAt(m_pos);\n    if ((c & 0xfc00) === 0xd800 && (m_pos + 1 < str_len)) {\n      c2 = str.charCodeAt(m_pos + 1);\n      if ((c2 & 0xfc00) === 0xdc00) {\n        c = 0x10000 + ((c - 0xd800) << 10) + (c2 - 0xdc00);\n        m_pos++;\n      }\n    }\n    buf_len += c < 0x80 ? 1 : c < 0x800 ? 2 : c < 0x10000 ? 3 : 4;\n  }\n\n  // allocate buffer\n  buf = new Uint8Array(buf_len);\n\n  // convert\n  for (i = 0, m_pos = 0; i < buf_len; m_pos++) {\n    c = str.charCodeAt(m_pos);\n    if ((c & 0xfc00) === 0xd800 && (m_pos + 1 < str_len)) {\n      c2 = str.charCodeAt(m_pos + 1);\n      if ((c2 & 0xfc00) === 0xdc00) {\n        c = 0x10000 + ((c - 0xd800) << 10) + (c2 - 0xdc00);\n        m_pos++;\n      }\n    }\n    if (c < 0x80) {\n      /* one byte */\n      buf[i++] = c;\n    } else if (c < 0x800) {\n      /* two bytes */\n      buf[i++] = 0xC0 | (c >>> 6);\n      buf[i++] = 0x80 | (c & 0x3f);\n    } else if (c < 0x10000) {\n      /* three bytes */\n      buf[i++] = 0xE0 | (c >>> 12);\n      buf[i++] = 0x80 | (c >>> 6 & 0x3f);\n      buf[i++] = 0x80 | (c & 0x3f);\n    } else {\n      /* four bytes */\n      buf[i++] = 0xf0 | (c >>> 18);\n      buf[i++] = 0x80 | (c >>> 12 & 0x3f);\n      buf[i++] = 0x80 | (c >>> 6 & 0x3f);\n      buf[i++] = 0x80 | (c & 0x3f);\n    }\n  }\n\n  return buf;\n};\n\n// Helper\nconst buf2binstring = (buf, len) => {\n  // On Chrome, the arguments in a function call that are allowed is `65534`.\n  // If the length of the buffer is smaller than that, we can use this optimization,\n  // otherwise we will take a slower path.\n  if (len < 65534) {\n    if (buf.subarray && STR_APPLY_UIA_OK) {\n      return String.fromCharCode.apply(null, buf.length === len ? buf : buf.subarray(0, len));\n    }\n  }\n\n  let result = '';\n  for (let i = 0; i < len; i++) {\n    result += String.fromCharCode(buf[i]);\n  }\n  return result;\n};\n\n\n// convert array to string\nvar buf2string = (buf, max) => {\n  const len = max || buf.length;\n\n  if (typeof TextDecoder === 'function' && TextDecoder.prototype.decode) {\n    return new TextDecoder().decode(buf.subarray(0, max));\n  }\n\n  let i, out;\n\n  // Reserve max possible length (2 words per char)\n  // NB: by unknown reasons, Array is significantly faster for\n  //     String.fromCharCode.apply than Uint16Array.\n  const utf16buf = new Array(len * 2);\n\n  for (out = 0, i = 0; i < len;) {\n    let c = buf[i++];\n    // quick process ascii\n    if (c < 0x80) { utf16buf[out++] = c; continue; }\n\n    let c_len = _utf8len[c];\n    // skip 5 & 6 byte codes\n    if (c_len > 4) { utf16buf[out++] = 0xfffd; i += c_len - 1; continue; }\n\n    // apply mask on first byte\n    c &= c_len === 2 ? 0x1f : c_len === 3 ? 0x0f : 0x07;\n    // join the rest\n    while (c_len > 1 && i < len) {\n      c = (c << 6) | (buf[i++] & 0x3f);\n      c_len--;\n    }\n\n    // terminated by end of string?\n    if (c_len > 1) { utf16buf[out++] = 0xfffd; continue; }\n\n    if (c < 0x10000) {\n      utf16buf[out++] = c;\n    } else {\n      c -= 0x10000;\n      utf16buf[out++] = 0xd800 | ((c >> 10) & 0x3ff);\n      utf16buf[out++] = 0xdc00 | (c & 0x3ff);\n    }\n  }\n\n  return buf2binstring(utf16buf, out);\n};\n\n\n// Calculate max possible position in utf8 buffer,\n// that will not break sequence. If that's not possible\n// - (very small limits) return max size as is.\n//\n// buf[] - utf8 bytes array\n// max   - length limit (mandatory);\nvar utf8border = (buf, max) => {\n\n  max = max || buf.length;\n  if (max > buf.length) { max = buf.length; }\n\n  // go back from last position, until start of sequence found\n  let pos = max - 1;\n  while (pos >= 0 && (buf[pos] & 0xC0) === 0x80) { pos--; }\n\n  // Very small and broken sequence,\n  // return max, because we should return something anyway.\n  if (pos < 0) { return max; }\n\n  // If we came to start of buffer - that means buffer is too small,\n  // return max too.\n  if (pos === 0) { return max; }\n\n  return (pos + _utf8len[buf[pos]] > max) ? pos : max;\n};\n\nvar strings = {\n\tstring2buf: string2buf,\n\tbuf2string: buf2string,\n\tutf8border: utf8border\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nfunction ZStream() {\n  /* next input byte */\n  this.input = null; // JS specific, because we have no pointers\n  this.next_in = 0;\n  /* number of bytes available at input */\n  this.avail_in = 0;\n  /* total number of input bytes read so far */\n  this.total_in = 0;\n  /* next output byte should be put there */\n  this.output = null; // JS specific, because we have no pointers\n  this.next_out = 0;\n  /* remaining free space at output */\n  this.avail_out = 0;\n  /* total number of bytes output so far */\n  this.total_out = 0;\n  /* last error message, NULL if no error */\n  this.msg = ''/*Z_NULL*/;\n  /* not visible by applications */\n  this.state = null;\n  /* best guess about the data type: binary or text */\n  this.data_type = 2/*Z_UNKNOWN*/;\n  /* adler32 value of the uncompressed data */\n  this.adler = 0;\n}\n\nvar zstream = ZStream;\n\nconst toString$1 = Object.prototype.toString;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nconst {\n  Z_NO_FLUSH: Z_NO_FLUSH$1, Z_SYNC_FLUSH, Z_FULL_FLUSH, Z_FINISH: Z_FINISH$2,\n  Z_OK: Z_OK$2, Z_STREAM_END: Z_STREAM_END$2,\n  Z_DEFAULT_COMPRESSION,\n  Z_DEFAULT_STRATEGY,\n  Z_DEFLATED: Z_DEFLATED$1\n} = constants$2;\n\n/* ===========================================================================*/\n\n\n/**\n * class Deflate\n *\n * Generic JS-style wrapper for zlib calls. If you don't need\n * streaming behaviour - use more simple functions: [[deflate]],\n * [[deflateRaw]] and [[gzip]].\n **/\n\n/* internal\n * Deflate.chunks -> Array\n *\n * Chunks of output data, if [[Deflate#onData]] not overridden.\n **/\n\n/**\n * Deflate.result -> Uint8Array\n *\n * Compressed result, generated by default [[Deflate#onData]]\n * and [[Deflate#onEnd]] handlers. Filled after you push last chunk\n * (call [[Deflate#push]] with `Z_FINISH` / `true` param).\n **/\n\n/**\n * Deflate.err -> Number\n *\n * Error code after deflate finished. 0 (Z_OK) on success.\n * You will not need it in real life, because deflate errors\n * are possible only on wrong options or bad `onData` / `onEnd`\n * custom handlers.\n **/\n\n/**\n * Deflate.msg -> String\n *\n * Error message, if [[Deflate.err]] != 0\n **/\n\n\n/**\n * new Deflate(options)\n * - options (Object): zlib deflate options.\n *\n * Creates new deflator instance with specified params. Throws exception\n * on bad params. Supported options:\n *\n * - `level`\n * - `windowBits`\n * - `memLevel`\n * - `strategy`\n * - `dictionary`\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Additional options, for internal needs:\n *\n * - `chunkSize` - size of generated data chunks (16K by default)\n * - `raw` (Boolean) - do raw deflate\n * - `gzip` (Boolean) - create gzip wrapper\n * - `header` (Object) - custom header for gzip\n *   - `text` (Boolean) - true if compressed data believed to be text\n *   - `time` (Number) - modification time, unix timestamp\n *   - `os` (Number) - operation system code\n *   - `extra` (Array) - array of bytes with extra data (max 65536)\n *   - `name` (String) - file name (binary string)\n *   - `comment` (String) - comment (binary string)\n *   - `hcrc` (Boolean) - true if header crc should be added\n *\n * ##### Example:\n *\n * ```javascript\n * const pako = require('pako')\n *   , chunk1 = new Uint8Array([1,2,3,4,5,6,7,8,9])\n *   , chunk2 = new Uint8Array([10,11,12,13,14,15,16,17,18,19]);\n *\n * const deflate = new pako.Deflate({ level: 3});\n *\n * deflate.push(chunk1, false);\n * deflate.push(chunk2, true);  // true -> last chunk\n *\n * if (deflate.err) { throw new Error(deflate.err); }\n *\n * console.log(deflate.result);\n * ```\n **/\nfunction Deflate$1(options) {\n  this.options = common.assign({\n    level: Z_DEFAULT_COMPRESSION,\n    method: Z_DEFLATED$1,\n    chunkSize: 16384,\n    windowBits: 15,\n    memLevel: 8,\n    strategy: Z_DEFAULT_STRATEGY\n  }, options || {});\n\n  let opt = this.options;\n\n  if (opt.raw && (opt.windowBits > 0)) {\n    opt.windowBits = -opt.windowBits;\n  }\n\n  else if (opt.gzip && (opt.windowBits > 0) && (opt.windowBits < 16)) {\n    opt.windowBits += 16;\n  }\n\n  this.err    = 0;      // error code, if happens (0 = Z_OK)\n  this.msg    = '';     // error message\n  this.ended  = false;  // used to avoid multiple onEnd() calls\n  this.chunks = [];     // chunks of compressed data\n\n  this.strm = new zstream();\n  this.strm.avail_out = 0;\n\n  let status = deflate_1$2.deflateInit2(\n    this.strm,\n    opt.level,\n    opt.method,\n    opt.windowBits,\n    opt.memLevel,\n    opt.strategy\n  );\n\n  if (status !== Z_OK$2) {\n    throw new Error(messages[status]);\n  }\n\n  if (opt.header) {\n    deflate_1$2.deflateSetHeader(this.strm, opt.header);\n  }\n\n  if (opt.dictionary) {\n    let dict;\n    // Convert data if needed\n    if (typeof opt.dictionary === 'string') {\n      // If we need to compress text, change encoding to utf8.\n      dict = strings.string2buf(opt.dictionary);\n    } else if (toString$1.call(opt.dictionary) === '[object ArrayBuffer]') {\n      dict = new Uint8Array(opt.dictionary);\n    } else {\n      dict = opt.dictionary;\n    }\n\n    status = deflate_1$2.deflateSetDictionary(this.strm, dict);\n\n    if (status !== Z_OK$2) {\n      throw new Error(messages[status]);\n    }\n\n    this._dict_set = true;\n  }\n}\n\n/**\n * Deflate#push(data[, flush_mode]) -> Boolean\n * - data (Uint8Array|ArrayBuffer|String): input data. Strings will be\n *   converted to utf8 byte sequence.\n * - flush_mode (Number|Boolean): 0..6 for corresponding Z_NO_FLUSH..Z_TREE modes.\n *   See constants. Skipped or `false` means Z_NO_FLUSH, `true` means Z_FINISH.\n *\n * Sends input data to deflate pipe, generating [[Deflate#onData]] calls with\n * new compressed chunks. Returns `true` on success. The last data block must\n * have `flush_mode` Z_FINISH (or `true`). That will flush internal pending\n * buffers and call [[Deflate#onEnd]].\n *\n * On fail call [[Deflate#onEnd]] with error code and return false.\n *\n * ##### Example\n *\n * ```javascript\n * push(chunk, false); // push one of data chunks\n * ...\n * push(chunk, true);  // push last chunk\n * ```\n **/\nDeflate$1.prototype.push = function (data, flush_mode) {\n  const strm = this.strm;\n  const chunkSize = this.options.chunkSize;\n  let status, _flush_mode;\n\n  if (this.ended) { return false; }\n\n  if (flush_mode === ~~flush_mode) _flush_mode = flush_mode;\n  else _flush_mode = flush_mode === true ? Z_FINISH$2 : Z_NO_FLUSH$1;\n\n  // Convert data if needed\n  if (typeof data === 'string') {\n    // If we need to compress text, change encoding to utf8.\n    strm.input = strings.string2buf(data);\n  } else if (toString$1.call(data) === '[object ArrayBuffer]') {\n    strm.input = new Uint8Array(data);\n  } else {\n    strm.input = data;\n  }\n\n  strm.next_in = 0;\n  strm.avail_in = strm.input.length;\n\n  for (;;) {\n    if (strm.avail_out === 0) {\n      strm.output = new Uint8Array(chunkSize);\n      strm.next_out = 0;\n      strm.avail_out = chunkSize;\n    }\n\n    // Make sure avail_out > 6 to avoid repeating markers\n    if ((_flush_mode === Z_SYNC_FLUSH || _flush_mode === Z_FULL_FLUSH) && strm.avail_out <= 6) {\n      this.onData(strm.output.subarray(0, strm.next_out));\n      strm.avail_out = 0;\n      continue;\n    }\n\n    status = deflate_1$2.deflate(strm, _flush_mode);\n\n    // Ended => flush and finish\n    if (status === Z_STREAM_END$2) {\n      if (strm.next_out > 0) {\n        this.onData(strm.output.subarray(0, strm.next_out));\n      }\n      status = deflate_1$2.deflateEnd(this.strm);\n      this.onEnd(status);\n      this.ended = true;\n      return status === Z_OK$2;\n    }\n\n    // Flush if out buffer full\n    if (strm.avail_out === 0) {\n      this.onData(strm.output);\n      continue;\n    }\n\n    // Flush if requested and has data\n    if (_flush_mode > 0 && strm.next_out > 0) {\n      this.onData(strm.output.subarray(0, strm.next_out));\n      strm.avail_out = 0;\n      continue;\n    }\n\n    if (strm.avail_in === 0) break;\n  }\n\n  return true;\n};\n\n\n/**\n * Deflate#onData(chunk) -> Void\n * - chunk (Uint8Array): output data.\n *\n * By default, stores data blocks in `chunks[]` property and glue\n * those in `onEnd`. Override this handler, if you need another behaviour.\n **/\nDeflate$1.prototype.onData = function (chunk) {\n  this.chunks.push(chunk);\n};\n\n\n/**\n * Deflate#onEnd(status) -> Void\n * - status (Number): deflate status. 0 (Z_OK) on success,\n *   other if not.\n *\n * Called once after you tell deflate that the input stream is\n * complete (Z_FINISH). By default - join collected chunks,\n * free memory and fill `results` / `err` properties.\n **/\nDeflate$1.prototype.onEnd = function (status) {\n  // On success - join\n  if (status === Z_OK$2) {\n    this.result = common.flattenChunks(this.chunks);\n  }\n  this.chunks = [];\n  this.err = status;\n  this.msg = this.strm.msg;\n};\n\n\n/**\n * deflate(data[, options]) -> Uint8Array\n * - data (Uint8Array|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * Compress `data` with deflate algorithm and `options`.\n *\n * Supported options are:\n *\n * - level\n * - windowBits\n * - memLevel\n * - strategy\n * - dictionary\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Sugar (options):\n *\n * - `raw` (Boolean) - say that we work with raw stream, if you don't wish to specify\n *   negative windowBits implicitly.\n *\n * ##### Example:\n *\n * ```javascript\n * const pako = require('pako')\n * const data = new Uint8Array([1,2,3,4,5,6,7,8,9]);\n *\n * console.log(pako.deflate(data));\n * ```\n **/\nfunction deflate$1(input, options) {\n  const deflator = new Deflate$1(options);\n\n  deflator.push(input, true);\n\n  // That will never happens, if you don't cheat with options :)\n  if (deflator.err) { throw deflator.msg || messages[deflator.err]; }\n\n  return deflator.result;\n}\n\n\n/**\n * deflateRaw(data[, options]) -> Uint8Array\n * - data (Uint8Array|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * The same as [[deflate]], but creates raw data, without wrapper\n * (header and adler32 crc).\n **/\nfunction deflateRaw$1(input, options) {\n  options = options || {};\n  options.raw = true;\n  return deflate$1(input, options);\n}\n\n\n/**\n * gzip(data[, options]) -> Uint8Array\n * - data (Uint8Array|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * The same as [[deflate]], but create gzip wrapper instead of\n * deflate one.\n **/\nfunction gzip$1(input, options) {\n  options = options || {};\n  options.gzip = true;\n  return deflate$1(input, options);\n}\n\n\nvar Deflate_1$1 = Deflate$1;\nvar deflate_2 = deflate$1;\nvar deflateRaw_1$1 = deflateRaw$1;\nvar gzip_1$1 = gzip$1;\nvar constants$1 = constants$2;\n\nvar deflate_1$1 = {\n\tDeflate: Deflate_1$1,\n\tdeflate: deflate_2,\n\tdeflateRaw: deflateRaw_1$1,\n\tgzip: gzip_1$1,\n\tconstants: constants$1\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n// See state defs from inflate.js\nconst BAD$1 = 30;       /* got a data error -- remain here until reset */\nconst TYPE$1 = 12;      /* i: waiting for type bits, including last-flag bit */\n\n/*\n   Decode literal, length, and distance codes and write out the resulting\n   literal and match bytes until either not enough input or output is\n   available, an end-of-block is encountered, or a data error is encountered.\n   When large enough input and output buffers are supplied to inflate(), for\n   example, a 16K input buffer and a 64K output buffer, more than 95% of the\n   inflate execution time is spent in this routine.\n\n   Entry assumptions:\n\n        state.mode === LEN\n        strm.avail_in >= 6\n        strm.avail_out >= 258\n        start >= strm.avail_out\n        state.bits < 8\n\n   On return, state.mode is one of:\n\n        LEN -- ran out of enough output space or enough available input\n        TYPE -- reached end of block code, inflate() to interpret next block\n        BAD -- error in block data\n\n   Notes:\n\n    - The maximum input bits used by a length/distance pair is 15 bits for the\n      length code, 5 bits for the length extra, 15 bits for the distance code,\n      and 13 bits for the distance extra.  This totals 48 bits, or six bytes.\n      Therefore if strm.avail_in >= 6, then there is enough input to avoid\n      checking for available input while decoding.\n\n    - The maximum bytes that a single length/distance pair can output is 258\n      bytes, which is the maximum length that can be coded.  inflate_fast()\n      requires strm.avail_out >= 258 for each loop to avoid checking for\n      output space.\n */\nvar inffast = function inflate_fast(strm, start) {\n  let _in;                    /* local strm.input */\n  let last;                   /* have enough input while in < last */\n  let _out;                   /* local strm.output */\n  let beg;                    /* inflate()'s initial strm.output */\n  let end;                    /* while out < end, enough space available */\n//#ifdef INFLATE_STRICT\n  let dmax;                   /* maximum distance from zlib header */\n//#endif\n  let wsize;                  /* window size or zero if not using window */\n  let whave;                  /* valid bytes in the window */\n  let wnext;                  /* window write index */\n  // Use `s_window` instead `window`, avoid conflict with instrumentation tools\n  let s_window;               /* allocated sliding window, if wsize != 0 */\n  let hold;                   /* local strm.hold */\n  let bits;                   /* local strm.bits */\n  let lcode;                  /* local strm.lencode */\n  let dcode;                  /* local strm.distcode */\n  let lmask;                  /* mask for first level of length codes */\n  let dmask;                  /* mask for first level of distance codes */\n  let here;                   /* retrieved table entry */\n  let op;                     /* code bits, operation, extra bits, or */\n                              /*  window position, window bytes to copy */\n  let len;                    /* match length, unused bytes */\n  let dist;                   /* match distance */\n  let from;                   /* where to copy match from */\n  let from_source;\n\n\n  let input, output; // JS specific, because we have no pointers\n\n  /* copy state to local variables */\n  const state = strm.state;\n  //here = state.here;\n  _in = strm.next_in;\n  input = strm.input;\n  last = _in + (strm.avail_in - 5);\n  _out = strm.next_out;\n  output = strm.output;\n  beg = _out - (start - strm.avail_out);\n  end = _out + (strm.avail_out - 257);\n//#ifdef INFLATE_STRICT\n  dmax = state.dmax;\n//#endif\n  wsize = state.wsize;\n  whave = state.whave;\n  wnext = state.wnext;\n  s_window = state.window;\n  hold = state.hold;\n  bits = state.bits;\n  lcode = state.lencode;\n  dcode = state.distcode;\n  lmask = (1 << state.lenbits) - 1;\n  dmask = (1 << state.distbits) - 1;\n\n\n  /* decode literals and length/distances until end-of-block or not enough\n     input data or output space */\n\n  top:\n  do {\n    if (bits < 15) {\n      hold += input[_in++] << bits;\n      bits += 8;\n      hold += input[_in++] << bits;\n      bits += 8;\n    }\n\n    here = lcode[hold & lmask];\n\n    dolen:\n    for (;;) { // Goto emulation\n      op = here >>> 24/*here.bits*/;\n      hold >>>= op;\n      bits -= op;\n      op = (here >>> 16) & 0xff/*here.op*/;\n      if (op === 0) {                          /* literal */\n        //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?\n        //        \"inflate:         literal '%c'\\n\" :\n        //        \"inflate:         literal 0x%02x\\n\", here.val));\n        output[_out++] = here & 0xffff/*here.val*/;\n      }\n      else if (op & 16) {                     /* length base */\n        len = here & 0xffff/*here.val*/;\n        op &= 15;                           /* number of extra bits */\n        if (op) {\n          if (bits < op) {\n            hold += input[_in++] << bits;\n            bits += 8;\n          }\n          len += hold & ((1 << op) - 1);\n          hold >>>= op;\n          bits -= op;\n        }\n        //Tracevv((stderr, \"inflate:         length %u\\n\", len));\n        if (bits < 15) {\n          hold += input[_in++] << bits;\n          bits += 8;\n          hold += input[_in++] << bits;\n          bits += 8;\n        }\n        here = dcode[hold & dmask];\n\n        dodist:\n        for (;;) { // goto emulation\n          op = here >>> 24/*here.bits*/;\n          hold >>>= op;\n          bits -= op;\n          op = (here >>> 16) & 0xff/*here.op*/;\n\n          if (op & 16) {                      /* distance base */\n            dist = here & 0xffff/*here.val*/;\n            op &= 15;                       /* number of extra bits */\n            if (bits < op) {\n              hold += input[_in++] << bits;\n              bits += 8;\n              if (bits < op) {\n                hold += input[_in++] << bits;\n                bits += 8;\n              }\n            }\n            dist += hold & ((1 << op) - 1);\n//#ifdef INFLATE_STRICT\n            if (dist > dmax) {\n              strm.msg = 'invalid distance too far back';\n              state.mode = BAD$1;\n              break top;\n            }\n//#endif\n            hold >>>= op;\n            bits -= op;\n            //Tracevv((stderr, \"inflate:         distance %u\\n\", dist));\n            op = _out - beg;                /* max distance in output */\n            if (dist > op) {                /* see if copy from window */\n              op = dist - op;               /* distance back in window */\n              if (op > whave) {\n                if (state.sane) {\n                  strm.msg = 'invalid distance too far back';\n                  state.mode = BAD$1;\n                  break top;\n                }\n\n// (!) This block is disabled in zlib defaults,\n// don't enable it for binary compatibility\n//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR\n//                if (len <= op - whave) {\n//                  do {\n//                    output[_out++] = 0;\n//                  } while (--len);\n//                  continue top;\n//                }\n//                len -= op - whave;\n//                do {\n//                  output[_out++] = 0;\n//                } while (--op > whave);\n//                if (op === 0) {\n//                  from = _out - dist;\n//                  do {\n//                    output[_out++] = output[from++];\n//                  } while (--len);\n//                  continue top;\n//                }\n//#endif\n              }\n              from = 0; // window index\n              from_source = s_window;\n              if (wnext === 0) {           /* very common case */\n                from += wsize - op;\n                if (op < len) {         /* some from window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = _out - dist;  /* rest from output */\n                  from_source = output;\n                }\n              }\n              else if (wnext < op) {      /* wrap around window */\n                from += wsize + wnext - op;\n                op -= wnext;\n                if (op < len) {         /* some from end of window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = 0;\n                  if (wnext < len) {  /* some from start of window */\n                    op = wnext;\n                    len -= op;\n                    do {\n                      output[_out++] = s_window[from++];\n                    } while (--op);\n                    from = _out - dist;      /* rest from output */\n                    from_source = output;\n                  }\n                }\n              }\n              else {                      /* contiguous in window */\n                from += wnext - op;\n                if (op < len) {         /* some from window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = _out - dist;  /* rest from output */\n                  from_source = output;\n                }\n              }\n              while (len > 2) {\n                output[_out++] = from_source[from++];\n                output[_out++] = from_source[from++];\n                output[_out++] = from_source[from++];\n                len -= 3;\n              }\n              if (len) {\n                output[_out++] = from_source[from++];\n                if (len > 1) {\n                  output[_out++] = from_source[from++];\n                }\n              }\n            }\n            else {\n              from = _out - dist;          /* copy direct from output */\n              do {                        /* minimum length is three */\n                output[_out++] = output[from++];\n                output[_out++] = output[from++];\n                output[_out++] = output[from++];\n                len -= 3;\n              } while (len > 2);\n              if (len) {\n                output[_out++] = output[from++];\n                if (len > 1) {\n                  output[_out++] = output[from++];\n                }\n              }\n            }\n          }\n          else if ((op & 64) === 0) {          /* 2nd level distance code */\n            here = dcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];\n            continue dodist;\n          }\n          else {\n            strm.msg = 'invalid distance code';\n            state.mode = BAD$1;\n            break top;\n          }\n\n          break; // need to emulate goto via \"continue\"\n        }\n      }\n      else if ((op & 64) === 0) {              /* 2nd level length code */\n        here = lcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];\n        continue dolen;\n      }\n      else if (op & 32) {                     /* end-of-block */\n        //Tracevv((stderr, \"inflate:         end of block\\n\"));\n        state.mode = TYPE$1;\n        break top;\n      }\n      else {\n        strm.msg = 'invalid literal/length code';\n        state.mode = BAD$1;\n        break top;\n      }\n\n      break; // need to emulate goto via \"continue\"\n    }\n  } while (_in < last && _out < end);\n\n  /* return unused bytes (on entry, bits < 8, so in won't go too far back) */\n  len = bits >> 3;\n  _in -= len;\n  bits -= len << 3;\n  hold &= (1 << bits) - 1;\n\n  /* update state and return */\n  strm.next_in = _in;\n  strm.next_out = _out;\n  strm.avail_in = (_in < last ? 5 + (last - _in) : 5 - (_in - last));\n  strm.avail_out = (_out < end ? 257 + (end - _out) : 257 - (_out - end));\n  state.hold = hold;\n  state.bits = bits;\n  return;\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nconst MAXBITS = 15;\nconst ENOUGH_LENS$1 = 852;\nconst ENOUGH_DISTS$1 = 592;\n//const ENOUGH = (ENOUGH_LENS+ENOUGH_DISTS);\n\nconst CODES$1 = 0;\nconst LENS$1 = 1;\nconst DISTS$1 = 2;\n\nconst lbase = new Uint16Array([ /* Length codes 257..285 base */\n  3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31,\n  35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 0, 0\n]);\n\nconst lext = new Uint8Array([ /* Length codes 257..285 extra */\n  16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 18, 18, 18, 18,\n  19, 19, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 16, 72, 78\n]);\n\nconst dbase = new Uint16Array([ /* Distance codes 0..29 base */\n  1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193,\n  257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145,\n  8193, 12289, 16385, 24577, 0, 0\n]);\n\nconst dext = new Uint8Array([ /* Distance codes 0..29 extra */\n  16, 16, 16, 16, 17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22,\n  23, 23, 24, 24, 25, 25, 26, 26, 27, 27,\n  28, 28, 29, 29, 64, 64\n]);\n\nconst inflate_table = (type, lens, lens_index, codes, table, table_index, work, opts) =>\n{\n  const bits = opts.bits;\n      //here = opts.here; /* table entry for duplication */\n\n  let len = 0;               /* a code's length in bits */\n  let sym = 0;               /* index of code symbols */\n  let min = 0, max = 0;          /* minimum and maximum code lengths */\n  let root = 0;              /* number of index bits for root table */\n  let curr = 0;              /* number of index bits for current table */\n  let drop = 0;              /* code bits to drop for sub-table */\n  let left = 0;                   /* number of prefix codes available */\n  let used = 0;              /* code entries in table used */\n  let huff = 0;              /* Huffman code */\n  let incr;              /* for incrementing code, index */\n  let fill;              /* index for replicating entries */\n  let low;               /* low bits for current root entry */\n  let mask;              /* mask for low root bits */\n  let next;             /* next available space in table */\n  let base = null;     /* base value table to use */\n  let base_index = 0;\n//  let shoextra;    /* extra bits table to use */\n  let end;                    /* use base and extra for symbol > end */\n  const count = new Uint16Array(MAXBITS + 1); //[MAXBITS+1];    /* number of codes of each length */\n  const offs = new Uint16Array(MAXBITS + 1); //[MAXBITS+1];     /* offsets in table for each length */\n  let extra = null;\n  let extra_index = 0;\n\n  let here_bits, here_op, here_val;\n\n  /*\n   Process a set of code lengths to create a canonical Huffman code.  The\n   code lengths are lens[0..codes-1].  Each length corresponds to the\n   symbols 0..codes-1.  The Huffman code is generated by first sorting the\n   symbols by length from short to long, and retaining the symbol order\n   for codes with equal lengths.  Then the code starts with all zero bits\n   for the first code of the shortest length, and the codes are integer\n   increments for the same length, and zeros are appended as the length\n   increases.  For the deflate format, these bits are stored backwards\n   from their more natural integer increment ordering, and so when the\n   decoding tables are built in the large loop below, the integer codes\n   are incremented backwards.\n\n   This routine assumes, but does not check, that all of the entries in\n   lens[] are in the range 0..MAXBITS.  The caller must assure this.\n   1..MAXBITS is interpreted as that code length.  zero means that that\n   symbol does not occur in this code.\n\n   The codes are sorted by computing a count of codes for each length,\n   creating from that a table of starting indices for each length in the\n   sorted table, and then entering the symbols in order in the sorted\n   table.  The sorted table is work[], with that space being provided by\n   the caller.\n\n   The length counts are used for other purposes as well, i.e. finding\n   the minimum and maximum length codes, determining if there are any\n   codes at all, checking for a valid set of lengths, and looking ahead\n   at length counts to determine sub-table sizes when building the\n   decoding tables.\n   */\n\n  /* accumulate lengths for codes (assumes lens[] all in 0..MAXBITS) */\n  for (len = 0; len <= MAXBITS; len++) {\n    count[len] = 0;\n  }\n  for (sym = 0; sym < codes; sym++) {\n    count[lens[lens_index + sym]]++;\n  }\n\n  /* bound code lengths, force root to be within code lengths */\n  root = bits;\n  for (max = MAXBITS; max >= 1; max--) {\n    if (count[max] !== 0) { break; }\n  }\n  if (root > max) {\n    root = max;\n  }\n  if (max === 0) {                     /* no symbols to code at all */\n    //table.op[opts.table_index] = 64;  //here.op = (var char)64;    /* invalid code marker */\n    //table.bits[opts.table_index] = 1;   //here.bits = (var char)1;\n    //table.val[opts.table_index++] = 0;   //here.val = (var short)0;\n    table[table_index++] = (1 << 24) | (64 << 16) | 0;\n\n\n    //table.op[opts.table_index] = 64;\n    //table.bits[opts.table_index] = 1;\n    //table.val[opts.table_index++] = 0;\n    table[table_index++] = (1 << 24) | (64 << 16) | 0;\n\n    opts.bits = 1;\n    return 0;     /* no symbols, but wait for decoding to report error */\n  }\n  for (min = 1; min < max; min++) {\n    if (count[min] !== 0) { break; }\n  }\n  if (root < min) {\n    root = min;\n  }\n\n  /* check for an over-subscribed or incomplete set of lengths */\n  left = 1;\n  for (len = 1; len <= MAXBITS; len++) {\n    left <<= 1;\n    left -= count[len];\n    if (left < 0) {\n      return -1;\n    }        /* over-subscribed */\n  }\n  if (left > 0 && (type === CODES$1 || max !== 1)) {\n    return -1;                      /* incomplete set */\n  }\n\n  /* generate offsets into symbol table for each length for sorting */\n  offs[1] = 0;\n  for (len = 1; len < MAXBITS; len++) {\n    offs[len + 1] = offs[len] + count[len];\n  }\n\n  /* sort symbols by length, by symbol order within each length */\n  for (sym = 0; sym < codes; sym++) {\n    if (lens[lens_index + sym] !== 0) {\n      work[offs[lens[lens_index + sym]]++] = sym;\n    }\n  }\n\n  /*\n   Create and fill in decoding tables.  In this loop, the table being\n   filled is at next and has curr index bits.  The code being used is huff\n   with length len.  That code is converted to an index by dropping drop\n   bits off of the bottom.  For codes where len is less than drop + curr,\n   those top drop + curr - len bits are incremented through all values to\n   fill the table with replicated entries.\n\n   root is the number of index bits for the root table.  When len exceeds\n   root, sub-tables are created pointed to by the root entry with an index\n   of the low root bits of huff.  This is saved in low to check for when a\n   new sub-table should be started.  drop is zero when the root table is\n   being filled, and drop is root when sub-tables are being filled.\n\n   When a new sub-table is needed, it is necessary to look ahead in the\n   code lengths to determine what size sub-table is needed.  The length\n   counts are used for this, and so count[] is decremented as codes are\n   entered in the tables.\n\n   used keeps track of how many table entries have been allocated from the\n   provided *table space.  It is checked for LENS and DIST tables against\n   the constants ENOUGH_LENS and ENOUGH_DISTS to guard against changes in\n   the initial root table size constants.  See the comments in inftrees.h\n   for more information.\n\n   sym increments through all symbols, and the loop terminates when\n   all codes of length max, i.e. all codes, have been processed.  This\n   routine permits incomplete codes, so another loop after this one fills\n   in the rest of the decoding tables with invalid code markers.\n   */\n\n  /* set up for code type */\n  // poor man optimization - use if-else instead of switch,\n  // to avoid deopts in old v8\n  if (type === CODES$1) {\n    base = extra = work;    /* dummy value--not used */\n    end = 19;\n\n  } else if (type === LENS$1) {\n    base = lbase;\n    base_index -= 257;\n    extra = lext;\n    extra_index -= 257;\n    end = 256;\n\n  } else {                    /* DISTS */\n    base = dbase;\n    extra = dext;\n    end = -1;\n  }\n\n  /* initialize opts for loop */\n  huff = 0;                   /* starting code */\n  sym = 0;                    /* starting code symbol */\n  len = min;                  /* starting code length */\n  next = table_index;              /* current table to fill in */\n  curr = root;                /* current table index bits */\n  drop = 0;                   /* current bits to drop from code for index */\n  low = -1;                   /* trigger new sub-table when len > root */\n  used = 1 << root;          /* use root table entries */\n  mask = used - 1;            /* mask for comparing low */\n\n  /* check available table space */\n  if ((type === LENS$1 && used > ENOUGH_LENS$1) ||\n    (type === DISTS$1 && used > ENOUGH_DISTS$1)) {\n    return 1;\n  }\n\n  /* process all codes and make table entries */\n  for (;;) {\n    /* create table entry */\n    here_bits = len - drop;\n    if (work[sym] < end) {\n      here_op = 0;\n      here_val = work[sym];\n    }\n    else if (work[sym] > end) {\n      here_op = extra[extra_index + work[sym]];\n      here_val = base[base_index + work[sym]];\n    }\n    else {\n      here_op = 32 + 64;         /* end of block */\n      here_val = 0;\n    }\n\n    /* replicate for those indices with low len bits equal to huff */\n    incr = 1 << (len - drop);\n    fill = 1 << curr;\n    min = fill;                 /* save offset to next table */\n    do {\n      fill -= incr;\n      table[next + (huff >> drop) + fill] = (here_bits << 24) | (here_op << 16) | here_val |0;\n    } while (fill !== 0);\n\n    /* backwards increment the len-bit code huff */\n    incr = 1 << (len - 1);\n    while (huff & incr) {\n      incr >>= 1;\n    }\n    if (incr !== 0) {\n      huff &= incr - 1;\n      huff += incr;\n    } else {\n      huff = 0;\n    }\n\n    /* go to next symbol, update count, len */\n    sym++;\n    if (--count[len] === 0) {\n      if (len === max) { break; }\n      len = lens[lens_index + work[sym]];\n    }\n\n    /* create new sub-table if needed */\n    if (len > root && (huff & mask) !== low) {\n      /* if first time, transition to sub-tables */\n      if (drop === 0) {\n        drop = root;\n      }\n\n      /* increment past last table */\n      next += min;            /* here min is 1 << curr */\n\n      /* determine length of next table */\n      curr = len - drop;\n      left = 1 << curr;\n      while (curr + drop < max) {\n        left -= count[curr + drop];\n        if (left <= 0) { break; }\n        curr++;\n        left <<= 1;\n      }\n\n      /* check for enough space */\n      used += 1 << curr;\n      if ((type === LENS$1 && used > ENOUGH_LENS$1) ||\n        (type === DISTS$1 && used > ENOUGH_DISTS$1)) {\n        return 1;\n      }\n\n      /* point entry in root table to sub-table */\n      low = huff & mask;\n      /*table.op[low] = curr;\n      table.bits[low] = root;\n      table.val[low] = next - opts.table_index;*/\n      table[low] = (root << 24) | (curr << 16) | (next - table_index) |0;\n    }\n  }\n\n  /* fill in remaining table entry if code is incomplete (guaranteed to have\n   at most one remaining entry, since if the code is incomplete, the\n   maximum code length that was allowed to get this far is one bit) */\n  if (huff !== 0) {\n    //table.op[next + huff] = 64;            /* invalid code marker */\n    //table.bits[next + huff] = len - drop;\n    //table.val[next + huff] = 0;\n    table[next + huff] = ((len - drop) << 24) | (64 << 16) |0;\n  }\n\n  /* set return parameters */\n  //opts.table_index += used;\n  opts.bits = root;\n  return 0;\n};\n\n\nvar inftrees = inflate_table;\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n\n\n\n\n\nconst CODES = 0;\nconst LENS = 1;\nconst DISTS = 2;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nconst {\n  Z_FINISH: Z_FINISH$1, Z_BLOCK, Z_TREES,\n  Z_OK: Z_OK$1, Z_STREAM_END: Z_STREAM_END$1, Z_NEED_DICT: Z_NEED_DICT$1, Z_STREAM_ERROR: Z_STREAM_ERROR$1, Z_DATA_ERROR: Z_DATA_ERROR$1, Z_MEM_ERROR: Z_MEM_ERROR$1, Z_BUF_ERROR,\n  Z_DEFLATED\n} = constants$2;\n\n\n/* STATES ====================================================================*/\n/* ===========================================================================*/\n\n\nconst    HEAD = 1;       /* i: waiting for magic header */\nconst    FLAGS = 2;      /* i: waiting for method and flags (gzip) */\nconst    TIME = 3;       /* i: waiting for modification time (gzip) */\nconst    OS = 4;         /* i: waiting for extra flags and operating system (gzip) */\nconst    EXLEN = 5;      /* i: waiting for extra length (gzip) */\nconst    EXTRA = 6;      /* i: waiting for extra bytes (gzip) */\nconst    NAME = 7;       /* i: waiting for end of file name (gzip) */\nconst    COMMENT = 8;    /* i: waiting for end of comment (gzip) */\nconst    HCRC = 9;       /* i: waiting for header crc (gzip) */\nconst    DICTID = 10;    /* i: waiting for dictionary check value */\nconst    DICT = 11;      /* waiting for inflateSetDictionary() call */\nconst        TYPE = 12;      /* i: waiting for type bits, including last-flag bit */\nconst        TYPEDO = 13;    /* i: same, but skip check to exit inflate on new block */\nconst        STORED = 14;    /* i: waiting for stored size (length and complement) */\nconst        COPY_ = 15;     /* i/o: same as COPY below, but only first time in */\nconst        COPY = 16;      /* i/o: waiting for input or output to copy stored block */\nconst        TABLE = 17;     /* i: waiting for dynamic block table lengths */\nconst        LENLENS = 18;   /* i: waiting for code length code lengths */\nconst        CODELENS = 19;  /* i: waiting for length/lit and distance code lengths */\nconst            LEN_ = 20;      /* i: same as LEN below, but only first time in */\nconst            LEN = 21;       /* i: waiting for length/lit/eob code */\nconst            LENEXT = 22;    /* i: waiting for length extra bits */\nconst            DIST = 23;      /* i: waiting for distance code */\nconst            DISTEXT = 24;   /* i: waiting for distance extra bits */\nconst            MATCH = 25;     /* o: waiting for output space to copy string */\nconst            LIT = 26;       /* o: waiting for output space to write literal */\nconst    CHECK = 27;     /* i: waiting for 32-bit check value */\nconst    LENGTH = 28;    /* i: waiting for 32-bit length (gzip) */\nconst    DONE = 29;      /* finished check, done -- remain here until reset */\nconst    BAD = 30;       /* got a data error -- remain here until reset */\nconst    MEM = 31;       /* got an inflate() memory error -- remain here until reset */\nconst    SYNC = 32;      /* looking for synchronization bytes to restart inflate() */\n\n/* ===========================================================================*/\n\n\n\nconst ENOUGH_LENS = 852;\nconst ENOUGH_DISTS = 592;\n//const ENOUGH =  (ENOUGH_LENS+ENOUGH_DISTS);\n\nconst MAX_WBITS = 15;\n/* 32K LZ77 window */\nconst DEF_WBITS = MAX_WBITS;\n\n\nconst zswap32 = (q) => {\n\n  return  (((q >>> 24) & 0xff) +\n          ((q >>> 8) & 0xff00) +\n          ((q & 0xff00) << 8) +\n          ((q & 0xff) << 24));\n};\n\n\nfunction InflateState() {\n  this.mode = 0;             /* current inflate mode */\n  this.last = false;          /* true if processing last block */\n  this.wrap = 0;              /* bit 0 true for zlib, bit 1 true for gzip */\n  this.havedict = false;      /* true if dictionary provided */\n  this.flags = 0;             /* gzip header method and flags (0 if zlib) */\n  this.dmax = 0;              /* zlib header max distance (INFLATE_STRICT) */\n  this.check = 0;             /* protected copy of check value */\n  this.total = 0;             /* protected copy of output count */\n  // TODO: may be {}\n  this.head = null;           /* where to save gzip header information */\n\n  /* sliding window */\n  this.wbits = 0;             /* log base 2 of requested window size */\n  this.wsize = 0;             /* window size or zero if not using window */\n  this.whave = 0;             /* valid bytes in the window */\n  this.wnext = 0;             /* window write index */\n  this.window = null;         /* allocated sliding window, if needed */\n\n  /* bit accumulator */\n  this.hold = 0;              /* input bit accumulator */\n  this.bits = 0;              /* number of bits in \"in\" */\n\n  /* for string and stored block copying */\n  this.length = 0;            /* literal or length of data to copy */\n  this.offset = 0;            /* distance back to copy string from */\n\n  /* for table and code decoding */\n  this.extra = 0;             /* extra bits needed */\n\n  /* fixed and dynamic code tables */\n  this.lencode = null;          /* starting table for length/literal codes */\n  this.distcode = null;         /* starting table for distance codes */\n  this.lenbits = 0;           /* index bits for lencode */\n  this.distbits = 0;          /* index bits for distcode */\n\n  /* dynamic table building */\n  this.ncode = 0;             /* number of code length code lengths */\n  this.nlen = 0;              /* number of length code lengths */\n  this.ndist = 0;             /* number of distance code lengths */\n  this.have = 0;              /* number of code lengths in lens[] */\n  this.next = null;              /* next available space in codes[] */\n\n  this.lens = new Uint16Array(320); /* temporary storage for code lengths */\n  this.work = new Uint16Array(288); /* work area for code table building */\n\n  /*\n   because we don't have pointers in js, we use lencode and distcode directly\n   as buffers so we don't need codes\n  */\n  //this.codes = new Int32Array(ENOUGH);       /* space for code tables */\n  this.lendyn = null;              /* dynamic table for length/literal codes (JS specific) */\n  this.distdyn = null;             /* dynamic table for distance codes (JS specific) */\n  this.sane = 0;                   /* if false, allow invalid distance too far */\n  this.back = 0;                   /* bits back of last unprocessed length/lit */\n  this.was = 0;                    /* initial length of match */\n}\n\n\nconst inflateResetKeep = (strm) => {\n\n  if (!strm || !strm.state) { return Z_STREAM_ERROR$1; }\n  const state = strm.state;\n  strm.total_in = strm.total_out = state.total = 0;\n  strm.msg = ''; /*Z_NULL*/\n  if (state.wrap) {       /* to support ill-conceived Java test suite */\n    strm.adler = state.wrap & 1;\n  }\n  state.mode = HEAD;\n  state.last = 0;\n  state.havedict = 0;\n  state.dmax = 32768;\n  state.head = null/*Z_NULL*/;\n  state.hold = 0;\n  state.bits = 0;\n  //state.lencode = state.distcode = state.next = state.codes;\n  state.lencode = state.lendyn = new Int32Array(ENOUGH_LENS);\n  state.distcode = state.distdyn = new Int32Array(ENOUGH_DISTS);\n\n  state.sane = 1;\n  state.back = -1;\n  //Tracev((stderr, \"inflate: reset\\n\"));\n  return Z_OK$1;\n};\n\n\nconst inflateReset = (strm) => {\n\n  if (!strm || !strm.state) { return Z_STREAM_ERROR$1; }\n  const state = strm.state;\n  state.wsize = 0;\n  state.whave = 0;\n  state.wnext = 0;\n  return inflateResetKeep(strm);\n\n};\n\n\nconst inflateReset2 = (strm, windowBits) => {\n  let wrap;\n\n  /* get the state */\n  if (!strm || !strm.state) { return Z_STREAM_ERROR$1; }\n  const state = strm.state;\n\n  /* extract wrap request from windowBits parameter */\n  if (windowBits < 0) {\n    wrap = 0;\n    windowBits = -windowBits;\n  }\n  else {\n    wrap = (windowBits >> 4) + 1;\n    if (windowBits < 48) {\n      windowBits &= 15;\n    }\n  }\n\n  /* set number of window bits, free window if different */\n  if (windowBits && (windowBits < 8 || windowBits > 15)) {\n    return Z_STREAM_ERROR$1;\n  }\n  if (state.window !== null && state.wbits !== windowBits) {\n    state.window = null;\n  }\n\n  /* update state and reset the rest of it */\n  state.wrap = wrap;\n  state.wbits = windowBits;\n  return inflateReset(strm);\n};\n\n\nconst inflateInit2 = (strm, windowBits) => {\n\n  if (!strm) { return Z_STREAM_ERROR$1; }\n  //strm.msg = Z_NULL;                 /* in case we return an error */\n\n  const state = new InflateState();\n\n  //if (state === Z_NULL) return Z_MEM_ERROR;\n  //Tracev((stderr, \"inflate: allocated\\n\"));\n  strm.state = state;\n  state.window = null/*Z_NULL*/;\n  const ret = inflateReset2(strm, windowBits);\n  if (ret !== Z_OK$1) {\n    strm.state = null/*Z_NULL*/;\n  }\n  return ret;\n};\n\n\nconst inflateInit = (strm) => {\n\n  return inflateInit2(strm, DEF_WBITS);\n};\n\n\n/*\n Return state with length and distance decoding tables and index sizes set to\n fixed code decoding.  Normally this returns fixed tables from inffixed.h.\n If BUILDFIXED is defined, then instead this routine builds the tables the\n first time it's called, and returns those tables the first time and\n thereafter.  This reduces the size of the code by about 2K bytes, in\n exchange for a little execution time.  However, BUILDFIXED should not be\n used for threaded applications, since the rewriting of the tables and virgin\n may not be thread-safe.\n */\nlet virgin = true;\n\nlet lenfix, distfix; // We have no pointers in JS, so keep tables separate\n\n\nconst fixedtables = (state) => {\n\n  /* build fixed huffman tables if first call (may not be thread safe) */\n  if (virgin) {\n    lenfix = new Int32Array(512);\n    distfix = new Int32Array(32);\n\n    /* literal/length table */\n    let sym = 0;\n    while (sym < 144) { state.lens[sym++] = 8; }\n    while (sym < 256) { state.lens[sym++] = 9; }\n    while (sym < 280) { state.lens[sym++] = 7; }\n    while (sym < 288) { state.lens[sym++] = 8; }\n\n    inftrees(LENS,  state.lens, 0, 288, lenfix,   0, state.work, { bits: 9 });\n\n    /* distance table */\n    sym = 0;\n    while (sym < 32) { state.lens[sym++] = 5; }\n\n    inftrees(DISTS, state.lens, 0, 32,   distfix, 0, state.work, { bits: 5 });\n\n    /* do this just once */\n    virgin = false;\n  }\n\n  state.lencode = lenfix;\n  state.lenbits = 9;\n  state.distcode = distfix;\n  state.distbits = 5;\n};\n\n\n/*\n Update the window with the last wsize (normally 32K) bytes written before\n returning.  If window does not exist yet, create it.  This is only called\n when a window is already in use, or when output has been written during this\n inflate call, but the end of the deflate stream has not been reached yet.\n It is also called to create a window for dictionary data when a dictionary\n is loaded.\n\n Providing output buffers larger than 32K to inflate() should provide a speed\n advantage, since only the last 32K of output is copied to the sliding window\n upon return from inflate(), and since all distances after the first 32K of\n output will fall in the output data, making match copies simpler and faster.\n The advantage may be dependent on the size of the processor's data caches.\n */\nconst updatewindow = (strm, src, end, copy) => {\n\n  let dist;\n  const state = strm.state;\n\n  /* if it hasn't been done already, allocate space for the window */\n  if (state.window === null) {\n    state.wsize = 1 << state.wbits;\n    state.wnext = 0;\n    state.whave = 0;\n\n    state.window = new Uint8Array(state.wsize);\n  }\n\n  /* copy state->wsize or less output bytes into the circular window */\n  if (copy >= state.wsize) {\n    state.window.set(src.subarray(end - state.wsize, end), 0);\n    state.wnext = 0;\n    state.whave = state.wsize;\n  }\n  else {\n    dist = state.wsize - state.wnext;\n    if (dist > copy) {\n      dist = copy;\n    }\n    //zmemcpy(state->window + state->wnext, end - copy, dist);\n    state.window.set(src.subarray(end - copy, end - copy + dist), state.wnext);\n    copy -= dist;\n    if (copy) {\n      //zmemcpy(state->window, end - copy, copy);\n      state.window.set(src.subarray(end - copy, end), 0);\n      state.wnext = copy;\n      state.whave = state.wsize;\n    }\n    else {\n      state.wnext += dist;\n      if (state.wnext === state.wsize) { state.wnext = 0; }\n      if (state.whave < state.wsize) { state.whave += dist; }\n    }\n  }\n  return 0;\n};\n\n\nconst inflate$2 = (strm, flush) => {\n\n  let state;\n  let input, output;          // input/output buffers\n  let next;                   /* next input INDEX */\n  let put;                    /* next output INDEX */\n  let have, left;             /* available input and output */\n  let hold;                   /* bit buffer */\n  let bits;                   /* bits in bit buffer */\n  let _in, _out;              /* save starting available input and output */\n  let copy;                   /* number of stored or match bytes to copy */\n  let from;                   /* where to copy match bytes from */\n  let from_source;\n  let here = 0;               /* current decoding table entry */\n  let here_bits, here_op, here_val; // paked \"here\" denormalized (JS specific)\n  //let last;                   /* parent table entry */\n  let last_bits, last_op, last_val; // paked \"last\" denormalized (JS specific)\n  let len;                    /* length to copy for repeats, bits to drop */\n  let ret;                    /* return code */\n  const hbuf = new Uint8Array(4);    /* buffer for gzip header crc calculation */\n  let opts;\n\n  let n; // temporary variable for NEED_BITS\n\n  const order = /* permutation of code lengths */\n    new Uint8Array([ 16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15 ]);\n\n\n  if (!strm || !strm.state || !strm.output ||\n      (!strm.input && strm.avail_in !== 0)) {\n    return Z_STREAM_ERROR$1;\n  }\n\n  state = strm.state;\n  if (state.mode === TYPE) { state.mode = TYPEDO; }    /* skip check */\n\n\n  //--- LOAD() ---\n  put = strm.next_out;\n  output = strm.output;\n  left = strm.avail_out;\n  next = strm.next_in;\n  input = strm.input;\n  have = strm.avail_in;\n  hold = state.hold;\n  bits = state.bits;\n  //---\n\n  _in = have;\n  _out = left;\n  ret = Z_OK$1;\n\n  inf_leave: // goto emulation\n  for (;;) {\n    switch (state.mode) {\n      case HEAD:\n        if (state.wrap === 0) {\n          state.mode = TYPEDO;\n          break;\n        }\n        //=== NEEDBITS(16);\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if ((state.wrap & 2) && hold === 0x8b1f) {  /* gzip header */\n          state.check = 0/*crc32(0L, Z_NULL, 0)*/;\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32_1(state.check, hbuf, 2, 0);\n          //===//\n\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          state.mode = FLAGS;\n          break;\n        }\n        state.flags = 0;           /* expect zlib header */\n        if (state.head) {\n          state.head.done = false;\n        }\n        if (!(state.wrap & 1) ||   /* check if zlib header allowed */\n          (((hold & 0xff)/*BITS(8)*/ << 8) + (hold >> 8)) % 31) {\n          strm.msg = 'incorrect header check';\n          state.mode = BAD;\n          break;\n        }\n        if ((hold & 0x0f)/*BITS(4)*/ !== Z_DEFLATED) {\n          strm.msg = 'unknown compression method';\n          state.mode = BAD;\n          break;\n        }\n        //--- DROPBITS(4) ---//\n        hold >>>= 4;\n        bits -= 4;\n        //---//\n        len = (hold & 0x0f)/*BITS(4)*/ + 8;\n        if (state.wbits === 0) {\n          state.wbits = len;\n        }\n        else if (len > state.wbits) {\n          strm.msg = 'invalid window size';\n          state.mode = BAD;\n          break;\n        }\n\n        // !!! pako patch. Force use `options.windowBits` if passed.\n        // Required to always use max window size by default.\n        state.dmax = 1 << state.wbits;\n        //state.dmax = 1 << len;\n\n        //Tracev((stderr, \"inflate:   zlib header ok\\n\"));\n        strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;\n        state.mode = hold & 0x200 ? DICTID : TYPE;\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        break;\n      case FLAGS:\n        //=== NEEDBITS(16); */\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.flags = hold;\n        if ((state.flags & 0xff) !== Z_DEFLATED) {\n          strm.msg = 'unknown compression method';\n          state.mode = BAD;\n          break;\n        }\n        if (state.flags & 0xe000) {\n          strm.msg = 'unknown header flags set';\n          state.mode = BAD;\n          break;\n        }\n        if (state.head) {\n          state.head.text = ((hold >> 8) & 1);\n        }\n        if (state.flags & 0x0200) {\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32_1(state.check, hbuf, 2, 0);\n          //===//\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = TIME;\n        /* falls through */\n      case TIME:\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if (state.head) {\n          state.head.time = hold;\n        }\n        if (state.flags & 0x0200) {\n          //=== CRC4(state.check, hold)\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          hbuf[2] = (hold >>> 16) & 0xff;\n          hbuf[3] = (hold >>> 24) & 0xff;\n          state.check = crc32_1(state.check, hbuf, 4, 0);\n          //===\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = OS;\n        /* falls through */\n      case OS:\n        //=== NEEDBITS(16); */\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if (state.head) {\n          state.head.xflags = (hold & 0xff);\n          state.head.os = (hold >> 8);\n        }\n        if (state.flags & 0x0200) {\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32_1(state.check, hbuf, 2, 0);\n          //===//\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = EXLEN;\n        /* falls through */\n      case EXLEN:\n        if (state.flags & 0x0400) {\n          //=== NEEDBITS(16); */\n          while (bits < 16) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.length = hold;\n          if (state.head) {\n            state.head.extra_len = hold;\n          }\n          if (state.flags & 0x0200) {\n            //=== CRC2(state.check, hold);\n            hbuf[0] = hold & 0xff;\n            hbuf[1] = (hold >>> 8) & 0xff;\n            state.check = crc32_1(state.check, hbuf, 2, 0);\n            //===//\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n        }\n        else if (state.head) {\n          state.head.extra = null/*Z_NULL*/;\n        }\n        state.mode = EXTRA;\n        /* falls through */\n      case EXTRA:\n        if (state.flags & 0x0400) {\n          copy = state.length;\n          if (copy > have) { copy = have; }\n          if (copy) {\n            if (state.head) {\n              len = state.head.extra_len - state.length;\n              if (!state.head.extra) {\n                // Use untyped array for more convenient processing later\n                state.head.extra = new Uint8Array(state.head.extra_len);\n              }\n              state.head.extra.set(\n                input.subarray(\n                  next,\n                  // extra field is limited to 65536 bytes\n                  // - no need for additional size check\n                  next + copy\n                ),\n                /*len + copy > state.head.extra_max - len ? state.head.extra_max : copy,*/\n                len\n              );\n              //zmemcpy(state.head.extra + len, next,\n              //        len + copy > state.head.extra_max ?\n              //        state.head.extra_max - len : copy);\n            }\n            if (state.flags & 0x0200) {\n              state.check = crc32_1(state.check, input, copy, next);\n            }\n            have -= copy;\n            next += copy;\n            state.length -= copy;\n          }\n          if (state.length) { break inf_leave; }\n        }\n        state.length = 0;\n        state.mode = NAME;\n        /* falls through */\n      case NAME:\n        if (state.flags & 0x0800) {\n          if (have === 0) { break inf_leave; }\n          copy = 0;\n          do {\n            // TODO: 2 or 1 bytes?\n            len = input[next + copy++];\n            /* use constant limit because in js we should not preallocate memory */\n            if (state.head && len &&\n                (state.length < 65536 /*state.head.name_max*/)) {\n              state.head.name += String.fromCharCode(len);\n            }\n          } while (len && copy < have);\n\n          if (state.flags & 0x0200) {\n            state.check = crc32_1(state.check, input, copy, next);\n          }\n          have -= copy;\n          next += copy;\n          if (len) { break inf_leave; }\n        }\n        else if (state.head) {\n          state.head.name = null;\n        }\n        state.length = 0;\n        state.mode = COMMENT;\n        /* falls through */\n      case COMMENT:\n        if (state.flags & 0x1000) {\n          if (have === 0) { break inf_leave; }\n          copy = 0;\n          do {\n            len = input[next + copy++];\n            /* use constant limit because in js we should not preallocate memory */\n            if (state.head && len &&\n                (state.length < 65536 /*state.head.comm_max*/)) {\n              state.head.comment += String.fromCharCode(len);\n            }\n          } while (len && copy < have);\n          if (state.flags & 0x0200) {\n            state.check = crc32_1(state.check, input, copy, next);\n          }\n          have -= copy;\n          next += copy;\n          if (len) { break inf_leave; }\n        }\n        else if (state.head) {\n          state.head.comment = null;\n        }\n        state.mode = HCRC;\n        /* falls through */\n      case HCRC:\n        if (state.flags & 0x0200) {\n          //=== NEEDBITS(16); */\n          while (bits < 16) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          if (hold !== (state.check & 0xffff)) {\n            strm.msg = 'header crc mismatch';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n        }\n        if (state.head) {\n          state.head.hcrc = ((state.flags >> 9) & 1);\n          state.head.done = true;\n        }\n        strm.adler = state.check = 0;\n        state.mode = TYPE;\n        break;\n      case DICTID:\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        strm.adler = state.check = zswap32(hold);\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = DICT;\n        /* falls through */\n      case DICT:\n        if (state.havedict === 0) {\n          //--- RESTORE() ---\n          strm.next_out = put;\n          strm.avail_out = left;\n          strm.next_in = next;\n          strm.avail_in = have;\n          state.hold = hold;\n          state.bits = bits;\n          //---\n          return Z_NEED_DICT$1;\n        }\n        strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;\n        state.mode = TYPE;\n        /* falls through */\n      case TYPE:\n        if (flush === Z_BLOCK || flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case TYPEDO:\n        if (state.last) {\n          //--- BYTEBITS() ---//\n          hold >>>= bits & 7;\n          bits -= bits & 7;\n          //---//\n          state.mode = CHECK;\n          break;\n        }\n        //=== NEEDBITS(3); */\n        while (bits < 3) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.last = (hold & 0x01)/*BITS(1)*/;\n        //--- DROPBITS(1) ---//\n        hold >>>= 1;\n        bits -= 1;\n        //---//\n\n        switch ((hold & 0x03)/*BITS(2)*/) {\n          case 0:                             /* stored block */\n            //Tracev((stderr, \"inflate:     stored block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = STORED;\n            break;\n          case 1:                             /* fixed block */\n            fixedtables(state);\n            //Tracev((stderr, \"inflate:     fixed codes block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = LEN_;             /* decode codes */\n            if (flush === Z_TREES) {\n              //--- DROPBITS(2) ---//\n              hold >>>= 2;\n              bits -= 2;\n              //---//\n              break inf_leave;\n            }\n            break;\n          case 2:                             /* dynamic block */\n            //Tracev((stderr, \"inflate:     dynamic codes block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = TABLE;\n            break;\n          case 3:\n            strm.msg = 'invalid block type';\n            state.mode = BAD;\n        }\n        //--- DROPBITS(2) ---//\n        hold >>>= 2;\n        bits -= 2;\n        //---//\n        break;\n      case STORED:\n        //--- BYTEBITS() ---// /* go to byte boundary */\n        hold >>>= bits & 7;\n        bits -= bits & 7;\n        //---//\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if ((hold & 0xffff) !== ((hold >>> 16) ^ 0xffff)) {\n          strm.msg = 'invalid stored block lengths';\n          state.mode = BAD;\n          break;\n        }\n        state.length = hold & 0xffff;\n        //Tracev((stderr, \"inflate:       stored length %u\\n\",\n        //        state.length));\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = COPY_;\n        if (flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case COPY_:\n        state.mode = COPY;\n        /* falls through */\n      case COPY:\n        copy = state.length;\n        if (copy) {\n          if (copy > have) { copy = have; }\n          if (copy > left) { copy = left; }\n          if (copy === 0) { break inf_leave; }\n          //--- zmemcpy(put, next, copy); ---\n          output.set(input.subarray(next, next + copy), put);\n          //---//\n          have -= copy;\n          next += copy;\n          left -= copy;\n          put += copy;\n          state.length -= copy;\n          break;\n        }\n        //Tracev((stderr, \"inflate:       stored end\\n\"));\n        state.mode = TYPE;\n        break;\n      case TABLE:\n        //=== NEEDBITS(14); */\n        while (bits < 14) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.nlen = (hold & 0x1f)/*BITS(5)*/ + 257;\n        //--- DROPBITS(5) ---//\n        hold >>>= 5;\n        bits -= 5;\n        //---//\n        state.ndist = (hold & 0x1f)/*BITS(5)*/ + 1;\n        //--- DROPBITS(5) ---//\n        hold >>>= 5;\n        bits -= 5;\n        //---//\n        state.ncode = (hold & 0x0f)/*BITS(4)*/ + 4;\n        //--- DROPBITS(4) ---//\n        hold >>>= 4;\n        bits -= 4;\n        //---//\n//#ifndef PKZIP_BUG_WORKAROUND\n        if (state.nlen > 286 || state.ndist > 30) {\n          strm.msg = 'too many length or distance symbols';\n          state.mode = BAD;\n          break;\n        }\n//#endif\n        //Tracev((stderr, \"inflate:       table sizes ok\\n\"));\n        state.have = 0;\n        state.mode = LENLENS;\n        /* falls through */\n      case LENLENS:\n        while (state.have < state.ncode) {\n          //=== NEEDBITS(3);\n          while (bits < 3) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.lens[order[state.have++]] = (hold & 0x07);//BITS(3);\n          //--- DROPBITS(3) ---//\n          hold >>>= 3;\n          bits -= 3;\n          //---//\n        }\n        while (state.have < 19) {\n          state.lens[order[state.have++]] = 0;\n        }\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        //state.next = state.codes;\n        //state.lencode = state.next;\n        // Switch to use dynamic table\n        state.lencode = state.lendyn;\n        state.lenbits = 7;\n\n        opts = { bits: state.lenbits };\n        ret = inftrees(CODES, state.lens, 0, 19, state.lencode, 0, state.work, opts);\n        state.lenbits = opts.bits;\n\n        if (ret) {\n          strm.msg = 'invalid code lengths set';\n          state.mode = BAD;\n          break;\n        }\n        //Tracev((stderr, \"inflate:       code lengths ok\\n\"));\n        state.have = 0;\n        state.mode = CODELENS;\n        /* falls through */\n      case CODELENS:\n        while (state.have < state.nlen + state.ndist) {\n          for (;;) {\n            here = state.lencode[hold & ((1 << state.lenbits) - 1)];/*BITS(state.lenbits)*/\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          if (here_val < 16) {\n            //--- DROPBITS(here.bits) ---//\n            hold >>>= here_bits;\n            bits -= here_bits;\n            //---//\n            state.lens[state.have++] = here_val;\n          }\n          else {\n            if (here_val === 16) {\n              //=== NEEDBITS(here.bits + 2);\n              n = here_bits + 2;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              if (state.have === 0) {\n                strm.msg = 'invalid bit length repeat';\n                state.mode = BAD;\n                break;\n              }\n              len = state.lens[state.have - 1];\n              copy = 3 + (hold & 0x03);//BITS(2);\n              //--- DROPBITS(2) ---//\n              hold >>>= 2;\n              bits -= 2;\n              //---//\n            }\n            else if (here_val === 17) {\n              //=== NEEDBITS(here.bits + 3);\n              n = here_bits + 3;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              len = 0;\n              copy = 3 + (hold & 0x07);//BITS(3);\n              //--- DROPBITS(3) ---//\n              hold >>>= 3;\n              bits -= 3;\n              //---//\n            }\n            else {\n              //=== NEEDBITS(here.bits + 7);\n              n = here_bits + 7;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              len = 0;\n              copy = 11 + (hold & 0x7f);//BITS(7);\n              //--- DROPBITS(7) ---//\n              hold >>>= 7;\n              bits -= 7;\n              //---//\n            }\n            if (state.have + copy > state.nlen + state.ndist) {\n              strm.msg = 'invalid bit length repeat';\n              state.mode = BAD;\n              break;\n            }\n            while (copy--) {\n              state.lens[state.have++] = len;\n            }\n          }\n        }\n\n        /* handle error breaks in while */\n        if (state.mode === BAD) { break; }\n\n        /* check for end-of-block code (better have one) */\n        if (state.lens[256] === 0) {\n          strm.msg = 'invalid code -- missing end-of-block';\n          state.mode = BAD;\n          break;\n        }\n\n        /* build code tables -- note: do not change the lenbits or distbits\n           values here (9 and 6) without reading the comments in inftrees.h\n           concerning the ENOUGH constants, which depend on those values */\n        state.lenbits = 9;\n\n        opts = { bits: state.lenbits };\n        ret = inftrees(LENS, state.lens, 0, state.nlen, state.lencode, 0, state.work, opts);\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        // state.next_index = opts.table_index;\n        state.lenbits = opts.bits;\n        // state.lencode = state.next;\n\n        if (ret) {\n          strm.msg = 'invalid literal/lengths set';\n          state.mode = BAD;\n          break;\n        }\n\n        state.distbits = 6;\n        //state.distcode.copy(state.codes);\n        // Switch to use dynamic table\n        state.distcode = state.distdyn;\n        opts = { bits: state.distbits };\n        ret = inftrees(DISTS, state.lens, state.nlen, state.ndist, state.distcode, 0, state.work, opts);\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        // state.next_index = opts.table_index;\n        state.distbits = opts.bits;\n        // state.distcode = state.next;\n\n        if (ret) {\n          strm.msg = 'invalid distances set';\n          state.mode = BAD;\n          break;\n        }\n        //Tracev((stderr, 'inflate:       codes ok\\n'));\n        state.mode = LEN_;\n        if (flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case LEN_:\n        state.mode = LEN;\n        /* falls through */\n      case LEN:\n        if (have >= 6 && left >= 258) {\n          //--- RESTORE() ---\n          strm.next_out = put;\n          strm.avail_out = left;\n          strm.next_in = next;\n          strm.avail_in = have;\n          state.hold = hold;\n          state.bits = bits;\n          //---\n          inffast(strm, _out);\n          //--- LOAD() ---\n          put = strm.next_out;\n          output = strm.output;\n          left = strm.avail_out;\n          next = strm.next_in;\n          input = strm.input;\n          have = strm.avail_in;\n          hold = state.hold;\n          bits = state.bits;\n          //---\n\n          if (state.mode === TYPE) {\n            state.back = -1;\n          }\n          break;\n        }\n        state.back = 0;\n        for (;;) {\n          here = state.lencode[hold & ((1 << state.lenbits) - 1)];  /*BITS(state.lenbits)*/\n          here_bits = here >>> 24;\n          here_op = (here >>> 16) & 0xff;\n          here_val = here & 0xffff;\n\n          if (here_bits <= bits) { break; }\n          //--- PULLBYTE() ---//\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n          //---//\n        }\n        if (here_op && (here_op & 0xf0) === 0) {\n          last_bits = here_bits;\n          last_op = here_op;\n          last_val = here_val;\n          for (;;) {\n            here = state.lencode[last_val +\n                    ((hold & ((1 << (last_bits + last_op)) - 1))/*BITS(last.bits + last.op)*/ >> last_bits)];\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((last_bits + here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          //--- DROPBITS(last.bits) ---//\n          hold >>>= last_bits;\n          bits -= last_bits;\n          //---//\n          state.back += last_bits;\n        }\n        //--- DROPBITS(here.bits) ---//\n        hold >>>= here_bits;\n        bits -= here_bits;\n        //---//\n        state.back += here_bits;\n        state.length = here_val;\n        if (here_op === 0) {\n          //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?\n          //        \"inflate:         literal '%c'\\n\" :\n          //        \"inflate:         literal 0x%02x\\n\", here.val));\n          state.mode = LIT;\n          break;\n        }\n        if (here_op & 32) {\n          //Tracevv((stderr, \"inflate:         end of block\\n\"));\n          state.back = -1;\n          state.mode = TYPE;\n          break;\n        }\n        if (here_op & 64) {\n          strm.msg = 'invalid literal/length code';\n          state.mode = BAD;\n          break;\n        }\n        state.extra = here_op & 15;\n        state.mode = LENEXT;\n        /* falls through */\n      case LENEXT:\n        if (state.extra) {\n          //=== NEEDBITS(state.extra);\n          n = state.extra;\n          while (bits < n) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.length += hold & ((1 << state.extra) - 1)/*BITS(state.extra)*/;\n          //--- DROPBITS(state.extra) ---//\n          hold >>>= state.extra;\n          bits -= state.extra;\n          //---//\n          state.back += state.extra;\n        }\n        //Tracevv((stderr, \"inflate:         length %u\\n\", state.length));\n        state.was = state.length;\n        state.mode = DIST;\n        /* falls through */\n      case DIST:\n        for (;;) {\n          here = state.distcode[hold & ((1 << state.distbits) - 1)];/*BITS(state.distbits)*/\n          here_bits = here >>> 24;\n          here_op = (here >>> 16) & 0xff;\n          here_val = here & 0xffff;\n\n          if ((here_bits) <= bits) { break; }\n          //--- PULLBYTE() ---//\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n          //---//\n        }\n        if ((here_op & 0xf0) === 0) {\n          last_bits = here_bits;\n          last_op = here_op;\n          last_val = here_val;\n          for (;;) {\n            here = state.distcode[last_val +\n                    ((hold & ((1 << (last_bits + last_op)) - 1))/*BITS(last.bits + last.op)*/ >> last_bits)];\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((last_bits + here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          //--- DROPBITS(last.bits) ---//\n          hold >>>= last_bits;\n          bits -= last_bits;\n          //---//\n          state.back += last_bits;\n        }\n        //--- DROPBITS(here.bits) ---//\n        hold >>>= here_bits;\n        bits -= here_bits;\n        //---//\n        state.back += here_bits;\n        if (here_op & 64) {\n          strm.msg = 'invalid distance code';\n          state.mode = BAD;\n          break;\n        }\n        state.offset = here_val;\n        state.extra = (here_op) & 15;\n        state.mode = DISTEXT;\n        /* falls through */\n      case DISTEXT:\n        if (state.extra) {\n          //=== NEEDBITS(state.extra);\n          n = state.extra;\n          while (bits < n) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.offset += hold & ((1 << state.extra) - 1)/*BITS(state.extra)*/;\n          //--- DROPBITS(state.extra) ---//\n          hold >>>= state.extra;\n          bits -= state.extra;\n          //---//\n          state.back += state.extra;\n        }\n//#ifdef INFLATE_STRICT\n        if (state.offset > state.dmax) {\n          strm.msg = 'invalid distance too far back';\n          state.mode = BAD;\n          break;\n        }\n//#endif\n        //Tracevv((stderr, \"inflate:         distance %u\\n\", state.offset));\n        state.mode = MATCH;\n        /* falls through */\n      case MATCH:\n        if (left === 0) { break inf_leave; }\n        copy = _out - left;\n        if (state.offset > copy) {         /* copy from window */\n          copy = state.offset - copy;\n          if (copy > state.whave) {\n            if (state.sane) {\n              strm.msg = 'invalid distance too far back';\n              state.mode = BAD;\n              break;\n            }\n// (!) This block is disabled in zlib defaults,\n// don't enable it for binary compatibility\n//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR\n//          Trace((stderr, \"inflate.c too far\\n\"));\n//          copy -= state.whave;\n//          if (copy > state.length) { copy = state.length; }\n//          if (copy > left) { copy = left; }\n//          left -= copy;\n//          state.length -= copy;\n//          do {\n//            output[put++] = 0;\n//          } while (--copy);\n//          if (state.length === 0) { state.mode = LEN; }\n//          break;\n//#endif\n          }\n          if (copy > state.wnext) {\n            copy -= state.wnext;\n            from = state.wsize - copy;\n          }\n          else {\n            from = state.wnext - copy;\n          }\n          if (copy > state.length) { copy = state.length; }\n          from_source = state.window;\n        }\n        else {                              /* copy from output */\n          from_source = output;\n          from = put - state.offset;\n          copy = state.length;\n        }\n        if (copy > left) { copy = left; }\n        left -= copy;\n        state.length -= copy;\n        do {\n          output[put++] = from_source[from++];\n        } while (--copy);\n        if (state.length === 0) { state.mode = LEN; }\n        break;\n      case LIT:\n        if (left === 0) { break inf_leave; }\n        output[put++] = state.length;\n        left--;\n        state.mode = LEN;\n        break;\n      case CHECK:\n        if (state.wrap) {\n          //=== NEEDBITS(32);\n          while (bits < 32) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            // Use '|' instead of '+' to make sure that result is signed\n            hold |= input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          _out -= left;\n          strm.total_out += _out;\n          state.total += _out;\n          if (_out) {\n            strm.adler = state.check =\n                /*UPDATE(state.check, put - _out, _out);*/\n                (state.flags ? crc32_1(state.check, output, _out, put - _out) : adler32_1(state.check, output, _out, put - _out));\n\n          }\n          _out = left;\n          // NB: crc32 stored as signed 32-bit int, zswap32 returns signed too\n          if ((state.flags ? hold : zswap32(hold)) !== state.check) {\n            strm.msg = 'incorrect data check';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          //Tracev((stderr, \"inflate:   check matches trailer\\n\"));\n        }\n        state.mode = LENGTH;\n        /* falls through */\n      case LENGTH:\n        if (state.wrap && state.flags) {\n          //=== NEEDBITS(32);\n          while (bits < 32) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          if (hold !== (state.total & 0xffffffff)) {\n            strm.msg = 'incorrect length check';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          //Tracev((stderr, \"inflate:   length matches trailer\\n\"));\n        }\n        state.mode = DONE;\n        /* falls through */\n      case DONE:\n        ret = Z_STREAM_END$1;\n        break inf_leave;\n      case BAD:\n        ret = Z_DATA_ERROR$1;\n        break inf_leave;\n      case MEM:\n        return Z_MEM_ERROR$1;\n      case SYNC:\n        /* falls through */\n      default:\n        return Z_STREAM_ERROR$1;\n    }\n  }\n\n  // inf_leave <- here is real place for \"goto inf_leave\", emulated via \"break inf_leave\"\n\n  /*\n     Return from inflate(), updating the total counts and the check value.\n     If there was no progress during the inflate() call, return a buffer\n     error.  Call updatewindow() to create and/or update the window state.\n     Note: a memory error from inflate() is non-recoverable.\n   */\n\n  //--- RESTORE() ---\n  strm.next_out = put;\n  strm.avail_out = left;\n  strm.next_in = next;\n  strm.avail_in = have;\n  state.hold = hold;\n  state.bits = bits;\n  //---\n\n  if (state.wsize || (_out !== strm.avail_out && state.mode < BAD &&\n                      (state.mode < CHECK || flush !== Z_FINISH$1))) {\n    if (updatewindow(strm, strm.output, strm.next_out, _out - strm.avail_out)) ;\n  }\n  _in -= strm.avail_in;\n  _out -= strm.avail_out;\n  strm.total_in += _in;\n  strm.total_out += _out;\n  state.total += _out;\n  if (state.wrap && _out) {\n    strm.adler = state.check = /*UPDATE(state.check, strm.next_out - _out, _out);*/\n      (state.flags ? crc32_1(state.check, output, _out, strm.next_out - _out) : adler32_1(state.check, output, _out, strm.next_out - _out));\n  }\n  strm.data_type = state.bits + (state.last ? 64 : 0) +\n                    (state.mode === TYPE ? 128 : 0) +\n                    (state.mode === LEN_ || state.mode === COPY_ ? 256 : 0);\n  if (((_in === 0 && _out === 0) || flush === Z_FINISH$1) && ret === Z_OK$1) {\n    ret = Z_BUF_ERROR;\n  }\n  return ret;\n};\n\n\nconst inflateEnd = (strm) => {\n\n  if (!strm || !strm.state /*|| strm->zfree == (free_func)0*/) {\n    return Z_STREAM_ERROR$1;\n  }\n\n  let state = strm.state;\n  if (state.window) {\n    state.window = null;\n  }\n  strm.state = null;\n  return Z_OK$1;\n};\n\n\nconst inflateGetHeader = (strm, head) => {\n\n  /* check state */\n  if (!strm || !strm.state) { return Z_STREAM_ERROR$1; }\n  const state = strm.state;\n  if ((state.wrap & 2) === 0) { return Z_STREAM_ERROR$1; }\n\n  /* save header structure */\n  state.head = head;\n  head.done = false;\n  return Z_OK$1;\n};\n\n\nconst inflateSetDictionary = (strm, dictionary) => {\n  const dictLength = dictionary.length;\n\n  let state;\n  let dictid;\n  let ret;\n\n  /* check state */\n  if (!strm /* == Z_NULL */ || !strm.state /* == Z_NULL */) { return Z_STREAM_ERROR$1; }\n  state = strm.state;\n\n  if (state.wrap !== 0 && state.mode !== DICT) {\n    return Z_STREAM_ERROR$1;\n  }\n\n  /* check for correct dictionary identifier */\n  if (state.mode === DICT) {\n    dictid = 1; /* adler32(0, null, 0)*/\n    /* dictid = adler32(dictid, dictionary, dictLength); */\n    dictid = adler32_1(dictid, dictionary, dictLength, 0);\n    if (dictid !== state.check) {\n      return Z_DATA_ERROR$1;\n    }\n  }\n  /* copy dictionary to window using updatewindow(), which will amend the\n   existing dictionary if appropriate */\n  ret = updatewindow(strm, dictionary, dictLength, dictLength);\n  if (ret) {\n    state.mode = MEM;\n    return Z_MEM_ERROR$1;\n  }\n  state.havedict = 1;\n  // Tracev((stderr, \"inflate:   dictionary set\\n\"));\n  return Z_OK$1;\n};\n\n\nvar inflateReset_1 = inflateReset;\nvar inflateReset2_1 = inflateReset2;\nvar inflateResetKeep_1 = inflateResetKeep;\nvar inflateInit_1 = inflateInit;\nvar inflateInit2_1 = inflateInit2;\nvar inflate_2$1 = inflate$2;\nvar inflateEnd_1 = inflateEnd;\nvar inflateGetHeader_1 = inflateGetHeader;\nvar inflateSetDictionary_1 = inflateSetDictionary;\nvar inflateInfo = 'pako inflate (from Nodeca project)';\n\n/* Not implemented\nmodule.exports.inflateCopy = inflateCopy;\nmodule.exports.inflateGetDictionary = inflateGetDictionary;\nmodule.exports.inflateMark = inflateMark;\nmodule.exports.inflatePrime = inflatePrime;\nmodule.exports.inflateSync = inflateSync;\nmodule.exports.inflateSyncPoint = inflateSyncPoint;\nmodule.exports.inflateUndermine = inflateUndermine;\n*/\n\nvar inflate_1$2 = {\n\tinflateReset: inflateReset_1,\n\tinflateReset2: inflateReset2_1,\n\tinflateResetKeep: inflateResetKeep_1,\n\tinflateInit: inflateInit_1,\n\tinflateInit2: inflateInit2_1,\n\tinflate: inflate_2$1,\n\tinflateEnd: inflateEnd_1,\n\tinflateGetHeader: inflateGetHeader_1,\n\tinflateSetDictionary: inflateSetDictionary_1,\n\tinflateInfo: inflateInfo\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nfunction GZheader() {\n  /* true if compressed data believed to be text */\n  this.text       = 0;\n  /* modification time */\n  this.time       = 0;\n  /* extra flags (not used when writing a gzip file) */\n  this.xflags     = 0;\n  /* operating system */\n  this.os         = 0;\n  /* pointer to extra field or Z_NULL if none */\n  this.extra      = null;\n  /* extra field length (valid if extra != Z_NULL) */\n  this.extra_len  = 0; // Actually, we don't need it in JS,\n                       // but leave for few code modifications\n\n  //\n  // Setup limits is not necessary because in js we should not preallocate memory\n  // for inflate use constant limit in 65536 bytes\n  //\n\n  /* space at extra (only when reading header) */\n  // this.extra_max  = 0;\n  /* pointer to zero-terminated file name or Z_NULL */\n  this.name       = '';\n  /* space at name (only when reading header) */\n  // this.name_max   = 0;\n  /* pointer to zero-terminated comment or Z_NULL */\n  this.comment    = '';\n  /* space at comment (only when reading header) */\n  // this.comm_max   = 0;\n  /* true if there was or will be a header crc */\n  this.hcrc       = 0;\n  /* true when done reading gzip header (not used when writing a gzip file) */\n  this.done       = false;\n}\n\nvar gzheader = GZheader;\n\nconst toString = Object.prototype.toString;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nconst {\n  Z_NO_FLUSH, Z_FINISH,\n  Z_OK, Z_STREAM_END, Z_NEED_DICT, Z_STREAM_ERROR, Z_DATA_ERROR, Z_MEM_ERROR\n} = constants$2;\n\n/* ===========================================================================*/\n\n\n/**\n * class Inflate\n *\n * Generic JS-style wrapper for zlib calls. If you don't need\n * streaming behaviour - use more simple functions: [[inflate]]\n * and [[inflateRaw]].\n **/\n\n/* internal\n * inflate.chunks -> Array\n *\n * Chunks of output data, if [[Inflate#onData]] not overridden.\n **/\n\n/**\n * Inflate.result -> Uint8Array|String\n *\n * Uncompressed result, generated by default [[Inflate#onData]]\n * and [[Inflate#onEnd]] handlers. Filled after you push last chunk\n * (call [[Inflate#push]] with `Z_FINISH` / `true` param).\n **/\n\n/**\n * Inflate.err -> Number\n *\n * Error code after inflate finished. 0 (Z_OK) on success.\n * Should be checked if broken data possible.\n **/\n\n/**\n * Inflate.msg -> String\n *\n * Error message, if [[Inflate.err]] != 0\n **/\n\n\n/**\n * new Inflate(options)\n * - options (Object): zlib inflate options.\n *\n * Creates new inflator instance with specified params. Throws exception\n * on bad params. Supported options:\n *\n * - `windowBits`\n * - `dictionary`\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Additional options, for internal needs:\n *\n * - `chunkSize` - size of generated data chunks (16K by default)\n * - `raw` (Boolean) - do raw inflate\n * - `to` (String) - if equal to 'string', then result will be converted\n *   from utf8 to utf16 (javascript) string. When string output requested,\n *   chunk length can differ from `chunkSize`, depending on content.\n *\n * By default, when no options set, autodetect deflate/gzip data format via\n * wrapper header.\n *\n * ##### Example:\n *\n * ```javascript\n * const pako = require('pako')\n * const chunk1 = new Uint8Array([1,2,3,4,5,6,7,8,9])\n * const chunk2 = new Uint8Array([10,11,12,13,14,15,16,17,18,19]);\n *\n * const inflate = new pako.Inflate({ level: 3});\n *\n * inflate.push(chunk1, false);\n * inflate.push(chunk2, true);  // true -> last chunk\n *\n * if (inflate.err) { throw new Error(inflate.err); }\n *\n * console.log(inflate.result);\n * ```\n **/\nfunction Inflate$1(options) {\n  this.options = common.assign({\n    chunkSize: 1024 * 64,\n    windowBits: 15,\n    to: ''\n  }, options || {});\n\n  const opt = this.options;\n\n  // Force window size for `raw` data, if not set directly,\n  // because we have no header for autodetect.\n  if (opt.raw && (opt.windowBits >= 0) && (opt.windowBits < 16)) {\n    opt.windowBits = -opt.windowBits;\n    if (opt.windowBits === 0) { opt.windowBits = -15; }\n  }\n\n  // If `windowBits` not defined (and mode not raw) - set autodetect flag for gzip/deflate\n  if ((opt.windowBits >= 0) && (opt.windowBits < 16) &&\n      !(options && options.windowBits)) {\n    opt.windowBits += 32;\n  }\n\n  // Gzip header has no info about windows size, we can do autodetect only\n  // for deflate. So, if window size not set, force it to max when gzip possible\n  if ((opt.windowBits > 15) && (opt.windowBits < 48)) {\n    // bit 3 (16) -> gzipped data\n    // bit 4 (32) -> autodetect gzip/deflate\n    if ((opt.windowBits & 15) === 0) {\n      opt.windowBits |= 15;\n    }\n  }\n\n  this.err    = 0;      // error code, if happens (0 = Z_OK)\n  this.msg    = '';     // error message\n  this.ended  = false;  // used to avoid multiple onEnd() calls\n  this.chunks = [];     // chunks of compressed data\n\n  this.strm   = new zstream();\n  this.strm.avail_out = 0;\n\n  let status  = inflate_1$2.inflateInit2(\n    this.strm,\n    opt.windowBits\n  );\n\n  if (status !== Z_OK) {\n    throw new Error(messages[status]);\n  }\n\n  this.header = new gzheader();\n\n  inflate_1$2.inflateGetHeader(this.strm, this.header);\n\n  // Setup dictionary\n  if (opt.dictionary) {\n    // Convert data if needed\n    if (typeof opt.dictionary === 'string') {\n      opt.dictionary = strings.string2buf(opt.dictionary);\n    } else if (toString.call(opt.dictionary) === '[object ArrayBuffer]') {\n      opt.dictionary = new Uint8Array(opt.dictionary);\n    }\n    if (opt.raw) { //In raw mode we need to set the dictionary early\n      status = inflate_1$2.inflateSetDictionary(this.strm, opt.dictionary);\n      if (status !== Z_OK) {\n        throw new Error(messages[status]);\n      }\n    }\n  }\n}\n\n/**\n * Inflate#push(data[, flush_mode]) -> Boolean\n * - data (Uint8Array|ArrayBuffer): input data\n * - flush_mode (Number|Boolean): 0..6 for corresponding Z_NO_FLUSH..Z_TREE\n *   flush modes. See constants. Skipped or `false` means Z_NO_FLUSH,\n *   `true` means Z_FINISH.\n *\n * Sends input data to inflate pipe, generating [[Inflate#onData]] calls with\n * new output chunks. Returns `true` on success. If end of stream detected,\n * [[Inflate#onEnd]] will be called.\n *\n * `flush_mode` is not needed for normal operation, because end of stream\n * detected automatically. You may try to use it for advanced things, but\n * this functionality was not tested.\n *\n * On fail call [[Inflate#onEnd]] with error code and return false.\n *\n * ##### Example\n *\n * ```javascript\n * push(chunk, false); // push one of data chunks\n * ...\n * push(chunk, true);  // push last chunk\n * ```\n **/\nInflate$1.prototype.push = function (data, flush_mode) {\n  const strm = this.strm;\n  const chunkSize = this.options.chunkSize;\n  const dictionary = this.options.dictionary;\n  let status, _flush_mode, last_avail_out;\n\n  if (this.ended) return false;\n\n  if (flush_mode === ~~flush_mode) _flush_mode = flush_mode;\n  else _flush_mode = flush_mode === true ? Z_FINISH : Z_NO_FLUSH;\n\n  // Convert data if needed\n  if (toString.call(data) === '[object ArrayBuffer]') {\n    strm.input = new Uint8Array(data);\n  } else {\n    strm.input = data;\n  }\n\n  strm.next_in = 0;\n  strm.avail_in = strm.input.length;\n\n  for (;;) {\n    if (strm.avail_out === 0) {\n      strm.output = new Uint8Array(chunkSize);\n      strm.next_out = 0;\n      strm.avail_out = chunkSize;\n    }\n\n    status = inflate_1$2.inflate(strm, _flush_mode);\n\n    if (status === Z_NEED_DICT && dictionary) {\n      status = inflate_1$2.inflateSetDictionary(strm, dictionary);\n\n      if (status === Z_OK) {\n        status = inflate_1$2.inflate(strm, _flush_mode);\n      } else if (status === Z_DATA_ERROR) {\n        // Replace code with more verbose\n        status = Z_NEED_DICT;\n      }\n    }\n\n    // Skip snyc markers if more data follows and not raw mode\n    while (strm.avail_in > 0 &&\n           status === Z_STREAM_END &&\n           strm.state.wrap > 0 &&\n           data[strm.next_in] !== 0)\n    {\n      inflate_1$2.inflateReset(strm);\n      status = inflate_1$2.inflate(strm, _flush_mode);\n    }\n\n    switch (status) {\n      case Z_STREAM_ERROR:\n      case Z_DATA_ERROR:\n      case Z_NEED_DICT:\n      case Z_MEM_ERROR:\n        this.onEnd(status);\n        this.ended = true;\n        return false;\n    }\n\n    // Remember real `avail_out` value, because we may patch out buffer content\n    // to align utf8 strings boundaries.\n    last_avail_out = strm.avail_out;\n\n    if (strm.next_out) {\n      if (strm.avail_out === 0 || status === Z_STREAM_END) {\n\n        if (this.options.to === 'string') {\n\n          let next_out_utf8 = strings.utf8border(strm.output, strm.next_out);\n\n          let tail = strm.next_out - next_out_utf8;\n          let utf8str = strings.buf2string(strm.output, next_out_utf8);\n\n          // move tail & realign counters\n          strm.next_out = tail;\n          strm.avail_out = chunkSize - tail;\n          if (tail) strm.output.set(strm.output.subarray(next_out_utf8, next_out_utf8 + tail), 0);\n\n          this.onData(utf8str);\n\n        } else {\n          this.onData(strm.output.length === strm.next_out ? strm.output : strm.output.subarray(0, strm.next_out));\n        }\n      }\n    }\n\n    // Must repeat iteration if out buffer is full\n    if (status === Z_OK && last_avail_out === 0) continue;\n\n    // Finalize if end of stream reached.\n    if (status === Z_STREAM_END) {\n      status = inflate_1$2.inflateEnd(this.strm);\n      this.onEnd(status);\n      this.ended = true;\n      return true;\n    }\n\n    if (strm.avail_in === 0) break;\n  }\n\n  return true;\n};\n\n\n/**\n * Inflate#onData(chunk) -> Void\n * - chunk (Uint8Array|String): output data. When string output requested,\n *   each chunk will be string.\n *\n * By default, stores data blocks in `chunks[]` property and glue\n * those in `onEnd`. Override this handler, if you need another behaviour.\n **/\nInflate$1.prototype.onData = function (chunk) {\n  this.chunks.push(chunk);\n};\n\n\n/**\n * Inflate#onEnd(status) -> Void\n * - status (Number): inflate status. 0 (Z_OK) on success,\n *   other if not.\n *\n * Called either after you tell inflate that the input stream is\n * complete (Z_FINISH). By default - join collected chunks,\n * free memory and fill `results` / `err` properties.\n **/\nInflate$1.prototype.onEnd = function (status) {\n  // On success - join\n  if (status === Z_OK) {\n    if (this.options.to === 'string') {\n      this.result = this.chunks.join('');\n    } else {\n      this.result = common.flattenChunks(this.chunks);\n    }\n  }\n  this.chunks = [];\n  this.err = status;\n  this.msg = this.strm.msg;\n};\n\n\n/**\n * inflate(data[, options]) -> Uint8Array|String\n * - data (Uint8Array): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * Decompress `data` with inflate/ungzip and `options`. Autodetect\n * format via wrapper header by default. That's why we don't provide\n * separate `ungzip` method.\n *\n * Supported options are:\n *\n * - windowBits\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information.\n *\n * Sugar (options):\n *\n * - `raw` (Boolean) - say that we work with raw stream, if you don't wish to specify\n *   negative windowBits implicitly.\n * - `to` (String) - if equal to 'string', then result will be converted\n *   from utf8 to utf16 (javascript) string. When string output requested,\n *   chunk length can differ from `chunkSize`, depending on content.\n *\n *\n * ##### Example:\n *\n * ```javascript\n * const pako = require('pako');\n * const input = pako.deflate(new Uint8Array([1,2,3,4,5,6,7,8,9]));\n * let output;\n *\n * try {\n *   output = pako.inflate(input);\n * } catch (err) {\n *   console.log(err);\n * }\n * ```\n **/\nfunction inflate$1(input, options) {\n  const inflator = new Inflate$1(options);\n\n  inflator.push(input);\n\n  // That will never happens, if you don't cheat with options :)\n  if (inflator.err) throw inflator.msg || messages[inflator.err];\n\n  return inflator.result;\n}\n\n\n/**\n * inflateRaw(data[, options]) -> Uint8Array|String\n * - data (Uint8Array): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * The same as [[inflate]], but creates raw data, without wrapper\n * (header and adler32 crc).\n **/\nfunction inflateRaw$1(input, options) {\n  options = options || {};\n  options.raw = true;\n  return inflate$1(input, options);\n}\n\n\n/**\n * ungzip(data[, options]) -> Uint8Array|String\n * - data (Uint8Array): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * Just shortcut to [[inflate]], because it autodetects format\n * by header.content. Done for convenience.\n **/\n\n\nvar Inflate_1$1 = Inflate$1;\nvar inflate_2 = inflate$1;\nvar inflateRaw_1$1 = inflateRaw$1;\nvar ungzip$1 = inflate$1;\nvar constants = constants$2;\n\nvar inflate_1$1 = {\n\tInflate: Inflate_1$1,\n\tinflate: inflate_2,\n\tinflateRaw: inflateRaw_1$1,\n\tungzip: ungzip$1,\n\tconstants: constants\n};\n\nconst { Deflate, deflate, deflateRaw, gzip } = deflate_1$1;\n\nconst { Inflate, inflate, inflateRaw, ungzip } = inflate_1$1;\n\n\n\nvar Deflate_1 = Deflate;\nvar deflate_1 = deflate;\nvar deflateRaw_1 = deflateRaw;\nvar gzip_1 = gzip;\nvar Inflate_1 = Inflate;\nvar inflate_1 = inflate;\nvar inflateRaw_1 = inflateRaw;\nvar ungzip_1 = ungzip;\nvar constants_1 = constants$2;\n\nvar pako = {\n\tDeflate: Deflate_1,\n\tdeflate: deflate_1,\n\tdeflateRaw: deflateRaw_1,\n\tgzip: gzip_1,\n\tInflate: Inflate_1,\n\tinflate: inflate_1,\n\tinflateRaw: inflateRaw_1,\n\tungzip: ungzip_1,\n\tconstants: constants_1\n};\n\nexport { Deflate_1 as Deflate, Inflate_1 as Inflate, constants_1 as constants, pako as default, deflate_1 as deflate, deflateRaw_1 as deflateRaw, gzip_1 as gzip, inflate_1 as inflate, inflateRaw_1 as inflateRaw, ungzip_1 as ungzip };\n","import {_unpack_struct_from, _structure_size, struct, dtype_getter, bitSize, DataView64} from './core.js';\nimport pako from '../node_modules/pako/dist/pako.esm.mjs';\n\nconst zlib = {\n  decompress: function(buf) {\n    let input_array = new Uint8Array(buf);\n    return pako.inflate(input_array).buffer;\n    }\n};\n\nclass AbstractBTree {\n  //B_LINK_NODE = null;\n  //NODE_TYPE = null;\n\n  constructor(fh, offset) {\n    //\"\"\" initalize. \"\"\"\n    this.fh = fh;\n    this.offset = offset;\n    this.depth = null;\n  }\n\n  init() {\n    this.all_nodes = new Map();\n    this._read_root_node();\n    this._read_children();\n  }\n  \n  _read_children() {\n    // # Leaf nodes: level 0\n    // # Root node: level \"depth\"\n    let node_level = this.depth;\n    while (node_level > 0) {\n      for (var parent_node of this.all_nodes.get(node_level)) {\n        for (var child_addr of parent_node.get('addresses')) {\n          this._add_node(this._read_node(child_addr, node_level-1));\n        }\n      }\n      node_level--;\n    }\n  }\n  \n  _read_root_node() {\n    let root_node = this._read_node(this.offset, null);\n    this._add_node(root_node);\n    this.depth = root_node.get('node_level');\n  }\n  \n  _add_node(node) {\n    let node_level = node.get('node_level');\n    if (this.all_nodes.has(node_level)) {\n      this.all_nodes.get(node_level).push(node);\n    }\n    else {\n      this.all_nodes.set(node_level, [node]);\n    }\n  }\n  \n  _read_node(offset, node_level) {\n    // \"\"\" Return a single node in the B-Tree located at a given offset. \"\"\"\n    node = this._read_node_header(offset, node_level);\n    node.set('keys', []);\n    node.set('addresses', []);\n    return node\n  }\n\n  _read_node_header(offset) {\n    //\"\"\" Return a single node header in the b-tree located at a give offset. \"\"\"\n    throw \"NotImplementedError: must define _read_node_header in implementation class\";\n  }\n}\n\nexport class BTreeV1 extends AbstractBTree {\n  /*\n  \"\"\"\n  HDF5 version 1 B-Tree.\n  \"\"\"\n  */\n  \n  B_LINK_NODE = new Map([\n    ['signature', '4s'],\n\n    ['node_type', 'B'],\n    ['node_level', 'B'],\n    ['entries_used', 'H'],\n\n    ['left_sibling', 'Q'],    // 8 byte addressing\n    ['right_sibling', 'Q']    // 8 byte addressing\n  ])\n  \n  _read_node_header(offset, node_level) {\n    // \"\"\" Return a single node header in the b-tree located at a give offset. \"\"\"\n    let node = _unpack_struct_from(this.B_LINK_NODE, this.fh, offset);\n    //assert node['signature'] == b'TREE'\n    //assert node['node_type'] == this.NODE_TYPE\n    if (node_level != null) {\n      if (node.get(\"node_level\") != node_level) {\n        throw \"node level does not match\"\n      }\n    }\n    return node;\n  }\n  \n}\n\n\nexport class BTreeV1Groups extends BTreeV1 {\n  /*\n  \"\"\"\n  HDF5 version 1 B-Tree storing group nodes (type 0).\n  \"\"\"\n  */\n  NODE_TYPE = 0;\n\n  constructor(fh, offset) {\n    super(fh, offset);\n    this.init();\n  }\n\n  _read_node(offset, node_level) {\n    // \"\"\" Return a single node in the B-Tree located at a given offset. \"\"\"\n    let node = this._read_node_header(offset, node_level);\n    offset += _structure_size(this.B_LINK_NODE);\n    let keys = [];\n    let addresses = [];\n    let entries_used = node.get('entries_used');\n    for (var i=0; i<entries_used; i++) {\n      let key = struct.unpack_from('<Q', this.fh, offset)[0];\n      offset += 8;\n      let address = struct.unpack_from('<Q', this.fh, offset)[0];\n      offset += 8;\n      keys.push(key);\n      addresses.push(address);\n    }\n    //# N+1 key\n    keys.push(struct.unpack_from('<Q', this.fh, offset)[0]);\n    node.set('keys', keys);\n    node.set('addresses', addresses);\n    return node;\n  }\n    \n  symbol_table_addresses() {\n    //\"\"\" Return a list of all symbol table address. \"\"\"\n    var all_address = [];\n    var root_nodes = this.all_nodes.get(0);\n    for (var node of root_nodes) {\n      all_address = all_address.concat(node.get('addresses'));\n    }\n    return all_address\n  }\n}\n\nexport class BTreeV1RawDataChunks extends BTreeV1 {\n  /*\n  HDF5 version 1 B-Tree storing raw data chunk nodes (type 1).\n  */\n  NODE_TYPE = 1;\n  \n  constructor(fh, offset, dims) {\n    //\"\"\" initalize. \"\"\"\n    super(fh, offset);\n    this.dims = dims;\n    this.init();\n  }\n\n  _read_node(offset, node_level) {\n    //\"\"\" Return a single node in the b-tree located at a give offset. \"\"\"\n    //this.fh.seek(offset)\n    let node = this._read_node_header(offset, node_level);\n    offset += _structure_size(this.B_LINK_NODE);\n    //assert node['signature'] == b'TREE'\n    //assert node['node_type'] == 1\n\n    var keys = [];\n    var addresses = [];\n    let entries_used = node.get('entries_used');\n    for (var i=0; i<entries_used; i++) {\n      let [chunk_size, filter_mask] = struct.unpack_from('<II', this.fh, offset);\n      offset += 8;\n      let fmt = '<' + this.dims.toFixed() + 'Q';\n      let fmt_size = struct.calcsize(fmt);\n      let chunk_offset = struct.unpack_from(fmt, this.fh, offset);\n      //console.log(struct.unpack_from('<8B', this.fh, offset));\n      offset += fmt_size;\n      let chunk_address = struct.unpack_from('<Q', this.fh, offset)[0];\n      offset += 8;\n\n      keys.push(new Map([\n          ['chunk_size', chunk_size],\n          ['filter_mask', filter_mask],\n          ['chunk_offset', chunk_offset]\n      ]))\n      addresses.push(chunk_address);\n    }\n    node.set('keys', keys);\n    node.set('addresses', addresses);\n    return node\n  }\n\n  construct_data_from_chunks(chunk_shape, data_shape, dtype, filter_pipeline) {\n    //\"\"\" Build a complete data array from chunks. \"\"\"\n    var true_dtype;\n    var item_getter, item_big_endian, item_size;\n    if (dtype instanceof Array) {\n      true_dtype = dtype;\n      let dtype_class = dtype[0];\n      if (dtype_class == 'REFERENCE') {\n        let size = dtype[1];\n        if (size != 8) {\n          throw \"NotImplementedError('Unsupported Reference type')\";\n        }\n        var dtype = '<u8';\n        item_getter = 'getUint64';\n        item_big_endian = false;\n        item_size = 8;\n      }\n      else if (dtype_class == 'VLEN_STRING' || dtype_class == 'VLEN_SEQUENCE') {\n        item_getter = 'getVLENStruct';\n        item_big_endian = false;\n        item_size = 16;\n      }\n      else {\n        throw \"NotImplementedError('datatype not implemented')\";\n      }\n    }\n    else {\n      true_dtype = null;\n      [item_getter, item_big_endian, item_size] = dtype_getter(dtype);\n    }\n\n    //# create array to store data\n    var data_size = data_shape.reduce(function(a,b) { return a * b }, 1);\n    var chunk_size = chunk_shape.reduce(function(a,b) { return a * b }, 1);\n    let dims = (data_shape.length);\n    var current_stride = 1;\n    var chunk_strides = chunk_shape.slice().map(function(d) {\n      let s = current_stride; \n      current_stride *= d; \n      return s\n    });\n    var current_stride = 1;\n    var data_strides = data_shape.slice().reverse().map(function(d) {\n      let s = current_stride; \n      current_stride *= d; \n      return s\n    }).reverse();\n    var data = new Array(data_size);\n    let chunk_buffer_size = chunk_size * item_size;\n    for (var node of this.all_nodes.get(0)) {\n      //console.log(node);\n      let node_keys = node.get('keys');\n      let node_addresses = node.get('addresses');\n      let nkeys = node_keys.length;\n      for (var ik=0; ik<nkeys; ik++) {\n        let node_key = node_keys[ik];\n        let addr = node_addresses[ik];\n        var chunk_buffer;\n        if (filter_pipeline == null) {\n          chunk_buffer = this.fh.slice(addr, addr + chunk_buffer_size);\n        }\n        else {\n          chunk_buffer = this.fh.slice(addr, addr + node_key.get('chunk_size'));\n          let filter_mask = node_key.get('filter_mask');\n          chunk_buffer = this._filter_chunk(\n              chunk_buffer, filter_mask, filter_pipeline, item_size);\n        }\n\n        var chunk_offset = node_key.get('chunk_offset').slice(); //(0, -1);\n        var apos = chunk_offset.slice();\n        var cpos = apos.map(function() {return 0}); // start chunk pos at 0,0,0...\n        var cview = new DataView64(chunk_buffer);\n\n        for (var ci=0; ci<chunk_size; ci++) {\n          for (var d=dims-1; d>=0; d--) {\n            if (cpos[d] >= chunk_shape[d]) {\n              cpos[d] = 0;\n              apos[d] = chunk_offset[d];\n              if (d > 0) {\n                cpos[d-1] += 1;\n                apos[d-1] += 1;\n              }\n            }\n            else {\n              break;\n            }\n          }\n          let inbounds = apos.slice(0,-1).every(function(p, d) { return p < data_shape[d] });\n          if (inbounds) {\n            let cb_offset = ci * item_size;\n            let datum = cview[item_getter](cb_offset, !item_big_endian, item_size);\n            let ai = apos.slice(0,-1).reduce(function(prev, curr, index) { \n              return curr * data_strides[index] + prev }, 0);\n            data[ai] = datum;\n          }\n          cpos[dims-1] += 1;\n          apos[dims-1] += 1;\n        }\n      }\n    }\n    return data;\n  }\n\n  _filter_chunk(chunk_buffer, filter_mask, filter_pipeline, itemsize) {\n    //\"\"\" Apply decompression filters to a chunk of data. \"\"\"\n    let num_filters = filter_pipeline.length;\n    var chunk_buffer_out = chunk_buffer.slice();\n    for (var filter_index=num_filters-1; filter_index >=0; filter_index--) {\n      //for i, pipeline_entry in enumerate(filter_pipeline[::-1]):\n\n      //# A filter is skipped is the bit corresponding to its index in the\n      //# pipeline is set in filter_mask\n      if (filter_mask & (1 << filter_index)) {\n        continue\n      }\n      let pipeline_entry = filter_pipeline[filter_index];\n      let filter_id = pipeline_entry.get('filter_id');\n      if (filter_id == GZIP_DEFLATE_FILTER) {\n        chunk_buffer_out = zlib.decompress(chunk_buffer_out);\n      }\n\n      else if (filter_id == SHUFFLE_FILTER) {\n        let buffer_size = chunk_buffer_out.byteLength;\n        var unshuffled_view = new Uint8Array(buffer_size);\n        let step = Math.floor(buffer_size / itemsize);\n        let shuffled_view = new DataView(chunk_buffer_out);\n        for (var j=0; j<itemsize; j++) {\n          for (var i=0; i<step; i++) {\n            unshuffled_view[j + i*itemsize] = shuffled_view.getUint8(j*step + i);\n          }\n        }\n        chunk_buffer_out = unshuffled_view.buffer;\n      }\n      else if (filter_id == FLETCH32_FILTER) {\n        _verify_fletcher32(chunk_buffer_out);\n        //# strip off 4-byte checksum from end of buffer\n        chunk_buffer_out = chunk_buffer_out.slice(0, -4);\n      }\n      else {\n          throw 'NotImplementedError(\"Filter with id:' + filter_id.toFixed() + ' not supported\")';\n      }\n    }\n    return chunk_buffer_out;\n  }   \n}\n\nexport class BTreeV2 extends AbstractBTree {\n  /*\n  HDF5 version 2 B-Tree.\n  */\n\n  // III.A.2. Disk Format: Level 1A2 - Version 2 B-trees\n  B_TREE_HEADER = new Map([\n    ['signature', '4s'],\n\n    ['version', 'B'],\n    ['node_type', 'B'],\n    ['node_size', 'I'],\n    ['record_size', 'H'],\n    ['depth', 'H'],\n    ['split_percent', 'B'],\n    ['merge_percent', 'B'],\n\n    ['root_address', 'Q'],     // 8 byte addressing\n    ['root_nrecords', 'H'],\n    ['total_nrecords', 'Q'],   // 8 byte addressing\n  ]);\n\n  B_LINK_NODE = new Map([\n      ['signature', '4s'],\n\n      ['version', 'B'],\n      ['node_type', 'B'],\n  ])\n\n  constructor(fh, offset) {\n    super(fh, offset);\n    this.init();\n  }\n\n  _read_root_node() {\n    let h = this._read_tree_header(this.offset);\n    this.address_formats = this._calculate_address_formats(h);\n    this.header = h;\n    this.depth = h.get(\"depth\");\n\n    let address = [h.get(\"root_address\"), h.get(\"root_nrecords\"), h.get(\"total_nrecords\")];\n    let root_node = this._read_node(address, this.depth);\n    this._add_node(root_node);\n  }\n  \n  _read_tree_header(offset) {\n    let header = _unpack_struct_from(this.B_TREE_HEADER, this.fh, this.offset);\n    //assert header['signature'] == b'BTHD'\n    //assert header['node_type'] == this.NODE_TYPE\n    return header;\n  }\n  \n  _calculate_address_formats(header) {\n    let node_size = header.get(\"node_size\");\n    let record_size = header.get(\"record_size\");\n    let nrecords_max = 0;\n    let ntotalrecords_max = 0;\n    let address_formats = new Map();\n    let max_depth = header.get(\"depth\");\n    for (var node_level=0; node_level <= max_depth; node_level++) {\n      let offset_fmt = \"\";\n      let num1_fmt = \"\";\n      let num2_fmt = \"\";\n      let offset_size, num1_size, num2_size;\n      if (node_level == 0) { // leaf node\n        offset_size = 0;\n        num1_size = 0;\n        num2_size = 0;\n      }\n      else if (node_level == 1) { // internal node (twig node)\n        offset_size = 8;\n        offset_fmt = \"<Q\";\n        num1_size = this._required_bytes(nrecords_max);\n        num1_fmt = this._int_format(num1_size);\n        num2_size = 0;\n      }\n      else {  // internal node\n        offset_size = 8;\n        offset_fmt = \"<Q\";\n        num1_size = this._required_bytes(nrecords_max);\n        num1_fmt = this._int_format(num1_size);\n        num2_size = this._required_bytes(ntotalrecords_max);\n        num2_fmt = this._int_format(num2_size);\n      }\n      address_formats.set(node_level, [\n        offset_size, num1_size, num2_size,\n        offset_fmt, num1_fmt, num2_fmt]);\n      if (node_level < max_depth) {\n        let addr_size = offset_size + num1_size + num2_size;\n        nrecords_max = this._nrecords_max(node_size, record_size, addr_size);\n        if (ntotalrecords_max > 0) {\n          ntotalrecords_max *= nrecords_max;\n        }\n        else {\n          ntotalrecords_max = nrecords_max;\n        }\n      }\n    }\n\n    return address_formats\n  }\n  \n  _nrecords_max(node_size, record_size, addr_size) {\n    // \"\"\" Calculate the maximal records a node can contain. \"\"\"\n    // node_size = overhead + nrecords_max*record_size + (nrecords_max+1)*addr_size\n    //\n    // overhead = size(B_LINK_NODE) + 4 (checksum)\n    //\n    // Leaf node (node_level = 0)\n    //   addr_size = 0\n    // Internal node (node_level = 1)\n    //   addr_size = offset_size + num1_size\n    // Internal node (node_level > 1)\n    //   addr_size = offset_size + num1_size + num2_size\n    return Math.floor((node_size - 10 - addr_size)/(record_size + addr_size));\n  }\n  \n  _required_bytes(integer) {\n    // \"\"\" Calculate the minimal required bytes to contain an integer. \"\"\"\n    return Math.ceil(bitSize(integer) / 8);\n  }\n  \n  _int_format(bytelength) {\n    return [\"<B\", \"<H\", \"<I\", \"<Q\"][bytelength-1];\n  }\n  \n  _read_node(address, node_level) {\n    // \"\"\" Return a single node in the B-Tree located at a given offset. \"\"\"\n    let [offset, nrecords, ntotalrecords] = address;\n    let node = this._read_node_header(offset, node_level);\n    offset += _structure_size(this.B_LINK_NODE);\n    let record_size = this.header.get('record_size');\n    let keys = [];\n    for (let i=0; i<nrecords; i++) {\n      let record = this._parse_record(this.fh, offset, record_size);\n      offset += record_size;\n      keys.push(record);\n    }\n\n    let addresses = [];\n    let fmts = this.address_formats.get(node_level);\n    if (node_level != 0) {\n      let [offset_size, num1_size, num2_size, offset_fmt, num1_fmt, num2_fmt] = fmts;\n      for (let j=0; j<=nrecords; j++) {\n        let address_offset = struct.unpack_from(offset_fmt, this.fh, offset)[0];\n        offset += offset_size;\n        let num1 = struct.unpack_from(num1_fmt, this.fh, offset)[0];\n        offset += num1_size;\n        let num2 = num1;\n        if (num2_size > 0) {\n          num2 = struct.unpack_from(num2_fmt, this.fh, offset)[0];\n        }\n        addresses.push([address_offset, num1, num2]);\n      }\n    }\n\n    node.set('keys', keys);\n    node.set('addresses', addresses);\n    return node\n  }\n  \n  _read_node_header(offset, node_level) {\n    // \"\"\" Return a single node header in the b-tree located at a give offset. \"\"\"\n    let node = _unpack_struct_from(this.B_LINK_NODE, this.fh, offset);\n    //assert node['node_type'] == this.NODE_TYPE\n    if (node_level > 0) {\n      // Internal node (has children)\n      // assert node['signature'] == b'BTIN'\n    }\n    else {\n      // Leaf node (has no children)\n      // assert node['signature'] == b'BTLF'\n    }\n    node.set(\"node_level\", node_level);\n    return node\n  }\n\n  * iter_records() {\n    // \"\"\" Iterate over all records. \"\"\"\n    for (let nodelist of this.all_nodes.values()) {\n      for (let node of nodelist) {\n        for (let key of node.get('keys')) {\n          yield key\n        }\n      }\n    }\n  }\n     \n\n  _parse_record(record) {\n    throw \"NotImplementedError\"\n  }\n}\n\nexport class BTreeV2GroupNames extends BTreeV2 {\n  /*\n  HDF5 version 2 B-Tree storing group names (type 5).\n  */\n  NODE_TYPE = 5\n\n  _parse_record(buf, offset, size) {\n    let namehash = struct.unpack_from(\"<I\", buf, offset)[0];\n    offset += 4;\n    return new Map([['namehash', namehash], ['heapid', buf.slice(offset, offset+7)]]);\n  }\n}\n\n\nexport class BTreeV2GroupOrders extends BTreeV2 {\n  /*\n  HDF5 version 2 B-Tree storing group creation orders (type 6).\n  */    \n  NODE_TYPE = 6\n\n  _parse_record(buf, offset, size) {\n    let creationorder = struct.unpack_from(\"<Q\", buf, offset)[0];\n    offset += 8;\n    return new Map([['creationorder', creationorder], ['heapid', buf.slice(offset, offset+7)]]);\n  }\n}\n\n\nfunction _verify_fletcher32(chunk_buffer) {\n  //\"\"\" Verify a chunk with a fletcher32 checksum. \"\"\"\n  //# calculate checksums\n  var odd_chunk_buffer = ((chunk_buffer.byteLength % 2) != 0);\n  var data_length = chunk_buffer.byteLength - 4;\n  var view = new DataView64(chunk_buffer);\n\n  var sum1 = 0;\n  var sum2 = 0;\n  for (var offset=0; offset<(data_length-1); offset+=2) {\n    let datum = view.getUint16(offset, true); // little-endian\n    sum1 = (sum1 + datum) % 65535\n    sum2 = (sum2 + sum1) % 65535\n  }\n  if (odd_chunk_buffer) {\n    // process the last item:\n    let datum = view.getUint8(data_length-1);\n    sum1 = (sum1 + datum) % 65535\n    sum2 = (sum2 + sum1) % 65535\n  }\n\n  //# extract stored checksums\n  var [ref_sum1, ref_sum2] = struct.unpack_from('>HH', chunk_buffer, data_length); // .fromstring(chunk_buffer[-4:], '>u2')\n  ref_sum1 = ref_sum1 % 65535\n  ref_sum2 = ref_sum2 % 65535\n\n  //# compare\n  if (sum1 != ref_sum1 || sum2 != ref_sum2) {\n    throw 'ValueError(\"fletcher32 checksum invalid\")';\n  }\n  return true\n}\n\n\n\n//# IV.A.2.l The Data Storage - Filter Pipeline message\nvar RESERVED_FILTER = 0;\nexport const GZIP_DEFLATE_FILTER = 1;\nexport const SHUFFLE_FILTER = 2;\nexport const FLETCH32_FILTER = 3;\nvar SZIP_FILTER = 4;\nvar NBIT_FILTER = 5;\nvar SCALEOFFSET_FILTER = 6;\n","import { _structure_size, _padded_size, _unpack_struct_from, struct, assert, _unpack_integer, bitSize } from './core.js';\n\nexport class SuperBlock {\n  constructor(fh, offset) {\n    let version_hint = struct.unpack_from('<B', fh, offset + 8);\n    var contents;\n    if (version_hint == 0) {\n      contents = _unpack_struct_from(SUPERBLOCK_V0, fh, offset);\n      this._end_of_sblock = offset + SUPERBLOCK_V0_SIZE;\n    }\n    else if (version_hint == 2 || version_hint == 3) {\n      contents = _unpack_struct_from(SUPERBLOCK_V2_V3, fh, offset);\n      this._end_of_sblock = offset + SUPERBLOCK_V2_V3_SIZE;\n    } else {\n      throw (\"unsupported superblock version: \" + version_hint.toFixed())\n    }\n    // verify contents\n    if (contents.get('format_signature') != FORMAT_SIGNATURE) {\n      throw 'Incorrect file signature: ' + contents.get('format_signature');\n    }\n    if (contents.get('offset_size') != 8 || contents.get('length_size') != 8) {\n      throw 'File uses non-64-bit addressing';\n    }\n    this.version = contents.get('superblock_version');\n    this._contents = contents\n    this._root_symbol_table = null;\n    this._fh = fh;\n  }\n  get offset_to_dataobjects() {\n    //\"\"\" The offset to the data objects collection for the superblock. \"\"\"\n    if (this.version == 0) {\n      var sym_table = new SymbolTable(this._fh, this._end_of_sblock, true);\n      this._root_symbol_table = sym_table\n      return sym_table.group_offset;\n    }\n    else if (this.version == 2 || this.version == 3) {\n      return this._contents.get('root_group_address');\n    }\n    else {\n      throw (\"Not implemented version = \" + this.version.toFixed());\n    }\n  }\n}\n\nexport class Heap {\n  /*\n  \"\"\"\n  HDF5 local heap.\n  \"\"\"\n  */\n  constructor(fh, offset) {\n    //\"\"\" initalize. \"\"\"\n\n    //fh.seek(offset)\n    let local_heap = _unpack_struct_from(LOCAL_HEAP, fh, offset);\n    assert(local_heap.get('signature') == 'HEAP');\n    assert(local_heap.get('version') == 0);\n    let data_offset = local_heap.get('address_of_data_segment');\n    let heap_data = fh.slice(data_offset, data_offset + local_heap.get('data_segment_size'));\n    local_heap.set('heap_data', heap_data);\n    this._contents = local_heap;\n    this.data = heap_data;\n  }\n\n  get_object_name(offset) {\n    //\"\"\" Return the name of the object indicated by the given offset. \"\"\"\n    let end = new Uint8Array(this.data).indexOf(0, offset);\n    let name_size = end - offset;\n    let name = struct.unpack_from('<' + name_size.toFixed() + 's', this.data, offset)[0];\n    return name\n  }\n}\n\nexport class SymbolTable {\n  /*\n  \"\"\"\n  HDF5 Symbol Table.\n  \"\"\"\n  */\n  constructor(fh, offset, root = false) {\n    //\"\"\" initialize, root=True for the root group, False otherwise. \"\"\"\n    var node;\n    if (root) {\n      //# The root symbol table has no Symbol table node header\n      //# and contains only a single entry\n      node = new Map([['symbols', 1]]);\n    }\n    else {\n      node = _unpack_struct_from(SYMBOL_TABLE_NODE, fh, offset);\n      if (node.get('signature') != 'SNOD') { throw \"incorrect node type\" }\n      offset += SYMBOL_TABLE_NODE_SIZE;\n    }\n    var entries = [];\n    var n_symbols = node.get('symbols');\n    for (var i = 0; i < n_symbols; i++) {\n      entries.push(_unpack_struct_from(SYMBOL_TABLE_ENTRY, fh, offset))\n      offset += SYMBOL_TABLE_ENTRY_SIZE;\n    }\n    if (root) {\n      this.group_offset = entries[0].get('object_header_address');\n    }\n    this.entries = entries\n    this._contents = node\n  }\n\n  assign_name(heap) {\n    //\"\"\" Assign link names to all entries in the symbol table. \"\"\"\n    this.entries.forEach(function (entry) {\n      let offset = entry.get('link_name_offset');\n      let link_name = heap.get_object_name(offset);\n      entry.set('link_name', link_name);\n    });\n  }\n\n  get_links(heap) {\n    //\"\"\" Return a dictionary of links (dataset/group) and offsets. \"\"\"\n    var links = {}\n    this.entries.forEach(function (e) {\n      let cache_type = e.get('cache_type');\n      let link_name = e.get('link_name');\n      if (cache_type == 0 || cache_type == 1) {\n        links[link_name] = e.get('object_header_address');\n      }\n      else if (cache_type == 2) {\n        let scratch = e.get('scratch');\n        let buf = new ArrayBuffer(4);\n        let bufView = new Uint8Array(buf);\n        for (var i = 0; i < 4; i++) {\n          bufView[i] = scratch.charCodeAt(i);\n        }\n        let offset = struct.unpack_from('<I', buf, 0)[0];\n        links[link_name] = heap.get_object_name(offset);\n      }\n    });\n    return links\n  }\n}\n\nexport class GlobalHeap {\n  /*\n  HDF5 Global Heap collection.\n  */\n  constructor(fh, offset) {\n    let header = _unpack_struct_from(GLOBAL_HEAP_HEADER, fh, offset);\n    offset += GLOBAL_HEAP_HEADER_SIZE;\n    //assert(header.get('signature') == 'GCOL');\n    //assert(header.get('version') == 1);\n    let heap_data_size = header.get('collection_size') - GLOBAL_HEAP_HEADER_SIZE;\n    let heap_data = fh.slice(offset, offset + heap_data_size);\n    //assert(heap_data.byteLength == heap_data_size); //# check for early end of file\n\n    this.heap_data = heap_data;\n    this._header = header;\n    this._objects = null;\n  }\n\n  get objects() {\n    //\"\"\" Dictionary of objects in the heap. \"\"\"\n    if (this._objects == null) {\n      this._objects = new Map();\n      var offset = 0;\n      while (offset <= this.heap_data.byteLength - GLOBAL_HEAP_OBJECT_SIZE) {\n        let info = _unpack_struct_from(\n          GLOBAL_HEAP_OBJECT, this.heap_data, offset);\n        if (info.get('object_index') == 0) {\n          break\n        }\n        offset += GLOBAL_HEAP_OBJECT_SIZE;\n        let obj_data = this.heap_data.slice(offset, offset + info.get('object_size'));\n        this._objects.set(info.get('object_index'), obj_data);\n        offset += _padded_size(info.get('object_size'));\n      }\n    }\n    return this._objects\n  }\n}\n\nexport class FractalHeap {\n  /*\n  HDF5 Fractal Heap.\n  */\n\n  constructor(fh, offset) {\n    this.fh = fh;\n    let header = _unpack_struct_from(FRACTAL_HEAP_HEADER, fh, offset);\n    offset += _structure_size(FRACTAL_HEAP_HEADER);\n    assert(header.get('signature') == 'FRHP');\n    assert(header.get('version') == 0);\n\n    if (header.get('filter_info_size') > 0) {\n      throw \"Filter info size not supported on FractalHeap\";\n    }\n\n    if (header.get(\"btree_address_huge_objects\") == UNDEFINED_ADDRESS) {\n      header.set(\"btree_address_huge_objects\", null);\n    }\n    else {\n      throw \"Huge objects not implemented in FractalHeap\";\n    }\n\n    if (header.get(\"root_block_address\") == UNDEFINED_ADDRESS) {\n      header.set(\"root_block_address\", null);\n    }\n\n    let nbits = header.get(\"log2_maximum_heap_size\");\n    let block_offset_size = this._min_size_nbits(nbits);\n    let h = new Map([\n      ['signature', '4s'],\n      ['version', 'B'],\n      ['heap_header_adddress', 'Q'],\n      //['block_offset', `${block_offset_size}s`]\n      ['block_offset', `${block_offset_size}B`]\n      //this._int_format(block_offset_size)]\n    ]);\n    this.indirect_block_header = new Map(h); // make shallow copy;\n    this.indirect_block_header_size = _structure_size(h);\n    if ((header.get(\"flags\") & 2) == 2) {\n      h.set('checksum', 'I');\n    }\n    this.direct_block_header = h;\n    this.direct_block_header_size = _structure_size(h);\n\n    let maximum_dblock_size = header.get('maximum_direct_block_size');\n    this._managed_object_offset_size = this._min_size_nbits(nbits);\n    let value = Math.min(maximum_dblock_size, header.get('max_managed_object_size'));\n    this._managed_object_length_size = this._min_size_integer(value);\n\n    let start_block_size = header.get('starting_block_size');\n    let table_width = header.get('table_width');\n    if (!(start_block_size > 0)) {\n      throw \"Starting block size == 0 not implemented\";\n    }\n\n    let log2_maximum_dblock_size = Number(Math.floor(Math.log2(maximum_dblock_size)));\n    assert(1n << BigInt(log2_maximum_dblock_size) == maximum_dblock_size);\n\n    let log2_start_block_size = Number(Math.floor(Math.log2(start_block_size)));\n    assert(1n << BigInt(log2_start_block_size) == start_block_size);\n\n    this._max_direct_nrows = log2_maximum_dblock_size - log2_start_block_size + 2;\n\n    let log2_table_width = Math.floor(Math.log2(table_width)); // regular number (H, not Q format)\n    assert(1 << log2_table_width == table_width);\n    this._indirect_nrows_sub = log2_table_width + log2_start_block_size - 1;\n\n    this.header = header;\n    this.nobjects = header.get(\"managed_object_count\") + header.get(\"huge_object_count\") + header.get(\"tiny_object_count\");\n\n    let managed = [];\n    let root_address = header.get(\"root_block_address\");\n    let nrows = 0;\n    if (root_address != null) {\n      nrows = header.get(\"indirect_current_rows_count\");\n    }\n    if (nrows > 0) {\n      for (let data of this._iter_indirect_block(fh, root_address, nrows)) {\n        managed.push(data);\n      }\n    }\n    else {\n      let data = this._read_direct_block(fh, root_address, start_block_size);\n      managed.push(data);\n    }\n    let data_size = managed.reduce((p, c) => p + c.byteLength, 0);\n    let combined = new Uint8Array(data_size);\n    let moffset = 0;\n    managed.forEach((m) => {combined.set(new Uint8Array(m), moffset); moffset += m.byteLength});\n    this.managed = combined.buffer;\n  }\n\n  _read_direct_block(fh, offset, block_size) {\n    let data = fh.slice(offset, offset + block_size);\n    let header = _unpack_struct_from(this.direct_block_header, data)\n    assert(header.get(\"signature\") == \"FHDB\");\n    return data;\n  }\n\n  get_data(heapid) {\n    let firstbyte = struct.unpack_from('<B', heapid, 0)[0];\n\n    let reserved = firstbyte & 15;  // bit 0-3\n    let idtype = (firstbyte >> 4) & 3;  // bit 4-5\n    let version = firstbyte >> 6  // bit 6-7\n    let data_offset = 1;\n    if (idtype == 0) { // managed\n      assert(version == 0);\n      let nbytes = this._managed_object_offset_size;\n      let offset = _unpack_integer(nbytes, heapid, data_offset);\n      // add heap offset:\n      //offset += this.offset;\n      data_offset += nbytes;\n\n      nbytes = this._managed_object_length_size;\n      let size = _unpack_integer(nbytes, heapid, data_offset);\n\n      return this.managed.slice(offset, offset + size);\n    }\n    else if (idtype == 1) { // tiny\n      throw \"tiny objectID not supported in FractalHeap\"\n    }\n    else if (idtype == 2) { // huge\n      throw \"huge objectID not supported in FractalHeap\"\n    }\n    else {\n      throw \"unknown objectID type in FractalHeap\"\n    }\n  }\n\n  _min_size_integer(integer) {\n    // \"\"\" Calculate the minimal required bytes to contain an integer. \"\"\"\n    return this._min_size_nbits(bitSize(integer));\n  }\n\n  _min_size_nbits(nbits) {\n    //\"\"\" Calculate the minimal required bytes to contain a number of bits. \"\"\"\n    return Math.ceil(nbits / 8);\n  }\n\n  * _iter_indirect_block(fh, offset, nrows) {\n    let header = _unpack_struct_from(this.indirect_block_header, fh, offset);\n    offset += this.indirect_block_header_size;\n    assert(header.get(\"signature\") == \"FHIB\");\n    let block_offset_bytes = header.get(\"block_offset\");\n    // equivalent to python int.from_bytes with byteorder=\"little\":\n    let block_offset = block_offset_bytes.reduce((p, c, i) => p + (c << (i * 8)), 0);\n    header.set(\"block_offset\", block_offset);\n\n    let [ndirect, nindirect] = this._indirect_info(nrows);\n\n    let direct_blocks = [];\n    for (let i = 0; i < ndirect; i++) {\n      let address = struct.unpack_from('<Q', fh, offset)[0]\n      offset += 8;\n      if (address == UNDEFINED_ADDRESS) {\n        break\n      }\n      let block_size = this._calc_block_size(i);\n      direct_blocks.push([address, block_size]);\n    }\n\n    let indirect_blocks = [];\n    for (let i = ndirect; i < ndirect + nindirect; i++) {\n      let address = struct.unpack_from('<Q', fh, offset)[0];\n      offset += 8;\n      if (address == UNDEFINED_ADDRESS) {\n        break\n      }\n      let block_size = this._calc_block_size(i);\n      let nrows = this._iblock_nrows_from_block_size(block_size);\n      indirect_blocks.push([address, nrows]);\n    }\n    for (let [address, block_size] of direct_blocks) {\n      let obj = this._read_direct_block(fh, address, block_size);\n      yield obj\n    }\n\n    for (let [address, nrows] of indirect_blocks) {\n      for (let obj of this._iter_indirect_block(fh, address, nrows)) {\n        yield obj;\n      }\n    }\n  }\n\n  _calc_block_size(iblock) {\n    let row = Math.floor(iblock / this.header.get(\"table_width\"));\n    return 2 ** Math.max(row - 1, 0) * this.header.get('starting_block_size');\n  }\n\n  _iblock_nrows_from_block_size(block_size) {\n    let log2_block_size = Math.floor(Math.log2(block_size));\n    assert(2 ** log2_block_size == block_size);\n    return log2_block_size - this._indirect_nrows_sub\n  }\n\n  _indirect_info(nrows) {\n    let table_width = this.header.get('table_width');\n    let nobjects = nrows * table_width;\n    let ndirect_max = this._max_direct_nrows * table_width;\n    let ndirect, nindirect;\n    if (nrows <= ndirect_max) {\n      ndirect = nobjects;\n      nindirect = 0;\n    }\n    else {\n      ndirect = ndirect_max;\n      nindirect = nobjects - ndirect_max;\n    }\n    return [ndirect, nindirect];\n  }\n\n  _int_format(bytelength) {\n    return [\"B\", \"H\", \"I\", \"Q\"][bytelength - 1];\n  }\n\n}\n\nvar FORMAT_SIGNATURE = struct.unpack_from('8s', new Uint8Array([137, 72, 68, 70, 13, 10, 26, 10]).buffer)[0];\nvar UNDEFINED_ADDRESS = struct.unpack_from('<Q', new Uint8Array([255, 255, 255, 255, 255, 255, 255, 255]).buffer)[0];\n\n// Version 0 SUPERBLOCK\nvar SUPERBLOCK_V0 = new Map([\n  ['format_signature', '8s'],\n\n  ['superblock_version', 'B'],\n  ['free_storage_version', 'B'],\n  ['root_group_version', 'B'],\n  ['reserved_0', 'B'],\n\n  ['shared_header_version', 'B'],\n  ['offset_size', 'B'],            // assume 8\n  ['length_size', 'B'],            // assume 8\n  ['reserved_1', 'B'],\n\n  ['group_leaf_node_k', 'H'],\n  ['group_internal_node_k', 'H'],\n\n  ['file_consistency_flags', 'L'],\n\n  ['base_address_lower', 'Q'],                  // assume 8 byte addressing\n  ['free_space_address', 'Q'],            // assume 8 byte addressing\n  ['end_of_file_address', 'Q'],\n  ['driver_information_address', 'Q']     // assume 8 byte addressing\n]);\nvar SUPERBLOCK_V0_SIZE = _structure_size(SUPERBLOCK_V0);\n\nvar SUPERBLOCK_V2_V3 = new Map([\n  ['format_signature', '8s'],\n\n  ['superblock_version', 'B'],\n  ['offset_size', 'B'],\n  ['length_size', 'B'],\n  ['file_consistency_flags', 'B'],\n\n  ['base_address', 'Q'],                  // assume 8 byte addressing\n  ['superblock_extension_address', 'Q'],  // assume 8 byte addressing\n  ['end_of_file_address', 'Q'],           // assume 8 byte addressing\n  ['root_group_address', 'Q'],            // assume 8 byte addressing\n\n  ['superblock_checksum', 'I']\n]);\nvar SUPERBLOCK_V2_V3_SIZE = _structure_size(SUPERBLOCK_V2_V3);\n\nvar SYMBOL_TABLE_ENTRY = new Map([\n  ['link_name_offset', 'Q'],     // 8 byte address\n  ['object_header_address', 'Q'],\n  ['cache_type', 'I'],\n  ['reserved', 'I'],\n  ['scratch', '16s'],\n]);\nvar SYMBOL_TABLE_ENTRY_SIZE = _structure_size(SYMBOL_TABLE_ENTRY);\n\nvar SYMBOL_TABLE_NODE = new Map([\n  ['signature', '4s'],\n  ['version', 'B'],\n  ['reserved_0', 'B'],\n  ['symbols', 'H'],\n]);\nvar SYMBOL_TABLE_NODE_SIZE = _structure_size(SYMBOL_TABLE_NODE);\n\n// III.D Disk Format: Level 1D - Local Heaps\nvar LOCAL_HEAP = new Map([\n  ['signature', '4s'],\n  ['version', 'B'],\n  ['reserved', '3s'],\n  ['data_segment_size', 'Q'],         // 8 byte size of lengths\n  ['offset_to_free_list', 'Q'],       // 8 bytes size of lengths\n  ['address_of_data_segment', 'Q']   // 8 byte addressing\n]);\n\n// III.E Disk Format: Level 1E - Global Heap\nvar GLOBAL_HEAP_HEADER = new Map([\n  ['signature', '4s'],\n  ['version', 'B'],\n  ['reserved', '3s'],\n  ['collection_size', 'Q']\n])\nvar GLOBAL_HEAP_HEADER_SIZE = _structure_size(GLOBAL_HEAP_HEADER);\n\nvar GLOBAL_HEAP_OBJECT = new Map([\n  ['object_index', 'H'],\n  ['reference_count', 'H'],\n  ['reserved', 'I'],\n  ['object_size', 'Q']   // 8 byte addressing,\n])\nvar GLOBAL_HEAP_OBJECT_SIZE = _structure_size(GLOBAL_HEAP_OBJECT);\n\n//# III.G. Disk Format: Level 1G - Fractal Heap\nvar FRACTAL_HEAP_HEADER = new Map([\n  ['signature', '4s'],\n  ['version', 'B'],\n\n  ['object_index_size', 'H'],\n  ['filter_info_size', 'H'],\n  ['flags', 'B'],\n\n  ['max_managed_object_size', 'I'],\n  ['next_huge_object_index', 'Q'],      // 8 byte addressing\n  ['btree_address_huge_objects', 'Q'],   // 8 byte addressing\n\n  ['managed_freespace_size', 'Q'],       // 8 byte addressing\n  ['freespace_manager_address', 'Q'],    // 8 byte addressing\n  ['managed_space_size', 'Q'],           // 8 byte addressing\n  ['managed_alloc_size', 'Q'],           // 8 byte addressing\n  ['next_directblock_iterator_address', 'Q'], // 8 byte addressing\n\n  ['managed_object_count', 'Q'],         // 8 byte addressing\n  ['huge_objects_total_size', 'Q'],      // 8 byte addressing\n  ['huge_object_count', 'Q'],            // 8 byte addressing\n  ['tiny_objects_total_size', 'Q'],      // 8 byte addressing\n  ['tiny_object_count', 'Q'],            // 8 byte addressing\n\n  ['table_width', 'H'],\n  ['starting_block_size', 'Q'],          // 8 byte addressing\n  ['maximum_direct_block_size', 'Q'],    // 8 byte addressing\n  ['log2_maximum_heap_size', 'H'],\n  ['indirect_starting_rows_count', 'H'],\n  ['root_block_address', 'Q'],           // 8 byte addressing\n  ['indirect_current_rows_count', 'H']\n])\n\n","import { DatatypeMessage } from './datatype-msg.js';\nimport { _structure_size, _padded_size, _unpack_struct_from, struct, dtype_getter, DataView64, assert } from './core.js';\nimport { BTreeV1Groups, BTreeV1RawDataChunks, BTreeV2GroupNames, BTreeV2GroupOrders, GZIP_DEFLATE_FILTER, SHUFFLE_FILTER, FLETCH32_FILTER } from './btree.js';\nimport { Heap, SymbolTable, GlobalHeap, FractalHeap } from './misc-low-level.js';\n\nexport class DataObjects {\n  /*\n  \"\"\"\n  HDF5 DataObjects.\n  \"\"\"\n  */\n  constructor(fh, offset) {\n    //\"\"\" initalize. \"\"\"\n    //fh.seek(offset)\n    let version_hint = struct.unpack_from('<B', fh, offset)[0]\n    //fh.seek(offset)\n    if (version_hint == 1) {\n      var [msgs, msg_data, header] = this._parse_v1_objects(fh, offset);\n    }\n    else if (version_hint == 'O'.charCodeAt(0)) {  //# first character of v2 signature\n      var [msgs, msg_data, header] = this._parse_v2_objects(fh, offset);\n    }\n    else {\n      throw \"InvalidHDF5File('unknown Data Object Header')\";\n    }\n    this.fh = fh\n    this.msgs = msgs\n    this.msg_data = msg_data\n    this.offset = offset\n    this._global_heaps = {}\n    this._header = header\n\n    //# cached attributes\n    this._filter_pipeline = null;\n    this._chunk_params_set = false;\n    this._chunks = null;\n    this._chunk_dims = null;\n    this._chunk_address = null;\n  }\n  get dtype() {\n    //\"\"\" Datatype of the dataset. \"\"\"\n    let msg = this.find_msg_type(DATATYPE_MSG_TYPE)[0];\n    let msg_offset = msg.get('offset_to_message');\n    return (new DatatypeMessage(this.fh, msg_offset)).dtype\n  }\n\n  get chunks() {\n    //\"\"\" Tuple describing the chunk size, None if not chunked. \"\"\"\n    this._get_chunk_params();\n    return this._chunks;\n  }\n\n  get shape() {\n    //\"\"\" Shape of the dataset. \"\"\"\n    let msg = this.find_msg_type(DATASPACE_MSG_TYPE)[0];\n    let msg_offset = msg.get('offset_to_message');\n    return determine_data_shape(this.fh, msg_offset)\n  }\n\n  get filter_pipeline() {\n    //\"\"\" Dict describing filter pipeline, None if no pipeline. \"\"\"\n    if (this._filter_pipeline != null) {\n      return this._filter_pipeline  //# use cached value\n    }\n\n    let filter_msgs = this.find_msg_type(DATA_STORAGE_FILTER_PIPELINE_MSG_TYPE);\n    if (!filter_msgs.length) {\n      this._filter_pipeline = null;\n      return this._filter_pipeline\n    }\n\n    var offset = filter_msgs[0].get('offset_to_message');\n    let [version, nfilters] = struct.unpack_from('<BB', this.fh, offset);\n    offset += struct.calcsize('<BB');\n    \n    var filters = [];\n    if (version == 1) {\n      let [res0, res1] = struct.unpack_from('<HI', this.fh, offset);\n      offset += struct.calcsize('<HI');\n\n      for (var _ = 0; _ < nfilters; _++) {\n\n        let filter_info = _unpack_struct_from(\n          FILTER_PIPELINE_DESCR_V1, this.fh, offset);\n        offset += FILTER_PIPELINE_DESCR_V1_SIZE;\n\n        let padded_name_length = _padded_size(filter_info.get('name_length'), 8);\n        let fmt = '<' + padded_name_length.toFixed() + 's';\n        let filter_name = struct.unpack_from(fmt, this.fh, offset)[0];\n        filter_info.set('filter_name', filter_name);\n        offset += padded_name_length;\n\n        fmt = '<' + filter_info.get('client_data_values').toFixed() + 'I';\n        let client_data = struct.unpack_from(fmt, this.fh, offset);\n        filter_info.set('client_data', client_data);\n        offset += 4 * filter_info.get('client_data_values');\n\n        if (filter_info.get('client_data_values') % 2) {\n          offset += 4;  //# odd number of client data values padded\n        }\n\n        filters.push(filter_info);\n      }\n    }\n    else if (version == 2) {\n      for (let nf= 0; nf < nfilters; nf++) { \n        let filter_info = new Map();\n        let buf = this.fh;\n        let filter_id = struct.unpack_from('<H', buf, offset)[0];\n        offset += 2;\n        filter_info.set('filter_id', filter_id);\n        let name_length = 0;\n        if (filter_id > 255) {\n          name_length = struct.unpack_from('<H', buf, offset)[0];\n          offset += 2;\n        }\n        let flags = struct.unpack_from('<H', buf, offset)[0];\n        offset += 2;\n        let optional = (flags & 1) > 0;\n        filter_info.set('optional', optional);\n        let num_client_values = struct.unpack_from('<H', buf, offset)[0];\n        offset += 2;\n        let name;\n        if (name_length > 0) {\n          name = struct.unpack_from(`${name_length}s`, buf, offset)[0];\n          offset += name_length;\n        }\n        filter_info.set('name', name);\n        let client_values = struct.unpack_from(`<${num_client_values}i`, buf, offset);\n        offset += (4 * num_client_values);\n        filter_info.set('client_data_values', client_values);\n        filters.push(filter_info);\n      }\n    }\n    else {\n      throw `version ${version} is not supported`\n    }\n    this._filter_pipeline = filters;\n    return this._filter_pipeline;\n  }\n\n  find_msg_type(msg_type) {\n    //\"\"\" Return a list of all messages of a given type. \"\"\"\n    return this.msgs.filter(function (m) { return m.get('type') == msg_type });\n  }\n\n  get_attributes() {\n    //\"\"\" Return a dictionary of all attributes. \"\"\"\n    let attrs = {};\n    let attr_msgs = this.find_msg_type(ATTRIBUTE_MSG_TYPE);\n    for (let msg of attr_msgs) {\n      let offset = msg.get('offset_to_message');\n      let [name, value] = this.unpack_attribute(offset);\n      attrs[name] = value;\n    }\n    //# TODO attributes may also be stored in objects reference in the\n    //# Attribute Info Message (0x0015, 21).\n    return attrs\n  }\n\n  get fillvalue() {\n    /* Fillvalue of the dataset. */\n    let msg = this.find_msg_type(FILLVALUE_MSG_TYPE)[0];\n    var offset = msg.get('offset_to_message');\n    var is_defined;\n    let version = struct.unpack_from('<B', this.fh, offset)[0];\n    var info, size, fillvalue;\n    if (version == 1 || version == 2) {\n      info = _unpack_struct_from(FILLVAL_MSG_V1V2, this.fh, offset);\n      offset += FILLVAL_MSG_V1V2_SIZE;\n      is_defined = info.get('fillvalue_defined');\n    }\n    else if (version == 3) {\n      info = _unpack_struct_from(FILLVAL_MSG_V3, this.fh, offset);\n      offset += FILLVAL_MSG_V3_SIZE\n      is_defined = info.get('flags') & 0b00100000;\n    } else {\n      throw 'InvalidHDF5File(\"Unknown fillvalue msg version: \"' + String(version);\n    }\n    if (is_defined) {\n      size = struct.unpack_from('<I', this.fh, offset)[0];\n      offset += 4;\n    }\n    else {\n      size = 0;\n    }\n\n    if (size) {\n      let [getter, big_endian, size] = dtype_getter(this.dtype);\n      let payload_view = new DataView64(this.fh);\n      fillvalue = payload_view[getter](offset, !big_endian, size);\n    }\n    else {\n      fillvalue = 0;\n    }\n    return fillvalue\n  }\n\n  unpack_attribute(offset) {\n    //\"\"\" Return the attribute name and value. \"\"\"\n\n    //# read in the attribute message header\n    //# See section IV.A.2.m. The Attribute Message for details\n    let version = struct.unpack_from('<B', this.fh, offset)[0];\n    var attr_map, padding_multiple;\n    if (version == 1) {\n      attr_map = _unpack_struct_from(\n        ATTR_MSG_HEADER_V1, this.fh, offset);\n      assert(attr_map.get('version') == 1);\n      offset += ATTR_MSG_HEADER_V1_SIZE;\n      padding_multiple = 8;\n    }\n    else if (version == 3) {\n      attr_map = _unpack_struct_from(\n        ATTR_MSG_HEADER_V3, this.fh, offset)\n      assert(attr_map.get('version') == 3);\n      offset += ATTR_MSG_HEADER_V3_SIZE;\n      padding_multiple = 1    //# no padding\n    }\n    else {\n      throw (\"unsupported attribute message version: \" + version);\n    }\n\n    //# read in the attribute name\n    let name_size = attr_map.get('name_size');\n    let name = struct.unpack_from('<' + name_size.toFixed() + 's', this.fh, offset)[0];\n    name = name.replace(/\\x00$/, '');\n    //name = name.strip(b'\\x00').decode('utf-8')\n    offset += _padded_size(name_size, padding_multiple);\n\n    //# read in the datatype information\n    var dtype;\n    try {\n      dtype = new DatatypeMessage(this.fh, offset).dtype;\n    }\n    catch (e) {\n      console.log('Attribute ' + name + ' type not implemented, set to null.');\n      return [name, null];\n    }\n\n    offset += _padded_size(attr_map.get('datatype_size'), padding_multiple);\n\n    //# read in the dataspace information\n    let shape = this.determine_data_shape(this.fh, offset);\n    let items = shape.reduce(function (a, b) { return a * b }, 1); // int(np.product(shape))\n    offset += _padded_size(attr_map.get('dataspace_size'), padding_multiple)\n\n    //# read in the value(s)\n    var value = this._attr_value(dtype, this.fh, items, offset);\n    //let value = [42];\n\n    if (shape.length == 0) { // == ():\n      value = value[0];\n    }\n    else {\n      //value = value.reshape(shape)\n    }\n    return [name, value];\n  }\n\n  determine_data_shape(buf, offset) {\n    //\"\"\" Return the shape of the dataset pointed to in a Dataspace message. \"\"\"\n    let version = struct.unpack_from('<B', buf, offset)[0];\n    var header;\n    if (version == 1) {\n      header = _unpack_struct_from(DATASPACE_MSG_HEADER_V1, buf, offset);\n      assert(header.get('version') == 1);\n      offset += DATASPACE_MSG_HEADER_V1_SIZE;\n    }\n    else if (version == 2) {\n      header = _unpack_struct_from(DATASPACE_MSG_HEADER_V2, buf, offset)\n      assert(header.get('version') == 2);\n      offset += DATASPACE_MSG_HEADER_V2_SIZE;\n    }\n    else {\n      throw 'unknown dataspace message version';\n    }\n\n    let ndims = header.get('dimensionality');\n    let dim_sizes = struct.unpack_from('<' + (ndims).toFixed() + 'Q', buf, offset);\n\n    //# Dimension maximum size follows if header['flags'] bit 0 set\n    //# Permutation index follows if header['flags'] bit 1 set\n    return dim_sizes\n  }\n\n  _attr_value(dtype, buf, count, offset) {\n    //\"\"\" Retrieve an HDF5 attribute value from a buffer. \"\"\"\n    var value = new Array(count);\n    if (dtype instanceof Array) {\n      let dtype_class = dtype[0]\n      for (var i = 0; i < count; i++) {\n        if (dtype_class == 'VLEN_STRING') {\n          let character_set = dtype[2];\n          var [vlen, vlen_data] = this._vlen_size_and_data(buf, offset);\n          let fmt = '<' + vlen.toFixed() + 's';\n          let str_data = struct.unpack_from(fmt, vlen_data, 0)[0];\n          if (character_set == 0) {\n            //# ascii character set, return as bytes\n            value[i] = str_data;\n          }\n          else {\n            value[i] = decodeURIComponent(escape(str_data));\n          }\n          offset += 16\n        }\n        else if (dtype_class == 'REFERENCE') {\n          var address = struct.unpack_from('<Q', buf, offset);\n          value[i] = address;\n          offset += 8;\n        }\n        else if (dtype_class == \"VLEN_SEQUENCE\") {\n          let base_dtype = dtype[1];\n          var [vlen, vlen_data] = this._vlen_size_and_data(buf, offset);\n          value[i] = this._attr_value(base_dtype, vlen_data, vlen, 0);\n          offset += 16\n        }\n        else {\n          throw \"NotImplementedError\";\n        }\n      }\n    }\n    else {\n      let [getter, big_endian, size] = dtype_getter(dtype);\n      let view = new DataView64(buf, 0);\n      for (var i = 0; i < count; i++) {\n        value[i] = view[getter](offset, !big_endian, size);\n        offset += size;\n      }\n    }\n    return value\n  }\n\n  _vlen_size_and_data(buf, offset) {\n    //\"\"\" Extract the length and data of a variables length attr. \"\"\"\n    //# offset should be incremented by 16 after calling this method\n    let vlen_size = struct.unpack_from('<I', buf, offset)[0];\n    //# section IV.B\n    //# Data with a variable-length datatype is stored in the\n    //# global heap of the HDF5 file. Global heap identifiers are\n    //# stored in the data object storage.\n    let gheap_id = _unpack_struct_from(GLOBAL_HEAP_ID, buf, offset + 4)\n    let gheap_address = gheap_id.get('collection_address');\n    assert(gheap_id.get(\"collection_address\") < Number.MAX_SAFE_INTEGER);\n    var gheap;\n    if (!(gheap_address in this._global_heaps)) {\n      //# load the global heap and cache the instance\n      gheap = new GlobalHeap(this.fh, gheap_address);\n      this._global_heaps[gheap_address] = gheap;\n    }\n    gheap = this._global_heaps[gheap_address];\n    let vlen_data = gheap.objects.get(gheap_id.get('object_index'));\n    return [vlen_size, vlen_data];\n  }\n\n  _parse_v1_objects(buf, offset) {\n    //\"\"\" Parse a collection of version 1 Data Objects. \"\"\"\n    let header = _unpack_struct_from(OBJECT_HEADER_V1, buf, offset)\n    assert(header.get('version') == 1);\n    let total_header_messages = header.get('total_header_messages');\n\n    var block_size = header.get('object_header_size');\n    var block_offset = offset + _structure_size(OBJECT_HEADER_V1);\n    var msg_data = buf.slice(block_offset, block_offset + block_size);\n    var object_header_blocks = [[block_offset, block_size]];\n    var current_block = 0;\n    var local_offset = 0;\n    var msgs = new Array(total_header_messages);\n    for (var i = 0; i < total_header_messages; i++) {\n      if (local_offset >= block_size) {\n        [block_offset, block_size] = object_header_blocks[++current_block];\n        local_offset = 0;\n      }\n      let msg = _unpack_struct_from(HEADER_MSG_INFO_V1, buf, block_offset + local_offset);\n      let offset_to_message = block_offset + local_offset + HEADER_MSG_INFO_V1_SIZE;\n      msg.set('offset_to_message', offset_to_message);\n      if (msg.get('type') == OBJECT_CONTINUATION_MSG_TYPE) {\n        var [fh_off, size] = struct.unpack_from('<QQ', buf, offset_to_message);\n        object_header_blocks.push([fh_off, size]);\n      }\n      local_offset += HEADER_MSG_INFO_V1_SIZE + msg.get('size');\n      msgs[i] = msg;\n    }\n    return [msgs, msg_data, header];\n  }\n\n  _parse_v2_objects(buf, offset) {\n    /* Parse a collection of version 2 Data Objects. */\n    // NOTE: this is using absolute address even for messages in continuation \n    // blocks, and not keeping a concatenated message block (unlike pyfive)\n\n    var [header, creation_order_size, block_offset] = this._parse_v2_header(buf, offset);\n    offset = block_offset;\n    var msgs = [];\n    var block_size = header.get('size_of_chunk_0');\n    var msg_data = buf.slice(offset, offset += block_size);\n\n    var object_header_blocks = [[block_offset, block_size]];\n    var current_block = 0;\n    var local_offset = 0;\n\n    while (true) {\n      if (local_offset >= block_size - HEADER_MSG_INFO_V2_SIZE) {\n        let next_block = object_header_blocks[++current_block];\n        if (next_block == null) {\n          break\n        }\n        [block_offset, block_size] = next_block;\n        local_offset = 0;\n      }\n      let msg = _unpack_struct_from(HEADER_MSG_INFO_V2, buf, block_offset + local_offset);\n      let offset_to_message = block_offset + local_offset + HEADER_MSG_INFO_V2_SIZE + creation_order_size;\n      msg.set('offset_to_message', offset_to_message);\n      if (msg.get('type') == OBJECT_CONTINUATION_MSG_TYPE) {\n        var [fh_off, size] = struct.unpack_from('<QQ', buf, offset_to_message);\n        // skip the \"OFHC\" signature in v2 continuation objects:\n        object_header_blocks.push([fh_off + 4, size - 4]);\n      }\n      local_offset += HEADER_MSG_INFO_V2_SIZE + msg.get('size') + creation_order_size;\n      msgs.push(msg);\n    }\n\n    return [msgs, msg_data, header];\n  }\n\n  _parse_v2_header(buf, offset) {\n    /* Parse a version 2 data object header. */\n    let header = _unpack_struct_from(OBJECT_HEADER_V2, buf, offset);\n    var creation_order_size;\n    offset += _structure_size(OBJECT_HEADER_V2);\n    assert(header.get('version') == 2);\n    if (header.get('flags') & 0b00000100) {\n      creation_order_size = 2;\n    }\n    else {\n      creation_order_size = 0;\n    }\n    assert((header.get('flags') & 0b00010000) == 0);\n    if (header.get('flags') & 0b00100000) {\n      let times = struct.unpack_from('<4I', buf, offset);\n      offset += 16;\n      header.set('access_time', times[0]);\n      header.set('modification_time', times[1]);\n      header.set('change_time', times[2]);\n      header.set('birth_time', times[3]);\n    }\n    let chunk_fmt = ['<B', '<H', '<I', '<Q'][(header.get('flags') & 0b00000011)];\n    header.set('size_of_chunk_0', struct.unpack_from(chunk_fmt, buf, offset)[0]);\n    offset += struct.calcsize(chunk_fmt);\n    return [header, creation_order_size, offset];\n  }\n\n  get_links() {\n    //\"\"\" Return a dictionary of link_name: offset \"\"\"\n    return Object.fromEntries(this.iter_links());\n  }\n\n  * iter_links() {\n    for (let msg of this.msgs) {\n      if (msg.get('type') == SYMBOL_TABLE_MSG_TYPE) {\n        yield* this._iter_links_from_symbol_tables(msg);\n      }\n      else if (msg.get('type') == LINK_MSG_TYPE) {\n        yield this._get_link_from_link_msg(msg);\n      }\n      else if (msg.get('type') == LINK_INFO_MSG_TYPE) {\n        yield* this._iter_link_from_link_info_msg(msg);\n      }\n    }\n  }\n\n  * _iter_links_from_symbol_tables(sym_tbl_msg) {\n    //\"\"\" Return a dict of link_name: offset from a symbol table. \"\"\"\n    assert(sym_tbl_msg.get('size') == 16);\n    let data = _unpack_struct_from(\n      // NOTE: using this.fh instead of this.msg_data - needs to be fixed in py file?\n      SYMBOL_TABLE_MSG, this.fh,\n      sym_tbl_msg.get('offset_to_message'));\n    yield* this._iter_links_btree_v1(data.get('btree_address'), data.get('heap_address'));\n  }\n\n  * _iter_links_btree_v1(btree_address, heap_address) {\n    //\"\"\" Retrieve links from symbol table message. \"\"\"\n    let btree = new BTreeV1Groups(this.fh, btree_address);\n    let heap = new Heap(this.fh, heap_address);\n    for (let symbol_table_address of btree.symbol_table_addresses()) {\n      let table = new SymbolTable(this.fh, symbol_table_address);\n      table.assign_name(heap);\n      //let links = table.get_links(heap);\n      //let entries = links.entries();\n      yield* Object.entries(table.get_links(heap));\n    }\n  }\n\n  _get_link_from_link_msg(link_msg) {\n    //\"\"\" Retrieve link from link message. \"\"\"\n    let offset = link_msg.get('offset_to_message');\n    return this._decode_link_msg(this.fh, offset)[1];;\n  }\n\n  _decode_link_msg(data, offset) {\n    let [version, flags] = struct.unpack_from('<BB', data, offset);\n    offset += 2\n    assert(version == 1);\n\n    let size_of_length_of_link_name = 2 ** (flags & 3);\n    let link_type_field_present = (flags & 2 ** 3) > 0;\n    let link_name_character_set_field_present = (flags & 2 ** 4) > 0;\n    let ordered = (flags & 2 ** 2) > 0;\n    let link_type;\n\n    if (link_type_field_present) {\n      link_type = struct.unpack_from('<B', data, offset)[0];\n      offset += 1;\n    }\n    else {\n      link_type = 0;\n    }\n    assert([0, 1].includes(link_type));\n\n    let creationorder;\n    if (ordered) {\n      creationorder = struct.unpack_from('<Q', data, offset)[0]\n      offset += 8;\n    }\n\n    let link_name_character_set = 0;\n    if (link_name_character_set_field_present) {\n      link_name_character_set = struct.unpack_from('<B', data, offset)[0]\n      offset += 1\n    }\n\n    let encoding = (link_name_character_set == 0) ? 'ascii' : 'utf-8';\n\n    let name_size_fmt = [\"<B\", \"<H\", \"<I\", \"<Q\"][flags & 3];\n    let name_size = struct.unpack_from(name_size_fmt, data, offset)[0];\n    offset += size_of_length_of_link_name;\n\n    let name = new TextDecoder(encoding).decode(data.slice(offset, offset + name_size));\n    offset += name_size\n\n    let address;\n    //if (dereference) {\n    if (link_type == 0) {\n      //# hard link\n      address = struct.unpack_from('<Q', data, offset)[0];\n    }\n    else if (link_type == 1) {\n      //# soft link\n      let length_of_soft_link_value = struct.unpack_from('<H', data, offset)[0];\n      offset += 2\n      address = new TextDecoder(encoding).decode(data.slice(offset, offset + length_of_soft_link_value));\n    }\n\n    return [creationorder, [name, address]];\n  }\n\n  * _iter_link_from_link_info_msg(info_msg) {\n    //\"\"\" Retrieve links from link info message. \"\"\"\n    let offset = info_msg.get('offset_to_message');\n    let data = this._decode_link_info_msg(this.fh, offset);\n\n    let heap_address = data.get(\"heap_address\");\n    let name_btree_address = data.get(\"name_btree_address\");\n    let order_btree_address = data.get(\"order_btree_address\");\n    if (name_btree_address != null) {\n      yield* this._iter_links_btree_v2(name_btree_address, order_btree_address, heap_address);\n    }\n  }\n\n  * _iter_links_btree_v2(name_btree_address, order_btree_address, heap_address) {\n    //\"\"\" Retrieve links from symbol table message. \"\"\"\n    let heap = new FractalHeap(this.fh, heap_address);\n    let btree;\n    if (order_btree_address != UNDEFINED_ADDRESS) {\n      btree = new BTreeV2GroupOrders(this.fh, order_btree_address);\n    }\n    else {\n      btree = new BTreeV2GroupNames(this.fh, name_btree_address);\n    }\n    let items = new Map();\n    for (let record of btree.iter_records()) {\n      let data = heap.get_data(record.get(\"heapid\"));\n      let [creationorder, item] = this._decode_link_msg(data, 0);\n      items.set(creationorder, item);\n    }\n    let sorted_keys = Array.from(items.keys()).sort();\n    for (let key of sorted_keys) {\n      yield items.get(key);\n    }\n  }\n\n  _decode_link_info_msg(data, offset) {\n    let [version, flags] = struct.unpack_from('<BB', data, offset);\n    assert(version == 0);\n    offset += 2;\n    if ((flags & 1) > 0) {\n      // # creation order present\n      offset += 8;\n    }\n\n    let fmt = ((flags & 2) > 0) ? LINK_INFO_MSG2 : LINK_INFO_MSG1;\n\n    let link_info = _unpack_struct_from(fmt, data, offset);\n    let output = new Map();\n    for (let [k, v] of link_info.entries()) {\n      output.set(k, v == UNDEFINED_ADDRESS ? null : v);\n    }\n    return output\n  }\n\n  get is_dataset() {\n    //\"\"\" True when DataObjects points to a dataset, False for a group. \"\"\"\n    return ((this.find_msg_type(DATASPACE_MSG_TYPE)).length > 0);\n  }\n\n  /**\n   * Return the data pointed to in the DataObject\n   *\n   * @returns {Array}\n   * @memberof DataObjects\n   */\n  get_data() {\n    // offset and size from data storage message:\n    let msg = this.find_msg_type(DATA_STORAGE_MSG_TYPE)[0];\n    let msg_offset = msg.get('offset_to_message');\n    var [version, dims, layout_class, property_offset] = (\n      this._get_data_message_properties(msg_offset));\n\n    if (layout_class == 0) { // compact storage\n      throw \"Compact storage of DataObject not implemented\"\n    }\n    else if (layout_class == 1) {\n      return this._get_contiguous_data(property_offset)\n    }\n    else if (layout_class == 2) { //  # chunked storage\n      return this._get_chunked_data(msg_offset);\n    }\n  }\n\n  _get_data_message_properties(msg_offset) {\n    // \"\"\" Return the message properties of the DataObject. \"\"\"\n    let dims, layout_class, property_offset;\n    let [version, arg1, arg2] = struct.unpack_from(\n      '<BBB', this.fh, msg_offset);\n\n    if ((version == 1) || (version == 2)) {\n      dims = arg1;\n      layout_class = arg2;\n      property_offset = msg_offset;\n      property_offset += struct.calcsize('<BBB');\n      //# reserved fields: 1 byte, 1 int\n      property_offset += struct.calcsize('<BI')\n      //# compact storage (layout class 0) not supported:\n      assert((layout_class == 1) || (layout_class == 2))\n    }\n    else if ((version == 3) || (version == 4)) {\n      layout_class = arg1;\n      property_offset = msg_offset;\n      property_offset += struct.calcsize('<BB');\n    }\n    assert((version >= 1) && (version <= 4));\n    return [version, dims, layout_class, property_offset];\n  }\n\n  _get_contiguous_data(property_offset) {\n    let [data_offset] = struct.unpack_from('<Q', this.fh, property_offset);\n\n    if (data_offset == UNDEFINED_ADDRESS) {\n      //# no storage is backing array, return empty array\n      let size = this.shape.reduce(function (a, b) { return a * b }, 1); // int(np.product(shape))\n      return new Array(size);\n    }\n    var fullsize = this.shape.reduce(function (a, b) { return a * b }, 1);\n    if (!(this.dtype instanceof Array)) {\n      //# return a memory-map to the stored array with copy-on-write\n      //return np.memmap(self.fh, dtype=self.dtype, mode='c',\n      //                 offset=data_offset, shape=self.shape, order='C')\n      let dtype = this.dtype;\n      if (/[<>=!@\\|]?(i|u|f|S)(\\d*)/.test(dtype)) {\n        let [item_getter, item_is_big_endian, item_size] = dtype_getter(dtype);\n        let output = new Array(fullsize);\n        let view = new DataView64(this.fh);\n        for (var i = 0; i < fullsize; i++) {\n          output[i] = view[item_getter](data_offset + i * item_size, !item_is_big_endian, item_size);\n        }\n        return output\n      }\n      else {\n        throw \"not Implemented - no proper dtype defined\";\n      }\n    }\n    else {\n      let dtype_class = this.dtype[0];\n      if (dtype_class == 'REFERENCE') {\n        let size = this.dtype[1];\n        if (size != 8) {\n          throw \"NotImplementedError('Unsupported Reference type')\";\n        }\n        let ref_addresses = this.fh.slice(data_offset, data_offset + fullsize);\n\n        //ref_addresses = np.memmap(\n        //    self.fh, dtype=('<u8'), mode='c', offset=data_offset,\n        //    shape=self.shape, order='C')\n        //return np.array([Reference(addr) for addr in ref_addresses])\n        return ref_addresses;\n      }\n      else if (dtype_class == 'VLEN_STRING') {\n        let character_set = this.dtype[2];\n        var value = [];\n        for (var i = 0; i < fullsize; i++) {\n          var [vlen, vlen_data] = this._vlen_size_and_data(this.fh, data_offset);\n          let fmt = '<' + vlen.toFixed() + 's';\n          let str_data = struct.unpack_from(fmt, vlen_data, 0)[0];\n          if (character_set == 0) {\n            //# ascii character set, return as bytes\n            value[i] = str_data;\n          }\n          else {\n            value[i] = decodeURIComponent(escape(str_data));\n          }\n          data_offset += 16;\n        }\n        return value;\n      }\n      else {\n        throw \"NotImplementedError('datatype not implemented')\";\n      }\n    }\n  }\n\n  _get_chunked_data(offset) {\n    //\"\"\" Return data which is chunked. \"\"\"\n    this._get_chunk_params();\n    var chunk_btree = new BTreeV1RawDataChunks(\n      this.fh, this._chunk_address, this._chunk_dims);\n    let data = chunk_btree.construct_data_from_chunks(\n      this.chunks, this.shape, this.dtype, this.filter_pipeline);\n    if (this.dtype instanceof Array && /^VLEN/.test(this.dtype[0])) {\n      // VLEN data\n      let dtype_class = this.dtype[0];\n      for (var i = 0; i < data.length; i++) {\n        let [item_size, gheap_address, object_index] = data[i];\n        var gheap;\n        if (!(gheap_address in this._global_heaps)) {\n          //# load the global heap and cache the instance\n          gheap = new GlobalHeap(this.fh, gheap_address);\n          this._global_heaps[gheap_address] = gheap;\n        }\n        else {\n          gheap = this._global_heaps[gheap_address];\n        }\n        let vlen_data = gheap.objects.get(object_index);\n        if (dtype_class == 'VLEN_STRING') {\n          let character_set = this.dtype[2];\n          let fmt = '<' + item_size.toFixed() + 's';\n          let str_data = struct.unpack_from(fmt, vlen_data, 0)[0];\n          if (character_set == 0) {\n            //# ascii character set, return as bytes\n            data[i] = str_data;\n          }\n          else {\n            data[i] = decodeURIComponent(escape(str_data));\n          }\n        }\n      }\n    }\n    return data;\n  }\n\n  _get_chunk_params() {\n    /*\n    Get and cache chunked data storage parameters.\n    This method should be called prior to accessing any _chunk_*\n    attributes. Calling this method multiple times is fine, it will not\n    re-read the parameters.\n    */\n    if (this._chunk_params_set) { //# parameter have already need retrieved\n      return\n    }\n    this._chunk_params_set = true;\n    var msg = this.find_msg_type(DATA_STORAGE_MSG_TYPE)[0];\n    var offset = msg.get('offset_to_message');\n    var [version, dims, layout_class, property_offset] = (\n      this._get_data_message_properties(offset));\n\n    if (layout_class != 2) { //# not chunked storage\n      return\n    }\n\n    var data_offset;\n    if ((version == 1) || (version == 2)) {\n      var address = struct.unpack_from('<Q', this.fh, property_offset)[0];\n      data_offset = property_offset + struct.calcsize('<Q');\n    }\n    else if (version == 3) {\n      var [dims, address] = struct.unpack_from(\n        '<BQ', this.fh, property_offset);\n      data_offset = property_offset + struct.calcsize('<BQ');\n    }\n    assert((version >= 1) && (version <= 3));\n\n    var fmt = '<' + (dims - 1).toFixed() + 'I';\n    var chunk_shape = struct.unpack_from(fmt, this.fh, data_offset);\n    this._chunks = chunk_shape;\n    this._chunk_dims = dims;\n    this._chunk_address = address;\n    return\n  }\n\n}\n\nfunction determine_data_shape(buf, offset) {\n  //\"\"\" Return the shape of the dataset pointed to in a Dataspace message. \"\"\"\n  let version = struct.unpack_from('<B', buf, offset)[0];\n  var header;\n  if (version == 1) {\n    header = _unpack_struct_from(DATASPACE_MSG_HEADER_V1, buf, offset)\n    assert(header.get('version') == 1);\n    offset += DATASPACE_MSG_HEADER_V1_SIZE;\n  }\n  else if (version == 2) {\n    header = _unpack_struct_from(DATASPACE_MSG_HEADER_V2, buf, offset);\n    assert(header.get('version') == 2);\n    offset += DATASPACE_MSG_HEADER_V2_SIZE;\n  }\n  else {\n    throw \"InvalidHDF5File('unknown dataspace message version')\";\n  }\n\n  let ndims = header.get('dimensionality');\n  let dim_sizes = struct.unpack_from('<' + (ndims * 2).toFixed() + 'I', buf, offset);\n  //# Dimension maximum size follows if header['flags'] bit 0 set\n  //# Permutation index follows if header['flags'] bit 1 set\n  return dim_sizes.filter(function (s, i) { return i % 2 == 0 });\n}\n\nvar UNDEFINED_ADDRESS = struct.unpack_from('<Q', new Uint8Array([255, 255, 255, 255, 255, 255, 255, 255]).buffer);\n\nvar GLOBAL_HEAP_ID = new Map([\n  ['collection_address', 'Q'],  //# 8 byte addressing,\n  ['object_index', 'I'],\n]);\nvar GLOBAL_HEAP_ID_SIZE = _structure_size(GLOBAL_HEAP_ID);\n\n//# IV.A.2.m The Attribute Message\nvar ATTR_MSG_HEADER_V1 = new Map([\n  ['version', 'B'],\n  ['reserved', 'B'],\n  ['name_size', 'H'],\n  ['datatype_size', 'H'],\n  ['dataspace_size', 'H'],\n]);\nvar ATTR_MSG_HEADER_V1_SIZE = _structure_size(ATTR_MSG_HEADER_V1);\n\nvar ATTR_MSG_HEADER_V3 = new Map([\n  ['version', 'B'],\n  ['flags', 'B'],\n  ['name_size', 'H'],\n  ['datatype_size', 'H'],\n  ['dataspace_size', 'H'],\n  ['character_set_encoding', 'B'],\n]);\nvar ATTR_MSG_HEADER_V3_SIZE = _structure_size(ATTR_MSG_HEADER_V3);\n\n// IV.A.1.a Version 1 Data Object Header Prefix\nvar OBJECT_HEADER_V1 = new Map([\n  ['version', 'B'],\n  ['reserved', 'B'],\n  ['total_header_messages', 'H'],\n  ['object_reference_count', 'I'],\n  ['object_header_size', 'I'],\n  ['padding', 'I'],\n]);\n\n// IV.A.1.b Version 2 Data Object Header Prefix\nvar OBJECT_HEADER_V2 = new Map([\n  ['signature', '4s'],\n  ['version', 'B'],\n  ['flags', 'B'],\n  //# Access time (optional)\n  //# Modification time (optional)\n  //# Change time (optional)\n  //# Birth time (optional)\n  //# Maximum # of compact attributes\n  //# Maximum # of dense attributes\n  //# Size of Chunk #0\n])\n\n// IV.A.2.b The Dataspace Message\nvar DATASPACE_MSG_HEADER_V1 = new Map([\n  ['version', 'B'],\n  ['dimensionality', 'B'],\n  ['flags', 'B'],\n  ['reserved_0', 'B'],\n  ['reserved_1', 'I'],\n]);\nvar DATASPACE_MSG_HEADER_V1_SIZE = _structure_size(DATASPACE_MSG_HEADER_V1);\n\nvar DATASPACE_MSG_HEADER_V2 = new Map([\n  ['version', 'B'],\n  ['dimensionality', 'B'],\n  ['flags', 'B'],\n  ['type', 'B'],\n]);\nvar DATASPACE_MSG_HEADER_V2_SIZE = _structure_size(DATASPACE_MSG_HEADER_V2);\n\nvar HEADER_MSG_INFO_V1 = new Map([\n  ['type', 'H'],\n  ['size', 'H'],\n  ['flags', 'B'],\n  ['reserved', '3s']\n]);\nvar HEADER_MSG_INFO_V1_SIZE = _structure_size(HEADER_MSG_INFO_V1);\n\nvar HEADER_MSG_INFO_V2 = new Map([\n  ['type', 'B'],\n  ['size', 'H'],\n  ['flags', 'B'],\n]);\nvar HEADER_MSG_INFO_V2_SIZE = _structure_size(HEADER_MSG_INFO_V2);\n\nvar SYMBOL_TABLE_MSG = new Map([\n  ['btree_address', 'Q'],     //# 8 bytes addressing\n  ['heap_address', 'Q'],      //# 8 byte addressing\n]);\n\nconst LINK_INFO_MSG1 = new Map([\n  ['heap_address', 'Q'],        // 8 byte addressing\n  ['name_btree_address', 'Q']   // 8 bytes addressing\n])\n\nconst LINK_INFO_MSG2 = new Map([\n  ['heap_address', 'Q'],         // 8 byte addressing\n  ['name_btree_address', 'Q'],   // 8 bytes addressing\n  ['order_btree_address', 'Q']   // 8 bytes addressing\n])\n\n// IV.A.2.f. The Data Storage - Fill Value Message\nvar FILLVAL_MSG_V1V2 = new Map([\n  ['version', 'B'],\n  ['space_allocation_time', 'B'],\n  ['fillvalue_write_time', 'B'],\n  ['fillvalue_defined', 'B']\n]);\nvar FILLVAL_MSG_V1V2_SIZE = _structure_size(FILLVAL_MSG_V1V2);\n\nvar FILLVAL_MSG_V3 = new Map([\n  ['version', 'B'],\n  ['flags', 'B']\n]);\nvar FILLVAL_MSG_V3_SIZE = _structure_size(FILLVAL_MSG_V3);\n\n//# IV.A.2.l The Data Storage - Filter Pipeline message\nvar FILTER_PIPELINE_DESCR_V1 = new Map([\n  ['filter_id', 'H'],\n  ['name_length', 'H'],\n  ['flags', 'H'],\n  ['client_data_values', 'H'],\n]);\nvar FILTER_PIPELINE_DESCR_V1_SIZE = _structure_size(FILTER_PIPELINE_DESCR_V1);\n\n//# Data Object Message types\n//# Section IV.A.2.a - IV.A.2.x\nvar NIL_MSG_TYPE = 0x0000;\nvar DATASPACE_MSG_TYPE = 0x0001;\nvar LINK_INFO_MSG_TYPE = 0x0002;\nvar DATATYPE_MSG_TYPE = 0x0003;\nvar FILLVALUE_OLD_MSG_TYPE = 0x0004;\nvar FILLVALUE_MSG_TYPE = 0x0005;\nvar LINK_MSG_TYPE = 0x0006;\nvar EXTERNAL_DATA_FILES_MSG_TYPE = 0x0007;\nvar DATA_STORAGE_MSG_TYPE = 0x0008;\nvar BOGUS_MSG_TYPE = 0x0009;\nvar GROUP_INFO_MSG_TYPE = 0x000A;\nvar DATA_STORAGE_FILTER_PIPELINE_MSG_TYPE = 0x000B;\nvar ATTRIBUTE_MSG_TYPE = 0x000C;\nvar OBJECT_COMMENT_MSG_TYPE = 0x000D;\nvar OBJECT_MODIFICATION_TIME_OLD_MSG_TYPE = 0x000E;\nvar SHARED_MSG_TABLE_MSG_TYPE = 0x000F;\nvar OBJECT_CONTINUATION_MSG_TYPE = 0x0010;\nvar SYMBOL_TABLE_MSG_TYPE = 0x0011;\nvar OBJECT_MODIFICATION_TIME_MSG_TYPE = 0x0012;\nvar BTREE_K_VALUE_MSG_TYPE = 0x0013;\nvar DRIVER_INFO_MSG_TYPE = 0x0014;\nvar ATTRIBUTE_INFO_MSG_TYPE = 0x0015;\nvar OBJECT_REFERENCE_COUNT_MSG_TYPE = 0x0016;\nvar FILE_SPACE_INFO_MSG_TYPE = 0x0018;\n","import {DataObjects} from './dataobjects.js';\nimport {SuperBlock} from './misc-low-level.js';\n\nexport class Group {\n  /*\n    An HDF5 Group which may hold attributes, datasets, or other groups.\n    Attributes\n    ----------\n    attrs : dict\n        Attributes for this group.\n    name : str\n        Full path to this group.\n    file : File\n        File instance where this group resides.\n    parent : Group\n        Group instance containing this group.\n  */\n\n  /**\n   *\n   *\n   * @memberof Group\n   * @member {Group|File} parent;\n   * @member {File} file;\n   * @member {string} name;\n   * @member {DataObjects} _dataobjects;\n   * @member {Object} _attrs;\n   * @member {Array<string>} _keys;\n   */\n  // parent;\n  // file;\n  // name;\n  // _links;\n  // _dataobjects;\n  // _attrs;\n  // _keys;\n\n  /**\n   * \n   * @param {string} name \n   * @param {DataObjects} dataobjects \n   * @param {Group} [parent] \n   * @param {boolean} [getterProxy=false]\n   * @returns {Group}\n   */\n  constructor(name, dataobjects, parent, getterProxy=false) {\n    if (parent == null) {\n      this.parent = this;\n      this.file = this;\n    }\n    else {\n      this.parent = parent;\n      this.file = parent.file;\n    }\n    this.name = name;\n\n    this._links = dataobjects.get_links();\n    this._dataobjects = dataobjects;\n    this._attrs = null;  // cached property\n    this._keys = null;\n    if (getterProxy) {\n      return new Proxy(this, groupGetHandler);\n    }\n  }\n\n  get keys() {\n    if (this._keys == null) {\n      this._keys = Object.keys(this._links);\n    }\n    return this._keys.slice();\n  }\n\n  get values() {\n    return this.keys.map(k => this.get(k));\n  }\n\n  length() {\n    return this.keys.length;\n  }\n\n  _dereference(ref) {\n    //\"\"\" Deference a Reference object. \"\"\"\n    if (!ref) {\n      throw 'cannot deference null reference';\n    }\n    let obj = this.file._get_object_by_address(ref);\n    if (obj == null) {\n      throw 'reference not found in file';\n    }\n    return obj\n  }\n\n  get(y) {\n    //\"\"\" x.__getitem__(y) <==> x[y] \"\"\"\n    if (typeof(y) == 'number') {\n      return this._dereference(y);\n    }\n\n    var path = normpath(y);\n    if (path == '/') {\n      return this.file;\n    }\n\n    if (path == '.') {\n      return this\n    }    \n    if (/^\\//.test(path)) {\n      return this.file.get(path.slice(1));\n    }\n\n    if (posix_dirname(path) != '') {\n      var [next_obj, additional_obj] = path.split(/\\/(.*)/);\n    }\n    else {\n      var next_obj = path;\n      var additional_obj = '.'\n    }\n    if (!(next_obj in this._links)) {\n      throw next_obj + ' not found in group';\n    }\n\n    var obj_name = normpath(this.name + '/' + next_obj);\n    let link_target = this._links[next_obj];\n\n    if (typeof(link_target) == \"string\") {\n      try {\n        return this.get(link_target)\n      } catch (error) {\n        return null\n      } \n    }\n\n    var dataobjs = new DataObjects(this.file._fh, link_target);\n    if (dataobjs.is_dataset) {\n      if (additional_obj != '.') {\n        throw obj_name + ' is a dataset, not a group';\n      }\n      return new Dataset(obj_name, dataobjs, this);\n    }\n    else {\n      var new_group = new Group(obj_name, dataobjs, this);\n      return new_group.get(additional_obj);\n    }\n  }\n\n  visit(func) {\n    /*\n    Recursively visit all names in the group and subgroups.\n    func should be a callable with the signature:\n        func(name) -> None or return value\n    Returning None continues iteration, return anything else stops and\n    return that value from the visit method.\n    */\n    return this.visititems((name, obj) => func(name));\n  }\n\n  visititems(func) {\n    /*\n    Recursively visit all objects in this group and subgroups.\n    func should be a callable with the signature:\n        func(name, object) -> None or return value\n    Returning None continues iteration, return anything else stops and\n    return that value from the visit method.\n    */\n    var root_name_length = this.name.length;\n    if (!(/\\/$/.test(this.name))) {\n      root_name_length += 1;\n    }\n    //queue = deque(this.values())\n    var queue = this.values.slice();\n    while (queue) {\n      let obj = queue.shift();\n      if (queue.length == 1) console.log(obj);\n      let name = obj.name.slice(root_name_length);\n      let ret = func(name, obj);\n      if (ret != null) {\n        return ret\n      }\n      if (obj instanceof Group) {\n        queue = queue.concat(obj.values);\n      }\n    }\n    return null\n  }\n\n  get attrs() {\n    //\"\"\" attrs attribute. \"\"\"\n    if (this._attrs == null) {\n      this._attrs = this._dataobjects.get_attributes();\n    }\n    return this._attrs\n  }\n\n}\n\nconst groupGetHandler = {\n  get: function(target, prop, receiver) {\n    if (prop in target) {\n      return target[prop];\n    }\n    return target.get(prop);\n  }\n};\n\n\nexport class File extends Group {\n  /*\n  Open a HDF5 file.\n  Note in addition to having file specific methods the File object also\n  inherit the full interface of **Group**.\n  File is also a context manager and therefore supports the with statement.\n  Files opened by the class will be closed after the with block, file-like\n  object are not closed.\n  Parameters\n  ----------\n  filename : str or file-like\n      Name of file (string or unicode) or file like object which has read\n      and seek methods which behaved like a Python file object.\n  Attributes\n  ----------\n  filename : str\n      Name of the file on disk, None if not available.\n  mode : str\n      String indicating that the file is open readonly (\"r\").\n  userblock_size : int\n      Size of the user block in bytes (currently always 0).\n  */\n\n  constructor (fh, filename) {\n    //\"\"\" initalize. \"\"\"\n    //if hasattr(filename, 'read'):\n    //    if not hasattr(filename, 'seek'):\n    //        raise ValueError(\n    //            'File like object must have a seek method')\n    \n    var superblock = new SuperBlock(fh, 0);\n    var offset = superblock.offset_to_dataobjects;\n    var dataobjects = new DataObjects(fh, offset);\n    super('/', dataobjects, null);\n    this.parent = this;\n\n    this._fh = fh\n    this.filename = filename || '';\n\n    this.file = this;\n    this.mode = 'r';\n    this.userblock_size = 0;\n  }\n\n  _get_object_by_address(obj_addr) {\n    //\"\"\" Return the object pointed to by a given address. \"\"\"\n    if (this._dataobjects.offset == obj_addr) {\n      return this\n    }\n    return this.visititems(\n      (y) => {(y._dataobjects.offset == obj_addr) ? y : null;}\n    );\n  }\n}\n\nexport class Dataset extends Array {\n  /*\n  A HDF5 Dataset containing an n-dimensional array and meta-data attributes.\n  Attributes\n  ----------\n  shape : tuple\n      Dataset dimensions.\n  dtype : dtype\n      Dataset's type.\n  size : int\n      Total number of elements in the dataset.\n  chunks : tuple or None\n      Chunk shape, or NOne is chunked storage not used.\n  compression : str or None\n      Compression filter used on dataset.  None if compression is not enabled\n      for this dataset.\n  compression_opts : dict or None\n      Options for the compression filter.\n  scaleoffset : dict or None\n      Setting for the HDF5 scale-offset filter, or None if scale-offset\n      compression is not used for this dataset.\n  shuffle : bool\n      Whether the shuffle filter is applied for this dataset.\n  fletcher32 : bool\n      Whether the Fletcher32 checksumming is enabled for this dataset.\n  fillvalue : float or None\n      Value indicating uninitialized portions of the dataset. None is no fill\n      values has been defined.\n  dim : int\n      Number of dimensions.\n  dims : None\n      Dimension scales.\n  attrs : dict\n      Attributes for this dataset.\n  name : str\n      Full path to this dataset.\n  file : File\n      File instance where this dataset resides.\n  parent : Group\n      Group instance containing this dataset.\n  */\n\n  /**\n   *\n   *\n   * @memberof Dataset\n   * @member {Group|File} parent;\n   * @member {File} file;\n   * @member {string} name;\n   * @member {DataObjects} _dataobjects;\n   * @member {Object} _attrs;\n   * @member {string} _astype;\n   */\n  // parent;\n  // file;\n  // name;\n  // _dataobjects;\n  // _attrs;\n  // _astype;\n\n  constructor(name, dataobjects, parent) {\n    //\"\"\" initalize. \"\"\"\n    super();\n    this.parent = parent;\n    this.file = parent.file\n    this.name = name;\n\n    this._dataobjects = dataobjects\n    this._attrs = null;\n    this._astype = null;\n  }\n\n  get value() {\n    var data = this._dataobjects.get_data();\n    if (this._astype == null) {\n      return data\n    }\n    return data.astype(this._astype);\n  }\n\n  get shape() {\n    return this._dataobjects.shape;\n  }\n\n  get attrs() {\n    return this._dataobjects.get_attributes();\n  }\n\n  get dtype() {\n    return this._dataobjects.dtype;\n  }\n\n  get fillvalue() {\n    return this._dataobjects.fillvalue;\n  }\n}\n\n\nfunction posix_dirname(p) {\n  let sep = '/';\n  let i = p.lastIndexOf(sep) + 1;\n  let head = p.slice(0, i);\n  let all_sep = new RegExp('^' + sep + '+$');\n  let end_sep = new RegExp(sep + '$');\n  if (head && !(all_sep.test(head))) {\n    head = head.replace(end_sep, '');\n  }\n  return head\n}\n\nfunction normpath(path) {\n  return path.replace(/\\/(\\/)+/g, '/'); \n  // path = posixpath.normpath(y)\n}","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = GeneratorFunctionPrototype;\n  define(Gp, \"constructor\", GeneratorFunctionPrototype);\n  define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction);\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  });\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  define(Gp, iteratorSymbol, function() {\n    return this;\n  });\n\n  define(Gp, \"toString\", function() {\n    return \"[object Generator]\";\n  });\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, in modern engines\n  // we can explicitly access globalThis. In older engines we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nimport possibleConstructorReturn from \"./possibleConstructorReturn.js\";\nexport default function _createSuper(Derived) {\n  var hasNativeReflectConstruct = isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return possibleConstructorReturn(this, result);\n  };\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}","import _typeof from \"@babel/runtime/helpers/typeof\";\nimport assertThisInitialized from \"./assertThisInitialized.js\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n\n  return assertThisInitialized(self);\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","import * as wasm from \"./wasm.js\";\n\n/** \n * Manage an array allocated on the Wasm heap.\n * This wraps the Wasm `_malloc` and `free` commands and provides a simple method to obtain a `TypedArray` view.\n */\nexport class WasmArray {\n    /**\n     * Create an allocation on the Wasm heap.\n     *\n     * @param {number} length Length of the array in terms of the number of elements.\n     * @param {number} offset Offset from the start of the Wasm heap.\n     * If supplied, we create a view on the specified memory allocation, but do not assume ownership.\n     * If undefined or `null`, the constructor will allocate the required memory from the heap and assume ownership.\n     * @param {number} size Size of the data type, usually one of 1, 2, 4 or 8.\n     */\n    constructor(length, offset, size) {\n        if (typeof offset === \"undefined\" || offset === null) {\n            this.owner = true;\n            this.offset = wasm.call(module => module._malloc(size * length));\n        } else {\n            this.owner = false;\n            this.offset = offset;\n        }\n        this.length = length;\n    }\n   \n    /**\n     * Fill the array with a constant number.\n     *\n     * @param {number} x - Number to use to fill the array.\n     * @param {number} [start] Position on the array to start filling.\n     * Defaults to the start of the array.\n     * @param {number} [end] Position on the array to stop filling.\n     * Defaults to the end of the array.\n     * Only used if `start` is specified.\n     *\n     * @return The array (or its specified subinterval) is filled with values from `x`.\n     */\n    fill(x, start, end) {\n        if (typeof start === \"undefined\") {\n            this.array().fill(x);\n        } else if (typeof end === \"undefined\") {\n            this.array().fill(x, start);\n        } else {\n            this.array().fill(x, start, end);\n        }\n        return;\n    }\n\n    /**\n     * Set the array elements to the contents of an existing array.\n     *\n     * @param {(Array|TypedArray)} x - Source array containing the values to fill the current array.\n     * @param {?number} [offset] - Position on this array to start setting to `x`.\n     * Defaults to the start of the array.\n     *\n     * @return Entries of this array (starting from `offset`, if specified) are set to `x`.\n     */\n    set(x, offset) {\n        if (typeof offset === \"undefined\") {\n            this.array().set(x);\n        } else {\n            this.array().set(x, offset);\n        }\n        return;\n    }\n\n    /**\n     * Create a `TypedArray` slice of the data in the allocated array.\n     *\n     * @param {number} [start] - Position on this array to start slicing.\n     * Defaults to the start of the array.\n     * @param {number} [end] - Position on the array to end slicing.\n     * Defaults to the end of the array.\n     * Only used if `start` is specified.\n     *\n     * @return A `TypedArray` containing the specified subarray.\n     * This is not a view on the Wasm heap and thus can continue to be used after Wasm allocations.\n     */\n    slice(start, end) {\n        if (typeof start === \"undefined\") {\n            return this.array().slice();\n        } else if (typeof end === \"undefined\") {\n            return this.array().slice(start);\n        } else {\n            return this.array().slice(start, end);\n        }\n    }\n\n    /**\n     * Create a new `WasmArray` containing a copy of the data in this object.\n     *\n     * @return A copy of the data in a new `WasmArray`.\n     *\n     * Use `slice()` instead if you want to obtain a copy in a new `TypedArray`.\n     */\n    clone() {\n        let copy = new this.constructor(this.length);\n        copy.set(this.array());\n        return copy;\n    }\n\n    /**\n     * Free the allocated Wasm memory if this object owns that memory.\n     * If an offset was provided in the constructor, this is a no-op.\n     *\n     * @return If this object is the owner, memory is freed and this allocation is invalidated.\n     */\n    free() {\n        if (this.owner) {\n            wasm.call(module => module._free(this.offset));\n            this.offset = null;\n        }\n    }\n}\n\n/** \n * Manage an unsigned 8-bit array allocated on the Wasm heap.\n *\n * @augments WasmArray\n */\nexport class Uint8WasmArray extends WasmArray {\n    /**\n     * Create an unsigned 8-bit array on the Wasm heap.\n     *\n     * @param {number} length - Number of elements to allocate.\n     * @param {number} [offset] - Offset from the start of the Wasm heap, for an existing allocated array.\n     * If not provided, the constructor will allocate the required memory.\n     */ \n    constructor(length, offset) {\n        super(length, offset, 1);\n        return;\n    }\n\n    /**\n     * @return A `Uint8Array` view of the allocated memory.\n     */\n    array() {\n        return new Uint8Array(wasm.buffer(), this.offset, this.length);\n    }\n\n    /**\n     * Name of the class.\n     */\n    static className = \"Uint8WasmArray\";\n    // We're returning the name explicitly here instead of relying\n    // on the constructor.name trick, as the name of the class can\n    // change during minification.\n}\n\n/** \n * Manage a signed 8-bit array allocated on the Wasm heap.\n *\n * @augments WasmArray\n */\nexport class Int8WasmArray extends WasmArray {\n    /**\n     * Create a signed 8-bit array on the Wasm heap.\n     *\n     * @param {number} length - Number of elements to allocate.\n     * @param {number} [offset] - Offset from the start of the Wasm heap, for an existing allocated array.\n     * If not provided, the constructor will allocate the required memory.\n     */ \n    constructor(length, offset) {\n        super(length, offset, 1);\n        return;\n    }\n\n    /**\n     * @return A `Int8Array` view of the allocated memory.\n     */\n    array() {\n        return new Int8Array(wasm.buffer(), this.offset, this.length);\n    }\n\n    /**\n     * Name of the class.\n     */\n    static className = \"Int8WasmArray\";\n}\n\n/** \n * Manage an unsigned 16-bit array allocated on the Wasm heap.\n *\n * @augments WasmArray\n */\nexport class Uint16WasmArray extends WasmArray {\n    /**\n     * Create an unsigned 16-bit array on the Wasm heap.\n     *\n     * @param {number} length - Number of elements to allocate.\n     * @param {number} [offset] - Offset from the start of the Wasm heap, for an existing allocated array.\n     * If not provided, the constructor will allocate the required memory.\n     */ \n    constructor(length, offset) { \n        super(length, offset, 2);\n        return;\n    }\n\n    /**\n     * @return A `Uint16Array` view of the allocated memory.\n     */\n    array() {\n        return new Uint16Array(wasm.buffer(), this.offset, this.length);\n    }\n\n    /**\n     * Name of the class.\n     */\n    static className = \"Uint16WasmArray\";\n}\n\n/** \n * Manage a signed 16-bit array allocated on the Wasm heap.\n *\n * @augments WasmArray\n */\nexport class Int16WasmArray extends WasmArray {\n    /**\n     * Create a signed 16-bit array on the Wasm heap.\n     *\n     * @param {number} length - Number of elements to allocate.\n     * @param {number} [offset] - Offset from the start of the Wasm heap, for an existing allocated array.\n     * If not provided, the constructor will allocate the required memory.\n     */ \n    constructor(length, offset) {\n        super(length, offset, 2);\n        return;\n    }\n\n    /**\n     * @return A `Int16Array` view of the allocated memory.\n     */\n    array() {\n        return new Int16Array(wasm.buffer(), this.offset, this.length);\n    }\n\n    /**\n     * Name of the class.\n     */\n    static className = \"Int16WasmArray\";\n}\n\n/** \n * Manage an unsigned 32-bit array allocated on the Wasm heap.\n */\nexport class Uint32WasmArray extends WasmArray {\n    /**\n     * Create an unsigned 32-bit array on the Wasm heap.\n     *\n     * @param {number} length - Number of elements to allocate.\n     * @param {number} [offset] - Offset from the start of the Wasm heap, for an existing allocated array.\n     * If `null`, the constructor will allocate the required memory.\n     */ \n    constructor(length, offset) {\n        super(length, offset, 4);\n        return;\n    }\n\n    /**\n     * @return A `Uint32Array` view of the allocated memory.\n     */\n    array() {\n        return new Uint32Array(wasm.buffer(), this.offset, this.length);\n    }\n\n    /**\n     * Name of the class.\n     */\n    static className = \"Uint32WasmArray\";\n}\n\n/** \n * Manage a signed 32-bit array allocated on the Wasm heap.\n *\n * @augments WasmArray\n */\nexport class Int32WasmArray extends WasmArray {\n    /**\n     * Create a signed 32-bit array on the Wasm heap.\n     *\n     * @param {number} length - Number of elements to allocate.\n     * @param {number} [offset] - Offset from the start of the Wasm heap, for an existing allocated array.\n     * If `null`, the constructor will allocate the required memory.\n     */ \n    constructor(length, offset) {\n        super(length, offset, 4);\n        return;\n    }\n\n    /**\n     * @return A `Int32Array` view of the allocated memory.\n     */\n    array() {\n        return new Int32Array(wasm.buffer(), this.offset, this.length);\n    }\n\n    /**\n     * @return Name of the class.\n     */\n    static className = \"Int32WasmArray\";\n}\n\n/** \n * Manage a 32-bit float array allocated on the Wasm heap.\n *\n * @augments WasmArray\n */\nexport class Float32WasmArray extends WasmArray {\n    /**\n     * Create a 32-bit float array on the Wasm heap.\n     *\n     * @param {number} length Number of elements to allocate.\n     * @param {number} [offset] - Offset from the start of the Wasm heap, for an existing allocated array.\n     * If `null`, the constructor will allocate the required memory.\n     */ \n    constructor(length, offset) {\n        super(length, offset, 4);\n        return;\n    }\n\n    /**\n     * @return A `Float32Array` view of the allocated memory.\n     */\n    array() {\n        return new Float32Array(wasm.buffer(), this.offset, this.length);\n    }\n\n    /**\n     * @return Name of the class.\n     */\n    static className = \"Float32WasmArray\";\n}\n\n/** \n * Manage a 64-bit float array allocated on the Wasm heap.\n *\n * @augments WasmArray\n */\nexport class Float64WasmArray extends WasmArray {\n    /**\n     * Create a 64-bit float array on the Wasm heap.\n     *\n     * @param {number} length - Number of elements to allocate.\n     * @param {number} [offset] - Offset from the start of the Wasm heap, for an existing allocated array.\n     * If `null`, the constructor will allocate the required memory.\n     */ \n    constructor(length, offset) {\n        super(length, offset, 8);\n        return;\n    }\n\n    /**\n     * @return A `Float64Array` view of the allocated memory.\n     */\n    array() {\n        return new Float64Array(wasm.buffer(), this.offset, this.length);\n    }\n\n    /**\n     * @return Name of the class.\n     */\n    static className = \"Float64WasmArray\";\n}\n","\nvar loadScran = (() => {\n  var _scriptDir = import.meta.url;\n  \n  return (\nfunction(loadScran) {\n  loadScran = loadScran || {};\n\nfunction GROWABLE_HEAP_I8(){if(wasmMemory.buffer!=buffer){updateGlobalBufferAndViews(wasmMemory.buffer)}return HEAP8}function GROWABLE_HEAP_U8(){if(wasmMemory.buffer!=buffer){updateGlobalBufferAndViews(wasmMemory.buffer)}return HEAPU8}function GROWABLE_HEAP_I16(){if(wasmMemory.buffer!=buffer){updateGlobalBufferAndViews(wasmMemory.buffer)}return HEAP16}function GROWABLE_HEAP_U16(){if(wasmMemory.buffer!=buffer){updateGlobalBufferAndViews(wasmMemory.buffer)}return HEAPU16}function GROWABLE_HEAP_I32(){if(wasmMemory.buffer!=buffer){updateGlobalBufferAndViews(wasmMemory.buffer)}return HEAP32}function GROWABLE_HEAP_U32(){if(wasmMemory.buffer!=buffer){updateGlobalBufferAndViews(wasmMemory.buffer)}return HEAPU32}function GROWABLE_HEAP_F32(){if(wasmMemory.buffer!=buffer){updateGlobalBufferAndViews(wasmMemory.buffer)}return HEAPF32}function GROWABLE_HEAP_F64(){if(wasmMemory.buffer!=buffer){updateGlobalBufferAndViews(wasmMemory.buffer)}return HEAPF64}var Module=typeof loadScran!==\"undefined\"?loadScran:{};var objAssign=Object.assign;var readyPromiseResolve,readyPromiseReject;Module[\"ready\"]=new Promise(function(resolve,reject){readyPromiseResolve=resolve;readyPromiseReject=reject});var moduleOverrides=objAssign({},Module);var arguments_=[];var thisProgram=\"./this.program\";var quit_=(status,toThrow)=>{throw toThrow};var ENVIRONMENT_IS_WEB=typeof window===\"object\";var ENVIRONMENT_IS_WORKER=typeof importScripts===\"function\";var ENVIRONMENT_IS_NODE=typeof process===\"object\"&&typeof process.versions===\"object\"&&typeof process.versions.node===\"string\";var ENVIRONMENT_IS_PTHREAD=Module[\"ENVIRONMENT_IS_PTHREAD\"]||false;var scriptDirectory=\"\";function locateFile(path){if(Module[\"locateFile\"]){return Module[\"locateFile\"](path,scriptDirectory)}return scriptDirectory+path}var read_,readAsync,readBinary,setWindowTitle;if(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER){if(ENVIRONMENT_IS_WORKER){scriptDirectory=self.location.href}else if(typeof document!==\"undefined\"&&document.currentScript){scriptDirectory=document.currentScript.src}if(_scriptDir){scriptDirectory=_scriptDir}if(scriptDirectory.indexOf(\"blob:\")!==0){scriptDirectory=scriptDirectory.substr(0,scriptDirectory.replace(/[?#].*/,\"\").lastIndexOf(\"/\")+1)}else{scriptDirectory=\"\"}{read_=(url=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.send(null);return xhr.responseText});if(ENVIRONMENT_IS_WORKER){readBinary=(url=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.responseType=\"arraybuffer\";xhr.send(null);return new Uint8Array(xhr.response)})}readAsync=((url,onload,onerror)=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,true);xhr.responseType=\"arraybuffer\";xhr.onload=(()=>{if(xhr.status==200||xhr.status==0&&xhr.response){onload(xhr.response);return}onerror()});xhr.onerror=onerror;xhr.send(null)})}setWindowTitle=(title=>document.title=title)}else{}var out=Module[\"print\"]||console.log.bind(console);var err=Module[\"printErr\"]||console.warn.bind(console);objAssign(Module,moduleOverrides);moduleOverrides=null;if(Module[\"arguments\"])arguments_=Module[\"arguments\"];if(Module[\"thisProgram\"])thisProgram=Module[\"thisProgram\"];if(Module[\"quit\"])quit_=Module[\"quit\"];var POINTER_SIZE=4;function warnOnce(text){if(!warnOnce.shown)warnOnce.shown={};if(!warnOnce.shown[text]){warnOnce.shown[text]=1;err(text)}}function convertJsFunctionToWasm(func,sig){if(typeof WebAssembly.Function===\"function\"){var typeNames={\"i\":\"i32\",\"j\":\"i64\",\"f\":\"f32\",\"d\":\"f64\"};var type={parameters:[],results:sig[0]==\"v\"?[]:[typeNames[sig[0]]]};for(var i=1;i<sig.length;++i){type.parameters.push(typeNames[sig[i]])}return new WebAssembly.Function(type,func)}var typeSection=[1,0,1,96];var sigRet=sig.slice(0,1);var sigParam=sig.slice(1);var typeCodes={\"i\":127,\"j\":126,\"f\":125,\"d\":124};typeSection.push(sigParam.length);for(var i=0;i<sigParam.length;++i){typeSection.push(typeCodes[sigParam[i]])}if(sigRet==\"v\"){typeSection.push(0)}else{typeSection=typeSection.concat([1,typeCodes[sigRet]])}typeSection[1]=typeSection.length-2;var bytes=new Uint8Array([0,97,115,109,1,0,0,0].concat(typeSection,[2,7,1,1,101,1,102,0,0,7,5,1,1,102,0,0]));var module=new WebAssembly.Module(bytes);var instance=new WebAssembly.Instance(module,{\"e\":{\"f\":func}});var wrappedFunc=instance.exports[\"f\"];return wrappedFunc}var freeTableIndexes=[];var functionsInTableMap;function getEmptyTableSlot(){if(freeTableIndexes.length){return freeTableIndexes.pop()}try{wasmTable.grow(1)}catch(err){if(!(err instanceof RangeError)){throw err}throw\"Unable to grow wasm table. Set ALLOW_TABLE_GROWTH.\"}return wasmTable.length-1}function updateTableMap(offset,count){for(var i=offset;i<offset+count;i++){var item=getWasmTableEntry(i);if(item){functionsInTableMap.set(item,i)}}}var tempRet0=0;var setTempRet0=value=>{tempRet0=value};var Atomics_load=Atomics.load;var Atomics_store=Atomics.store;var Atomics_compareExchange=Atomics.compareExchange;var wasmBinary;if(Module[\"wasmBinary\"])wasmBinary=Module[\"wasmBinary\"];var noExitRuntime=Module[\"noExitRuntime\"]||true;if(typeof WebAssembly!==\"object\"){abort(\"no native wasm support detected\")}var wasmMemory;var wasmModule;var ABORT=false;var EXITSTATUS;function assert(condition,text){if(!condition){abort(text)}}function getCFunc(ident){var func=Module[\"_\"+ident];return func}function ccall(ident,returnType,argTypes,args,opts){var toC={\"string\":function(str){var ret=0;if(str!==null&&str!==undefined&&str!==0){var len=(str.length<<2)+1;ret=stackAlloc(len);stringToUTF8(str,ret,len)}return ret},\"array\":function(arr){var ret=stackAlloc(arr.length);writeArrayToMemory(arr,ret);return ret}};function convertReturnValue(ret){if(returnType===\"string\")return UTF8ToString(ret);if(returnType===\"boolean\")return Boolean(ret);return ret}var func=getCFunc(ident);var cArgs=[];var stack=0;if(args){for(var i=0;i<args.length;i++){var converter=toC[argTypes[i]];if(converter){if(stack===0)stack=stackSave();cArgs[i]=converter(args[i])}else{cArgs[i]=args[i]}}}var ret=func.apply(null,cArgs);function onDone(ret){if(stack!==0)stackRestore(stack);return convertReturnValue(ret)}ret=onDone(ret);return ret}var ALLOC_STACK=1;function TextDecoderWrapper(encoding){var textDecoder=new TextDecoder(encoding);this.decode=(data=>{if(data.buffer instanceof SharedArrayBuffer){data=new Uint8Array(data)}return textDecoder.decode.call(textDecoder,data)})}var UTF8Decoder=typeof TextDecoder!==\"undefined\"?new TextDecoderWrapper(\"utf8\"):undefined;function UTF8ArrayToString(heap,idx,maxBytesToRead){idx>>>=0;var endIdx=idx+maxBytesToRead;var endPtr=idx;while(heap[endPtr>>>0]&&!(endPtr>=endIdx))++endPtr;if(endPtr-idx>16&&heap.subarray&&UTF8Decoder){return UTF8Decoder.decode(heap.subarray(idx>>>0,endPtr>>>0))}else{var str=\"\";while(idx<endPtr){var u0=heap[idx++>>>0];if(!(u0&128)){str+=String.fromCharCode(u0);continue}var u1=heap[idx++>>>0]&63;if((u0&224)==192){str+=String.fromCharCode((u0&31)<<6|u1);continue}var u2=heap[idx++>>>0]&63;if((u0&240)==224){u0=(u0&15)<<12|u1<<6|u2}else{u0=(u0&7)<<18|u1<<12|u2<<6|heap[idx++>>>0]&63}if(u0<65536){str+=String.fromCharCode(u0)}else{var ch=u0-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}}}return str}function UTF8ToString(ptr,maxBytesToRead){ptr>>>=0;return ptr?UTF8ArrayToString(GROWABLE_HEAP_U8(),ptr,maxBytesToRead):\"\"}function stringToUTF8Array(str,heap,outIdx,maxBytesToWrite){outIdx>>>=0;if(!(maxBytesToWrite>0))return 0;var startIdx=outIdx;var endIdx=outIdx+maxBytesToWrite-1;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343){var u1=str.charCodeAt(++i);u=65536+((u&1023)<<10)|u1&1023}if(u<=127){if(outIdx>=endIdx)break;heap[outIdx++>>>0]=u}else if(u<=2047){if(outIdx+1>=endIdx)break;heap[outIdx++>>>0]=192|u>>6;heap[outIdx++>>>0]=128|u&63}else if(u<=65535){if(outIdx+2>=endIdx)break;heap[outIdx++>>>0]=224|u>>12;heap[outIdx++>>>0]=128|u>>6&63;heap[outIdx++>>>0]=128|u&63}else{if(outIdx+3>=endIdx)break;heap[outIdx++>>>0]=240|u>>18;heap[outIdx++>>>0]=128|u>>12&63;heap[outIdx++>>>0]=128|u>>6&63;heap[outIdx++>>>0]=128|u&63}}heap[outIdx>>>0]=0;return outIdx-startIdx}function stringToUTF8(str,outPtr,maxBytesToWrite){return stringToUTF8Array(str,GROWABLE_HEAP_U8(),outPtr,maxBytesToWrite)}function lengthBytesUTF8(str){var len=0;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343)u=65536+((u&1023)<<10)|str.charCodeAt(++i)&1023;if(u<=127)++len;else if(u<=2047)len+=2;else if(u<=65535)len+=3;else len+=4}return len}var UTF16Decoder=typeof TextDecoder!==\"undefined\"?new TextDecoderWrapper(\"utf-16le\"):undefined;function UTF16ToString(ptr,maxBytesToRead){var endPtr=ptr;var idx=endPtr>>1;var maxIdx=idx+maxBytesToRead/2;while(!(idx>=maxIdx)&&GROWABLE_HEAP_U16()[idx>>>0])++idx;endPtr=idx<<1;if(endPtr-ptr>32&&UTF16Decoder){return UTF16Decoder.decode(GROWABLE_HEAP_U8().subarray(ptr>>>0,endPtr>>>0))}else{var str=\"\";for(var i=0;!(i>=maxBytesToRead/2);++i){var codeUnit=GROWABLE_HEAP_I16()[ptr+i*2>>>1];if(codeUnit==0)break;str+=String.fromCharCode(codeUnit)}return str}}function stringToUTF16(str,outPtr,maxBytesToWrite){if(maxBytesToWrite===undefined){maxBytesToWrite=2147483647}if(maxBytesToWrite<2)return 0;maxBytesToWrite-=2;var startPtr=outPtr;var numCharsToWrite=maxBytesToWrite<str.length*2?maxBytesToWrite/2:str.length;for(var i=0;i<numCharsToWrite;++i){var codeUnit=str.charCodeAt(i);GROWABLE_HEAP_I16()[outPtr>>>1]=codeUnit;outPtr+=2}GROWABLE_HEAP_I16()[outPtr>>>1]=0;return outPtr-startPtr}function lengthBytesUTF16(str){return str.length*2}function UTF32ToString(ptr,maxBytesToRead){var i=0;var str=\"\";while(!(i>=maxBytesToRead/4)){var utf32=GROWABLE_HEAP_I32()[ptr+i*4>>>2];if(utf32==0)break;++i;if(utf32>=65536){var ch=utf32-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}else{str+=String.fromCharCode(utf32)}}return str}function stringToUTF32(str,outPtr,maxBytesToWrite){outPtr>>>=0;if(maxBytesToWrite===undefined){maxBytesToWrite=2147483647}if(maxBytesToWrite<4)return 0;var startPtr=outPtr;var endPtr=startPtr+maxBytesToWrite-4;for(var i=0;i<str.length;++i){var codeUnit=str.charCodeAt(i);if(codeUnit>=55296&&codeUnit<=57343){var trailSurrogate=str.charCodeAt(++i);codeUnit=65536+((codeUnit&1023)<<10)|trailSurrogate&1023}GROWABLE_HEAP_I32()[outPtr>>>2]=codeUnit;outPtr+=4;if(outPtr+4>endPtr)break}GROWABLE_HEAP_I32()[outPtr>>>2]=0;return outPtr-startPtr}function lengthBytesUTF32(str){var len=0;for(var i=0;i<str.length;++i){var codeUnit=str.charCodeAt(i);if(codeUnit>=55296&&codeUnit<=57343)++i;len+=4}return len}function writeArrayToMemory(array,buffer){GROWABLE_HEAP_I8().set(array,buffer>>>0)}function writeAsciiToMemory(str,buffer,dontAddNull){for(var i=0;i<str.length;++i){GROWABLE_HEAP_I8()[buffer++>>>0]=str.charCodeAt(i)}if(!dontAddNull)GROWABLE_HEAP_I8()[buffer>>>0]=0}function alignUp(x,multiple){if(x%multiple>0){x+=multiple-x%multiple}return x}var buffer,HEAP8,HEAPU8,HEAP16,HEAPU16,HEAP32,HEAPU32,HEAPF32,HEAPF64;if(ENVIRONMENT_IS_PTHREAD){buffer=Module[\"buffer\"]}function updateGlobalBufferAndViews(buf){buffer=buf;Module[\"HEAP8\"]=HEAP8=new Int8Array(buf);Module[\"HEAP16\"]=HEAP16=new Int16Array(buf);Module[\"HEAP32\"]=HEAP32=new Int32Array(buf);Module[\"HEAPU8\"]=HEAPU8=new Uint8Array(buf);Module[\"HEAPU16\"]=HEAPU16=new Uint16Array(buf);Module[\"HEAPU32\"]=HEAPU32=new Uint32Array(buf);Module[\"HEAPF32\"]=HEAPF32=new Float32Array(buf);Module[\"HEAPF64\"]=HEAPF64=new Float64Array(buf)}var INITIAL_MEMORY=Module[\"INITIAL_MEMORY\"]||16777216;if(ENVIRONMENT_IS_PTHREAD){wasmMemory=Module[\"wasmMemory\"];buffer=Module[\"buffer\"]}else{if(Module[\"wasmMemory\"]){wasmMemory=Module[\"wasmMemory\"]}else{wasmMemory=new WebAssembly.Memory({\"initial\":INITIAL_MEMORY/65536,\"maximum\":4294967296/65536,\"shared\":true});if(!(wasmMemory.buffer instanceof SharedArrayBuffer)){err(\"requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag\");if(ENVIRONMENT_IS_NODE){console.log(\"(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and also use a recent version)\")}throw Error(\"bad memory\")}}}if(wasmMemory){buffer=wasmMemory.buffer}INITIAL_MEMORY=buffer.byteLength;updateGlobalBufferAndViews(buffer);var wasmTable;var __ATPRERUN__=[];var __ATINIT__=[];var __ATEXIT__=[];var __ATPOSTRUN__=[];var runtimeInitialized=false;var runtimeExited=false;var runtimeKeepaliveCounter=0;function keepRuntimeAlive(){return noExitRuntime||runtimeKeepaliveCounter>0}function preRun(){if(Module[\"preRun\"]){if(typeof Module[\"preRun\"]==\"function\")Module[\"preRun\"]=[Module[\"preRun\"]];while(Module[\"preRun\"].length){addOnPreRun(Module[\"preRun\"].shift())}}callRuntimeCallbacks(__ATPRERUN__)}function initRuntime(){runtimeInitialized=true;if(ENVIRONMENT_IS_PTHREAD)return;if(!Module[\"noFSInit\"]&&!FS.init.initialized)FS.init();FS.ignorePermissions=false;TTY.init();callRuntimeCallbacks(__ATINIT__)}function exitRuntime(){if(ENVIRONMENT_IS_PTHREAD)return;PThread.terminateAllThreads();runtimeExited=true}function postRun(){if(ENVIRONMENT_IS_PTHREAD)return;if(Module[\"postRun\"]){if(typeof Module[\"postRun\"]==\"function\")Module[\"postRun\"]=[Module[\"postRun\"]];while(Module[\"postRun\"].length){addOnPostRun(Module[\"postRun\"].shift())}}callRuntimeCallbacks(__ATPOSTRUN__)}function addOnPreRun(cb){__ATPRERUN__.unshift(cb)}function addOnInit(cb){__ATINIT__.unshift(cb)}function addOnPostRun(cb){__ATPOSTRUN__.unshift(cb)}var runDependencies=0;var runDependencyWatcher=null;var dependenciesFulfilled=null;function getUniqueRunDependency(id){return id}function addRunDependency(id){runDependencies++;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}}function removeRunDependency(id){runDependencies--;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}if(runDependencies==0){if(runDependencyWatcher!==null){clearInterval(runDependencyWatcher);runDependencyWatcher=null}if(dependenciesFulfilled){var callback=dependenciesFulfilled;dependenciesFulfilled=null;callback()}}}Module[\"preloadedImages\"]={};Module[\"preloadedAudios\"]={};function abort(what){if(ENVIRONMENT_IS_PTHREAD){postMessage({\"cmd\":\"onAbort\",\"arg\":what})}else{if(Module[\"onAbort\"]){Module[\"onAbort\"](what)}}what=\"Aborted(\"+what+\")\";err(what);ABORT=true;EXITSTATUS=1;what+=\". Build with -s ASSERTIONS=1 for more info.\";var e=new WebAssembly.RuntimeError(what);readyPromiseReject(e);throw e}var dataURIPrefix=\"data:application/octet-stream;base64,\";function isDataURI(filename){return filename.startsWith(dataURIPrefix)}var wasmBinaryFile;if(Module[\"locateFile\"]){wasmBinaryFile=\"scran.wasm\";if(!isDataURI(wasmBinaryFile)){wasmBinaryFile=locateFile(wasmBinaryFile)}}else{wasmBinaryFile=new URL(\"scran.wasm\",import.meta.url).toString()}function getBinary(file){try{if(file==wasmBinaryFile&&wasmBinary){return new Uint8Array(wasmBinary)}if(readBinary){return readBinary(file)}else{throw\"both async and sync fetching of the wasm failed\"}}catch(err){abort(err)}}function getBinaryPromise(){if(!wasmBinary&&(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER)){if(typeof fetch===\"function\"){return fetch(wasmBinaryFile,{credentials:\"same-origin\"}).then(function(response){if(!response[\"ok\"]){throw\"failed to load wasm binary file at '\"+wasmBinaryFile+\"'\"}return response[\"arrayBuffer\"]()}).catch(function(){return getBinary(wasmBinaryFile)})}}return Promise.resolve().then(function(){return getBinary(wasmBinaryFile)})}function createWasm(){var info={\"env\":asmLibraryArg,\"wasi_snapshot_preview1\":asmLibraryArg};function receiveInstance(instance,module){var exports=instance.exports;Module[\"asm\"]=exports;registerTlsInit(Module[\"asm\"][\"emscripten_tls_init\"]);wasmTable=Module[\"asm\"][\"__indirect_function_table\"];addOnInit(Module[\"asm\"][\"__wasm_call_ctors\"]);wasmModule=module;if(!ENVIRONMENT_IS_PTHREAD){var numWorkersToLoad=PThread.unusedWorkers.length;PThread.unusedWorkers.forEach(function(w){PThread.loadWasmModuleToWorker(w,function(){if(!--numWorkersToLoad)removeRunDependency(\"wasm-instantiate\")})})}}if(!ENVIRONMENT_IS_PTHREAD){addRunDependency(\"wasm-instantiate\")}function receiveInstantiationResult(result){receiveInstance(result[\"instance\"],result[\"module\"])}function instantiateArrayBuffer(receiver){return getBinaryPromise().then(function(binary){return WebAssembly.instantiate(binary,info)}).then(function(instance){return instance}).then(receiver,function(reason){err(\"failed to asynchronously prepare wasm: \"+reason);abort(reason)})}function instantiateAsync(){if(!wasmBinary&&typeof WebAssembly.instantiateStreaming===\"function\"&&!isDataURI(wasmBinaryFile)&&typeof fetch===\"function\"){return fetch(wasmBinaryFile,{credentials:\"same-origin\"}).then(function(response){var result=WebAssembly.instantiateStreaming(response,info);return result.then(receiveInstantiationResult,function(reason){err(\"wasm streaming compile failed: \"+reason);err(\"falling back to ArrayBuffer instantiation\");return instantiateArrayBuffer(receiveInstantiationResult)})})}else{return instantiateArrayBuffer(receiveInstantiationResult)}}if(Module[\"instantiateWasm\"]){try{var exports=Module[\"instantiateWasm\"](info,receiveInstance);return exports}catch(e){err(\"Module.instantiateWasm callback failed with error: \"+e);return false}}instantiateAsync().catch(readyPromiseReject);return{}}var tempDouble;var tempI64;var ASM_CONSTS={};function find_num_threads(){return Math.max(PThread.unusedWorkers.length,1)}function callRuntimeCallbacks(callbacks){while(callbacks.length>0){var callback=callbacks.shift();if(typeof callback==\"function\"){callback(Module);continue}var func=callback.func;if(typeof func===\"number\"){if(callback.arg===undefined){getWasmTableEntry(func)()}else{getWasmTableEntry(func)(callback.arg)}}else{func(callback.arg===undefined?null:callback.arg)}}}function withStackSave(f){var stack=stackSave();var ret=f();stackRestore(stack);return ret}function demangle(func){return func}function demangleAll(text){var regex=/\\b_Z[\\w\\d_]+/g;return text.replace(regex,function(x){var y=demangle(x);return x===y?x:y+\" [\"+x+\"]\"})}function killThread(pthread_ptr){GROWABLE_HEAP_I32()[pthread_ptr>>>2]=0;var pthread=PThread.pthreads[pthread_ptr];delete PThread.pthreads[pthread_ptr];pthread.worker.terminate();__emscripten_thread_free_data(pthread_ptr);PThread.runningWorkers.splice(PThread.runningWorkers.indexOf(pthread.worker),1);pthread.worker.pthread=undefined}function cancelThread(pthread_ptr){var pthread=PThread.pthreads[pthread_ptr];pthread.worker.postMessage({\"cmd\":\"cancel\"})}function cleanupThread(pthread_ptr){var pthread=PThread.pthreads[pthread_ptr];if(pthread){GROWABLE_HEAP_I32()[pthread_ptr>>>2]=0;var worker=pthread.worker;PThread.returnWorkerToPool(worker)}}function zeroMemory(address,size){GROWABLE_HEAP_U8().fill(0,address,address+size)}function _exit(status){exit(status)}function handleException(e){if(e instanceof ExitStatus||e==\"unwind\"){return EXITSTATUS}quit_(1,e)}var PThread={unusedWorkers:[],runningWorkers:[],tlsInitFunctions:[],initMainThread:function(){var pthreadPoolSize=Module.scran_custom_nthreads;for(var i=0;i<pthreadPoolSize;++i){PThread.allocateUnusedWorker()}},initWorker:function(){},pthreads:{},setExitStatus:function(status){EXITSTATUS=status},terminateAllThreads:function(){for(var t in PThread.pthreads){var pthread=PThread.pthreads[t];if(pthread&&pthread.worker){PThread.returnWorkerToPool(pthread.worker)}}for(var i=0;i<PThread.unusedWorkers.length;++i){var worker=PThread.unusedWorkers[i];worker.terminate()}PThread.unusedWorkers=[]},returnWorkerToPool:function(worker){PThread.runWithoutMainThreadQueuedCalls(function(){delete PThread.pthreads[worker.pthread.threadInfoStruct];PThread.unusedWorkers.push(worker);PThread.runningWorkers.splice(PThread.runningWorkers.indexOf(worker),1);__emscripten_thread_free_data(worker.pthread.threadInfoStruct);worker.pthread=undefined})},runWithoutMainThreadQueuedCalls:function(func){GROWABLE_HEAP_I32()[__emscripten_allow_main_runtime_queued_calls>>>2]=0;try{func()}finally{GROWABLE_HEAP_I32()[__emscripten_allow_main_runtime_queued_calls>>>2]=1}},receiveObjectTransfer:function(data){},threadInit:function(){for(var i in PThread.tlsInitFunctions){PThread.tlsInitFunctions[i]()}},loadWasmModuleToWorker:function(worker,onFinishedLoading){worker.onmessage=(e=>{var d=e[\"data\"];var cmd=d[\"cmd\"];if(worker.pthread)PThread.currentProxiedOperationCallerThread=worker.pthread.threadInfoStruct;if(d[\"targetThread\"]&&d[\"targetThread\"]!=_pthread_self()){var thread=PThread.pthreads[d.targetThread];if(thread){thread.worker.postMessage(d,d[\"transferList\"])}else{err('Internal error! Worker sent a message \"'+cmd+'\" to target pthread '+d[\"targetThread\"]+\", but that thread no longer exists!\")}PThread.currentProxiedOperationCallerThread=undefined;return}if(cmd===\"processQueuedMainThreadWork\"){_emscripten_main_thread_process_queued_calls()}else if(cmd===\"spawnThread\"){spawnThread(d)}else if(cmd===\"cleanupThread\"){cleanupThread(d[\"thread\"])}else if(cmd===\"killThread\"){killThread(d[\"thread\"])}else if(cmd===\"cancelThread\"){cancelThread(d[\"thread\"])}else if(cmd===\"loaded\"){worker.loaded=true;if(onFinishedLoading)onFinishedLoading(worker);if(worker.runPthread){worker.runPthread();delete worker.runPthread}}else if(cmd===\"print\"){out(\"Thread \"+d[\"threadId\"]+\": \"+d[\"text\"])}else if(cmd===\"printErr\"){err(\"Thread \"+d[\"threadId\"]+\": \"+d[\"text\"])}else if(cmd===\"alert\"){alert(\"Thread \"+d[\"threadId\"]+\": \"+d[\"text\"])}else if(d.target===\"setimmediate\"){worker.postMessage(d)}else if(cmd===\"onAbort\"){if(Module[\"onAbort\"]){Module[\"onAbort\"](d[\"arg\"])}}else{err(\"worker sent an unknown command \"+cmd)}PThread.currentProxiedOperationCallerThread=undefined});worker.onerror=(e=>{var message=\"worker sent an error!\";err(message+\" \"+e.filename+\":\"+e.lineno+\": \"+e.message);throw e});worker.postMessage({\"cmd\":\"load\",\"urlOrBlob\":Module[\"mainScriptUrlOrBlob\"],\"wasmMemory\":wasmMemory,\"wasmModule\":wasmModule})},allocateUnusedWorker:function(){if(!Module[\"locateFile\"]){PThread.unusedWorkers.push(new Worker(new URL(\"scran.worker.js\",import.meta.url)));return}var pthreadMainJs=locateFile(\"scran.worker.js\");PThread.unusedWorkers.push(new Worker(pthreadMainJs))},getNewWorker:function(){if(PThread.unusedWorkers.length==0){PThread.allocateUnusedWorker();PThread.loadWasmModuleToWorker(PThread.unusedWorkers[0])}return PThread.unusedWorkers.pop()}};function establishStackSpace(){var pthread_ptr=_pthread_self();var stackTop=GROWABLE_HEAP_I32()[pthread_ptr+44>>>2];var stackSize=GROWABLE_HEAP_I32()[pthread_ptr+48>>>2];var stackMax=stackTop-stackSize;_emscripten_stack_set_limits(stackTop,stackMax);stackRestore(stackTop)}Module[\"establishStackSpace\"]=establishStackSpace;function exitOnMainThread(returnCode){if(ENVIRONMENT_IS_PTHREAD)return _emscripten_proxy_to_main_thread_js(1,0,returnCode);try{_exit(returnCode)}catch(e){handleException(e)}}var wasmTableMirror=[];function getWasmTableEntry(funcPtr){var func=wasmTableMirror[funcPtr];if(!func){if(funcPtr>=wasmTableMirror.length)wasmTableMirror.length=funcPtr+1;wasmTableMirror[funcPtr]=func=wasmTable.get(funcPtr)}return func}function invokeEntryPoint(ptr,arg){return getWasmTableEntry(ptr)(arg)}Module[\"invokeEntryPoint\"]=invokeEntryPoint;function jsStackTrace(){var error=new Error;if(!error.stack){try{throw new Error}catch(e){error=e}if(!error.stack){return\"(no stack trace available)\"}}return error.stack.toString()}function registerTlsInit(tlsInitFunc,moduleExports,metadata){PThread.tlsInitFunctions.push(tlsInitFunc)}function setWasmTableEntry(idx,func){wasmTable.set(idx,func);wasmTableMirror[idx]=func}function ___assert_fail(condition,filename,line,func){abort(\"Assertion failed: \"+UTF8ToString(condition)+\", at: \"+[filename?UTF8ToString(filename):\"unknown filename\",line,func?UTF8ToString(func):\"unknown function\"])}var _emscripten_get_now;if(ENVIRONMENT_IS_PTHREAD){_emscripten_get_now=(()=>performance.now()-Module[\"__performance_now_clock_drift\"])}else _emscripten_get_now=(()=>performance.now());var _emscripten_get_now_is_monotonic=true;function setErrNo(value){GROWABLE_HEAP_I32()[___errno_location()>>>2]=value;return value}function _clock_gettime(clk_id,tp){var now;if(clk_id===0){now=Date.now()}else if((clk_id===1||clk_id===4)&&_emscripten_get_now_is_monotonic){now=_emscripten_get_now()}else{setErrNo(28);return-1}GROWABLE_HEAP_I32()[tp>>>2]=now/1e3|0;GROWABLE_HEAP_I32()[tp+4>>>2]=now%1e3*1e3*1e3|0;return 0}function ___clock_gettime(a0,a1){return _clock_gettime(a0,a1)}function ___cxa_allocate_exception(size){return _malloc(size+16)+16}function ExceptionInfo(excPtr){this.excPtr=excPtr;this.ptr=excPtr-16;this.set_type=function(type){GROWABLE_HEAP_I32()[this.ptr+4>>>2]=type};this.get_type=function(){return GROWABLE_HEAP_I32()[this.ptr+4>>>2]};this.set_destructor=function(destructor){GROWABLE_HEAP_I32()[this.ptr+8>>>2]=destructor};this.get_destructor=function(){return GROWABLE_HEAP_I32()[this.ptr+8>>>2]};this.set_refcount=function(refcount){GROWABLE_HEAP_I32()[this.ptr>>>2]=refcount};this.set_caught=function(caught){caught=caught?1:0;GROWABLE_HEAP_I8()[this.ptr+12>>>0]=caught};this.get_caught=function(){return GROWABLE_HEAP_I8()[this.ptr+12>>>0]!=0};this.set_rethrown=function(rethrown){rethrown=rethrown?1:0;GROWABLE_HEAP_I8()[this.ptr+13>>>0]=rethrown};this.get_rethrown=function(){return GROWABLE_HEAP_I8()[this.ptr+13>>>0]!=0};this.init=function(type,destructor){this.set_type(type);this.set_destructor(destructor);this.set_refcount(0);this.set_caught(false);this.set_rethrown(false)};this.add_ref=function(){Atomics.add(GROWABLE_HEAP_I32(),this.ptr+0>>2,1)};this.release_ref=function(){var prev=Atomics.sub(GROWABLE_HEAP_I32(),this.ptr+0>>2,1);return prev===1}}var exceptionLast=0;var uncaughtExceptionCount=0;function ___cxa_throw(ptr,type,destructor){var info=new ExceptionInfo(ptr);info.init(type,destructor);exceptionLast=ptr;uncaughtExceptionCount++;throw ptr}function ___emscripten_init_main_thread_js(tb){__emscripten_thread_init(tb,!ENVIRONMENT_IS_WORKER,1,!ENVIRONMENT_IS_WEB);PThread.threadInit()}function ___emscripten_thread_cleanup(thread){if(!ENVIRONMENT_IS_PTHREAD)cleanupThread(thread);else postMessage({\"cmd\":\"cleanupThread\",\"thread\":thread})}function spawnThread(threadParams){var worker=PThread.getNewWorker();if(!worker){return 6}PThread.runningWorkers.push(worker);var pthread=PThread.pthreads[threadParams.pthread_ptr]={worker:worker,threadInfoStruct:threadParams.pthread_ptr};worker.pthread=pthread;var msg={\"cmd\":\"run\",\"start_routine\":threadParams.startRoutine,\"arg\":threadParams.arg,\"threadInfoStruct\":threadParams.pthread_ptr};worker.runPthread=(()=>{msg.time=performance.now();worker.postMessage(msg,threadParams.transferList)});if(worker.loaded){worker.runPthread();delete worker.runPthread}return 0}function ___pthread_create_js(pthread_ptr,attr,start_routine,arg){if(typeof SharedArrayBuffer===\"undefined\"){err(\"Current environment does not support SharedArrayBuffer, pthreads are not available!\");return 6}var transferList=[];var error=0;if(ENVIRONMENT_IS_PTHREAD&&(transferList.length===0||error)){return _emscripten_sync_run_in_main_thread_4(687865856,pthread_ptr,attr,start_routine,arg)}if(error)return error;var threadParams={startRoutine:start_routine,pthread_ptr:pthread_ptr,arg:arg,transferList:transferList};if(ENVIRONMENT_IS_PTHREAD){threadParams.cmd=\"spawnThread\";postMessage(threadParams,transferList);return 0}return spawnThread(threadParams)}var PATH={splitPath:function(filename){var splitPathRe=/^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;return splitPathRe.exec(filename).slice(1)},normalizeArray:function(parts,allowAboveRoot){var up=0;for(var i=parts.length-1;i>=0;i--){var last=parts[i];if(last===\".\"){parts.splice(i,1)}else if(last===\"..\"){parts.splice(i,1);up++}else if(up){parts.splice(i,1);up--}}if(allowAboveRoot){for(;up;up--){parts.unshift(\"..\")}}return parts},normalize:function(path){var isAbsolute=path.charAt(0)===\"/\",trailingSlash=path.substr(-1)===\"/\";path=PATH.normalizeArray(path.split(\"/\").filter(function(p){return!!p}),!isAbsolute).join(\"/\");if(!path&&!isAbsolute){path=\".\"}if(path&&trailingSlash){path+=\"/\"}return(isAbsolute?\"/\":\"\")+path},dirname:function(path){var result=PATH.splitPath(path),root=result[0],dir=result[1];if(!root&&!dir){return\".\"}if(dir){dir=dir.substr(0,dir.length-1)}return root+dir},basename:function(path){if(path===\"/\")return\"/\";path=PATH.normalize(path);path=path.replace(/\\/$/,\"\");var lastSlash=path.lastIndexOf(\"/\");if(lastSlash===-1)return path;return path.substr(lastSlash+1)},extname:function(path){return PATH.splitPath(path)[3]},join:function(){var paths=Array.prototype.slice.call(arguments,0);return PATH.normalize(paths.join(\"/\"))},join2:function(l,r){return PATH.normalize(l+\"/\"+r)}};function getRandomDevice(){if(typeof crypto===\"object\"&&typeof crypto[\"getRandomValues\"]===\"function\"){var randomBuffer=new Uint8Array(1);return function(){crypto.getRandomValues(randomBuffer);return randomBuffer[0]}}else return function(){abort(\"randomDevice\")}}var PATH_FS={resolve:function(){var resolvedPath=\"\",resolvedAbsolute=false;for(var i=arguments.length-1;i>=-1&&!resolvedAbsolute;i--){var path=i>=0?arguments[i]:FS.cwd();if(typeof path!==\"string\"){throw new TypeError(\"Arguments to path.resolve must be strings\")}else if(!path){return\"\"}resolvedPath=path+\"/\"+resolvedPath;resolvedAbsolute=path.charAt(0)===\"/\"}resolvedPath=PATH.normalizeArray(resolvedPath.split(\"/\").filter(function(p){return!!p}),!resolvedAbsolute).join(\"/\");return(resolvedAbsolute?\"/\":\"\")+resolvedPath||\".\"},relative:function(from,to){from=PATH_FS.resolve(from).substr(1);to=PATH_FS.resolve(to).substr(1);function trim(arr){var start=0;for(;start<arr.length;start++){if(arr[start]!==\"\")break}var end=arr.length-1;for(;end>=0;end--){if(arr[end]!==\"\")break}if(start>end)return[];return arr.slice(start,end-start+1)}var fromParts=trim(from.split(\"/\"));var toParts=trim(to.split(\"/\"));var length=Math.min(fromParts.length,toParts.length);var samePartsLength=length;for(var i=0;i<length;i++){if(fromParts[i]!==toParts[i]){samePartsLength=i;break}}var outputParts=[];for(var i=samePartsLength;i<fromParts.length;i++){outputParts.push(\"..\")}outputParts=outputParts.concat(toParts.slice(samePartsLength));return outputParts.join(\"/\")}};var TTY={ttys:[],init:function(){},shutdown:function(){},register:function(dev,ops){TTY.ttys[dev]={input:[],output:[],ops:ops};FS.registerDevice(dev,TTY.stream_ops)},stream_ops:{open:function(stream){var tty=TTY.ttys[stream.node.rdev];if(!tty){throw new FS.ErrnoError(43)}stream.tty=tty;stream.seekable=false},close:function(stream){stream.tty.ops.flush(stream.tty)},flush:function(stream){stream.tty.ops.flush(stream.tty)},read:function(stream,buffer,offset,length,pos){if(!stream.tty||!stream.tty.ops.get_char){throw new FS.ErrnoError(60)}var bytesRead=0;for(var i=0;i<length;i++){var result;try{result=stream.tty.ops.get_char(stream.tty)}catch(e){throw new FS.ErrnoError(29)}if(result===undefined&&bytesRead===0){throw new FS.ErrnoError(6)}if(result===null||result===undefined)break;bytesRead++;buffer[offset+i]=result}if(bytesRead){stream.node.timestamp=Date.now()}return bytesRead},write:function(stream,buffer,offset,length,pos){if(!stream.tty||!stream.tty.ops.put_char){throw new FS.ErrnoError(60)}try{for(var i=0;i<length;i++){stream.tty.ops.put_char(stream.tty,buffer[offset+i])}}catch(e){throw new FS.ErrnoError(29)}if(length){stream.node.timestamp=Date.now()}return i}},default_tty_ops:{get_char:function(tty){if(!tty.input.length){var result=null;if(typeof window!=\"undefined\"&&typeof window.prompt==\"function\"){result=window.prompt(\"Input: \");if(result!==null){result+=\"\\n\"}}else if(typeof readline==\"function\"){result=readline();if(result!==null){result+=\"\\n\"}}if(!result){return null}tty.input=intArrayFromString(result,true)}return tty.input.shift()},put_char:function(tty,val){if(val===null||val===10){out(UTF8ArrayToString(tty.output,0));tty.output=[]}else{if(val!=0)tty.output.push(val)}},flush:function(tty){if(tty.output&&tty.output.length>0){out(UTF8ArrayToString(tty.output,0));tty.output=[]}}},default_tty1_ops:{put_char:function(tty,val){if(val===null||val===10){err(UTF8ArrayToString(tty.output,0));tty.output=[]}else{if(val!=0)tty.output.push(val)}},flush:function(tty){if(tty.output&&tty.output.length>0){err(UTF8ArrayToString(tty.output,0));tty.output=[]}}}};function alignMemory(size,alignment){return Math.ceil(size/alignment)*alignment}function mmapAlloc(size){size=alignMemory(size,65536);var ptr=_memalign(65536,size);if(!ptr)return 0;zeroMemory(ptr,size);return ptr}var MEMFS={ops_table:null,mount:function(mount){return MEMFS.createNode(null,\"/\",16384|511,0)},createNode:function(parent,name,mode,dev){if(FS.isBlkdev(mode)||FS.isFIFO(mode)){throw new FS.ErrnoError(63)}if(!MEMFS.ops_table){MEMFS.ops_table={dir:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr,lookup:MEMFS.node_ops.lookup,mknod:MEMFS.node_ops.mknod,rename:MEMFS.node_ops.rename,unlink:MEMFS.node_ops.unlink,rmdir:MEMFS.node_ops.rmdir,readdir:MEMFS.node_ops.readdir,symlink:MEMFS.node_ops.symlink},stream:{llseek:MEMFS.stream_ops.llseek}},file:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr},stream:{llseek:MEMFS.stream_ops.llseek,read:MEMFS.stream_ops.read,write:MEMFS.stream_ops.write,allocate:MEMFS.stream_ops.allocate,mmap:MEMFS.stream_ops.mmap,msync:MEMFS.stream_ops.msync}},link:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr,readlink:MEMFS.node_ops.readlink},stream:{}},chrdev:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr},stream:FS.chrdev_stream_ops}}}var node=FS.createNode(parent,name,mode,dev);if(FS.isDir(node.mode)){node.node_ops=MEMFS.ops_table.dir.node;node.stream_ops=MEMFS.ops_table.dir.stream;node.contents={}}else if(FS.isFile(node.mode)){node.node_ops=MEMFS.ops_table.file.node;node.stream_ops=MEMFS.ops_table.file.stream;node.usedBytes=0;node.contents=null}else if(FS.isLink(node.mode)){node.node_ops=MEMFS.ops_table.link.node;node.stream_ops=MEMFS.ops_table.link.stream}else if(FS.isChrdev(node.mode)){node.node_ops=MEMFS.ops_table.chrdev.node;node.stream_ops=MEMFS.ops_table.chrdev.stream}node.timestamp=Date.now();if(parent){parent.contents[name]=node;parent.timestamp=node.timestamp}return node},getFileDataAsTypedArray:function(node){if(!node.contents)return new Uint8Array(0);if(node.contents.subarray)return node.contents.subarray(0,node.usedBytes);return new Uint8Array(node.contents)},expandFileStorage:function(node,newCapacity){newCapacity>>>=0;var prevCapacity=node.contents?node.contents.length:0;if(prevCapacity>=newCapacity)return;var CAPACITY_DOUBLING_MAX=1024*1024;newCapacity=Math.max(newCapacity,prevCapacity*(prevCapacity<CAPACITY_DOUBLING_MAX?2:1.125)>>>0);if(prevCapacity!=0)newCapacity=Math.max(newCapacity,256);var oldContents=node.contents;node.contents=new Uint8Array(newCapacity);if(node.usedBytes>0)node.contents.set(oldContents.subarray(0,node.usedBytes),0)},resizeFileStorage:function(node,newSize){newSize>>>=0;if(node.usedBytes==newSize)return;if(newSize==0){node.contents=null;node.usedBytes=0}else{var oldContents=node.contents;node.contents=new Uint8Array(newSize);if(oldContents){node.contents.set(oldContents.subarray(0,Math.min(newSize,node.usedBytes)))}node.usedBytes=newSize}},node_ops:{getattr:function(node){var attr={};attr.dev=FS.isChrdev(node.mode)?node.id:1;attr.ino=node.id;attr.mode=node.mode;attr.nlink=1;attr.uid=0;attr.gid=0;attr.rdev=node.rdev;if(FS.isDir(node.mode)){attr.size=4096}else if(FS.isFile(node.mode)){attr.size=node.usedBytes}else if(FS.isLink(node.mode)){attr.size=node.link.length}else{attr.size=0}attr.atime=new Date(node.timestamp);attr.mtime=new Date(node.timestamp);attr.ctime=new Date(node.timestamp);attr.blksize=4096;attr.blocks=Math.ceil(attr.size/attr.blksize);return attr},setattr:function(node,attr){if(attr.mode!==undefined){node.mode=attr.mode}if(attr.timestamp!==undefined){node.timestamp=attr.timestamp}if(attr.size!==undefined){MEMFS.resizeFileStorage(node,attr.size)}},lookup:function(parent,name){throw FS.genericErrors[44]},mknod:function(parent,name,mode,dev){return MEMFS.createNode(parent,name,mode,dev)},rename:function(old_node,new_dir,new_name){if(FS.isDir(old_node.mode)){var new_node;try{new_node=FS.lookupNode(new_dir,new_name)}catch(e){}if(new_node){for(var i in new_node.contents){throw new FS.ErrnoError(55)}}}delete old_node.parent.contents[old_node.name];old_node.parent.timestamp=Date.now();old_node.name=new_name;new_dir.contents[new_name]=old_node;new_dir.timestamp=old_node.parent.timestamp;old_node.parent=new_dir},unlink:function(parent,name){delete parent.contents[name];parent.timestamp=Date.now()},rmdir:function(parent,name){var node=FS.lookupNode(parent,name);for(var i in node.contents){throw new FS.ErrnoError(55)}delete parent.contents[name];parent.timestamp=Date.now()},readdir:function(node){var entries=[\".\",\"..\"];for(var key in node.contents){if(!node.contents.hasOwnProperty(key)){continue}entries.push(key)}return entries},symlink:function(parent,newname,oldpath){var node=MEMFS.createNode(parent,newname,511|40960,0);node.link=oldpath;return node},readlink:function(node){if(!FS.isLink(node.mode)){throw new FS.ErrnoError(28)}return node.link}},stream_ops:{read:function(stream,buffer,offset,length,position){var contents=stream.node.contents;if(position>=stream.node.usedBytes)return 0;var size=Math.min(stream.node.usedBytes-position,length);if(size>8&&contents.subarray){buffer.set(contents.subarray(position,position+size),offset)}else{for(var i=0;i<size;i++)buffer[offset+i]=contents[position+i]}return size},write:function(stream,buffer,offset,length,position,canOwn){if(buffer.buffer===GROWABLE_HEAP_I8().buffer){canOwn=false}if(!length)return 0;var node=stream.node;node.timestamp=Date.now();if(buffer.subarray&&(!node.contents||node.contents.subarray)){if(canOwn){node.contents=buffer.subarray(offset,offset+length);node.usedBytes=length;return length}else if(node.usedBytes===0&&position===0){node.contents=buffer.slice(offset,offset+length);node.usedBytes=length;return length}else if(position+length<=node.usedBytes){node.contents.set(buffer.subarray(offset,offset+length),position);return length}}MEMFS.expandFileStorage(node,position+length);if(node.contents.subarray&&buffer.subarray){node.contents.set(buffer.subarray(offset,offset+length),position)}else{for(var i=0;i<length;i++){node.contents[position+i]=buffer[offset+i]}}node.usedBytes=Math.max(node.usedBytes,position+length);return length},llseek:function(stream,offset,whence){var position=offset;if(whence===1){position+=stream.position}else if(whence===2){if(FS.isFile(stream.node.mode)){position+=stream.node.usedBytes}}if(position<0){throw new FS.ErrnoError(28)}return position},allocate:function(stream,offset,length){MEMFS.expandFileStorage(stream.node,offset+length);stream.node.usedBytes=Math.max(stream.node.usedBytes,offset+length)},mmap:function(stream,address,length,position,prot,flags){if(address!==0){throw new FS.ErrnoError(28)}if(!FS.isFile(stream.node.mode)){throw new FS.ErrnoError(43)}var ptr;var allocated;var contents=stream.node.contents;if(!(flags&2)&&contents.buffer===buffer){allocated=false;ptr=contents.byteOffset}else{if(position>0||position+length<contents.length){if(contents.subarray){contents=contents.subarray(position,position+length)}else{contents=Array.prototype.slice.call(contents,position,position+length)}}allocated=true;ptr=mmapAlloc(length);if(!ptr){throw new FS.ErrnoError(48)}ptr>>>=0;GROWABLE_HEAP_I8().set(contents,ptr>>>0)}return{ptr:ptr,allocated:allocated}},msync:function(stream,buffer,offset,length,mmapFlags){if(!FS.isFile(stream.node.mode)){throw new FS.ErrnoError(43)}if(mmapFlags&2){return 0}var bytesWritten=MEMFS.stream_ops.write(stream,buffer,0,length,offset,false);return 0}}};function asyncLoad(url,onload,onerror,noRunDep){var dep=!noRunDep?getUniqueRunDependency(\"al \"+url):\"\";readAsync(url,function(arrayBuffer){assert(arrayBuffer,'Loading data file \"'+url+'\" failed (no arrayBuffer).');onload(new Uint8Array(arrayBuffer));if(dep)removeRunDependency(dep)},function(event){if(onerror){onerror()}else{throw'Loading data file \"'+url+'\" failed.'}});if(dep)addRunDependency(dep)}var FS={root:null,mounts:[],devices:{},streams:[],nextInode:1,nameTable:null,currentPath:\"/\",initialized:false,ignorePermissions:true,ErrnoError:null,genericErrors:{},filesystems:null,syncFSRequests:0,lookupPath:function(path,opts={}){path=PATH_FS.resolve(FS.cwd(),path);if(!path)return{path:\"\",node:null};var defaults={follow_mount:true,recurse_count:0};for(var key in defaults){if(opts[key]===undefined){opts[key]=defaults[key]}}if(opts.recurse_count>8){throw new FS.ErrnoError(32)}var parts=PATH.normalizeArray(path.split(\"/\").filter(function(p){return!!p}),false);var current=FS.root;var current_path=\"/\";for(var i=0;i<parts.length;i++){var islast=i===parts.length-1;if(islast&&opts.parent){break}current=FS.lookupNode(current,parts[i]);current_path=PATH.join2(current_path,parts[i]);if(FS.isMountpoint(current)){if(!islast||islast&&opts.follow_mount){current=current.mounted.root}}if(!islast||opts.follow){var count=0;while(FS.isLink(current.mode)){var link=FS.readlink(current_path);current_path=PATH_FS.resolve(PATH.dirname(current_path),link);var lookup=FS.lookupPath(current_path,{recurse_count:opts.recurse_count});current=lookup.node;if(count++>40){throw new FS.ErrnoError(32)}}}}return{path:current_path,node:current}},getPath:function(node){var path;while(true){if(FS.isRoot(node)){var mount=node.mount.mountpoint;if(!path)return mount;return mount[mount.length-1]!==\"/\"?mount+\"/\"+path:mount+path}path=path?node.name+\"/\"+path:node.name;node=node.parent}},hashName:function(parentid,name){var hash=0;for(var i=0;i<name.length;i++){hash=(hash<<5)-hash+name.charCodeAt(i)|0}return(parentid+hash>>>0)%FS.nameTable.length},hashAddNode:function(node){var hash=FS.hashName(node.parent.id,node.name);node.name_next=FS.nameTable[hash];FS.nameTable[hash]=node},hashRemoveNode:function(node){var hash=FS.hashName(node.parent.id,node.name);if(FS.nameTable[hash]===node){FS.nameTable[hash]=node.name_next}else{var current=FS.nameTable[hash];while(current){if(current.name_next===node){current.name_next=node.name_next;break}current=current.name_next}}},lookupNode:function(parent,name){var errCode=FS.mayLookup(parent);if(errCode){throw new FS.ErrnoError(errCode,parent)}var hash=FS.hashName(parent.id,name);for(var node=FS.nameTable[hash];node;node=node.name_next){var nodeName=node.name;if(node.parent.id===parent.id&&nodeName===name){return node}}return FS.lookup(parent,name)},createNode:function(parent,name,mode,rdev){var node=new FS.FSNode(parent,name,mode,rdev);FS.hashAddNode(node);return node},destroyNode:function(node){FS.hashRemoveNode(node)},isRoot:function(node){return node===node.parent},isMountpoint:function(node){return!!node.mounted},isFile:function(mode){return(mode&61440)===32768},isDir:function(mode){return(mode&61440)===16384},isLink:function(mode){return(mode&61440)===40960},isChrdev:function(mode){return(mode&61440)===8192},isBlkdev:function(mode){return(mode&61440)===24576},isFIFO:function(mode){return(mode&61440)===4096},isSocket:function(mode){return(mode&49152)===49152},flagModes:{\"r\":0,\"r+\":2,\"w\":577,\"w+\":578,\"a\":1089,\"a+\":1090},modeStringToFlags:function(str){var flags=FS.flagModes[str];if(typeof flags===\"undefined\"){throw new Error(\"Unknown file open mode: \"+str)}return flags},flagsToPermissionString:function(flag){var perms=[\"r\",\"w\",\"rw\"][flag&3];if(flag&512){perms+=\"w\"}return perms},nodePermissions:function(node,perms){if(FS.ignorePermissions){return 0}if(perms.includes(\"r\")&&!(node.mode&292)){return 2}else if(perms.includes(\"w\")&&!(node.mode&146)){return 2}else if(perms.includes(\"x\")&&!(node.mode&73)){return 2}return 0},mayLookup:function(dir){var errCode=FS.nodePermissions(dir,\"x\");if(errCode)return errCode;if(!dir.node_ops.lookup)return 2;return 0},mayCreate:function(dir,name){try{var node=FS.lookupNode(dir,name);return 20}catch(e){}return FS.nodePermissions(dir,\"wx\")},mayDelete:function(dir,name,isdir){var node;try{node=FS.lookupNode(dir,name)}catch(e){return e.errno}var errCode=FS.nodePermissions(dir,\"wx\");if(errCode){return errCode}if(isdir){if(!FS.isDir(node.mode)){return 54}if(FS.isRoot(node)||FS.getPath(node)===FS.cwd()){return 10}}else{if(FS.isDir(node.mode)){return 31}}return 0},mayOpen:function(node,flags){if(!node){return 44}if(FS.isLink(node.mode)){return 32}else if(FS.isDir(node.mode)){if(FS.flagsToPermissionString(flags)!==\"r\"||flags&512){return 31}}return FS.nodePermissions(node,FS.flagsToPermissionString(flags))},MAX_OPEN_FDS:4096,nextfd:function(fd_start=0,fd_end=FS.MAX_OPEN_FDS){for(var fd=fd_start;fd<=fd_end;fd++){if(!FS.streams[fd]){return fd}}throw new FS.ErrnoError(33)},getStream:function(fd){return FS.streams[fd]},createStream:function(stream,fd_start,fd_end){if(!FS.FSStream){FS.FSStream=function(){};FS.FSStream.prototype={object:{get:function(){return this.node},set:function(val){this.node=val}},isRead:{get:function(){return(this.flags&2097155)!==1}},isWrite:{get:function(){return(this.flags&2097155)!==0}},isAppend:{get:function(){return this.flags&1024}}}}var newStream=new FS.FSStream;for(var p in stream){newStream[p]=stream[p]}stream=newStream;var fd=FS.nextfd(fd_start,fd_end);stream.fd=fd;FS.streams[fd]=stream;return stream},closeStream:function(fd){FS.streams[fd]=null},chrdev_stream_ops:{open:function(stream){var device=FS.getDevice(stream.node.rdev);stream.stream_ops=device.stream_ops;if(stream.stream_ops.open){stream.stream_ops.open(stream)}},llseek:function(){throw new FS.ErrnoError(70)}},major:function(dev){return dev>>8},minor:function(dev){return dev&255},makedev:function(ma,mi){return ma<<8|mi},registerDevice:function(dev,ops){FS.devices[dev]={stream_ops:ops}},getDevice:function(dev){return FS.devices[dev]},getMounts:function(mount){var mounts=[];var check=[mount];while(check.length){var m=check.pop();mounts.push(m);check.push.apply(check,m.mounts)}return mounts},syncfs:function(populate,callback){if(typeof populate===\"function\"){callback=populate;populate=false}FS.syncFSRequests++;if(FS.syncFSRequests>1){err(\"warning: \"+FS.syncFSRequests+\" FS.syncfs operations in flight at once, probably just doing extra work\")}var mounts=FS.getMounts(FS.root.mount);var completed=0;function doCallback(errCode){FS.syncFSRequests--;return callback(errCode)}function done(errCode){if(errCode){if(!done.errored){done.errored=true;return doCallback(errCode)}return}if(++completed>=mounts.length){doCallback(null)}}mounts.forEach(function(mount){if(!mount.type.syncfs){return done(null)}mount.type.syncfs(mount,populate,done)})},mount:function(type,opts,mountpoint){var root=mountpoint===\"/\";var pseudo=!mountpoint;var node;if(root&&FS.root){throw new FS.ErrnoError(10)}else if(!root&&!pseudo){var lookup=FS.lookupPath(mountpoint,{follow_mount:false});mountpoint=lookup.path;node=lookup.node;if(FS.isMountpoint(node)){throw new FS.ErrnoError(10)}if(!FS.isDir(node.mode)){throw new FS.ErrnoError(54)}}var mount={type:type,opts:opts,mountpoint:mountpoint,mounts:[]};var mountRoot=type.mount(mount);mountRoot.mount=mount;mount.root=mountRoot;if(root){FS.root=mountRoot}else if(node){node.mounted=mount;if(node.mount){node.mount.mounts.push(mount)}}return mountRoot},unmount:function(mountpoint){var lookup=FS.lookupPath(mountpoint,{follow_mount:false});if(!FS.isMountpoint(lookup.node)){throw new FS.ErrnoError(28)}var node=lookup.node;var mount=node.mounted;var mounts=FS.getMounts(mount);Object.keys(FS.nameTable).forEach(function(hash){var current=FS.nameTable[hash];while(current){var next=current.name_next;if(mounts.includes(current.mount)){FS.destroyNode(current)}current=next}});node.mounted=null;var idx=node.mount.mounts.indexOf(mount);node.mount.mounts.splice(idx,1)},lookup:function(parent,name){return parent.node_ops.lookup(parent,name)},mknod:function(path,mode,dev){var lookup=FS.lookupPath(path,{parent:true});var parent=lookup.node;var name=PATH.basename(path);if(!name||name===\".\"||name===\"..\"){throw new FS.ErrnoError(28)}var errCode=FS.mayCreate(parent,name);if(errCode){throw new FS.ErrnoError(errCode)}if(!parent.node_ops.mknod){throw new FS.ErrnoError(63)}return parent.node_ops.mknod(parent,name,mode,dev)},create:function(path,mode){mode=mode!==undefined?mode:438;mode&=4095;mode|=32768;return FS.mknod(path,mode,0)},mkdir:function(path,mode){mode=mode!==undefined?mode:511;mode&=511|512;mode|=16384;return FS.mknod(path,mode,0)},mkdirTree:function(path,mode){var dirs=path.split(\"/\");var d=\"\";for(var i=0;i<dirs.length;++i){if(!dirs[i])continue;d+=\"/\"+dirs[i];try{FS.mkdir(d,mode)}catch(e){if(e.errno!=20)throw e}}},mkdev:function(path,mode,dev){if(typeof dev===\"undefined\"){dev=mode;mode=438}mode|=8192;return FS.mknod(path,mode,dev)},symlink:function(oldpath,newpath){if(!PATH_FS.resolve(oldpath)){throw new FS.ErrnoError(44)}var lookup=FS.lookupPath(newpath,{parent:true});var parent=lookup.node;if(!parent){throw new FS.ErrnoError(44)}var newname=PATH.basename(newpath);var errCode=FS.mayCreate(parent,newname);if(errCode){throw new FS.ErrnoError(errCode)}if(!parent.node_ops.symlink){throw new FS.ErrnoError(63)}return parent.node_ops.symlink(parent,newname,oldpath)},rename:function(old_path,new_path){var old_dirname=PATH.dirname(old_path);var new_dirname=PATH.dirname(new_path);var old_name=PATH.basename(old_path);var new_name=PATH.basename(new_path);var lookup,old_dir,new_dir;lookup=FS.lookupPath(old_path,{parent:true});old_dir=lookup.node;lookup=FS.lookupPath(new_path,{parent:true});new_dir=lookup.node;if(!old_dir||!new_dir)throw new FS.ErrnoError(44);if(old_dir.mount!==new_dir.mount){throw new FS.ErrnoError(75)}var old_node=FS.lookupNode(old_dir,old_name);var relative=PATH_FS.relative(old_path,new_dirname);if(relative.charAt(0)!==\".\"){throw new FS.ErrnoError(28)}relative=PATH_FS.relative(new_path,old_dirname);if(relative.charAt(0)!==\".\"){throw new FS.ErrnoError(55)}var new_node;try{new_node=FS.lookupNode(new_dir,new_name)}catch(e){}if(old_node===new_node){return}var isdir=FS.isDir(old_node.mode);var errCode=FS.mayDelete(old_dir,old_name,isdir);if(errCode){throw new FS.ErrnoError(errCode)}errCode=new_node?FS.mayDelete(new_dir,new_name,isdir):FS.mayCreate(new_dir,new_name);if(errCode){throw new FS.ErrnoError(errCode)}if(!old_dir.node_ops.rename){throw new FS.ErrnoError(63)}if(FS.isMountpoint(old_node)||new_node&&FS.isMountpoint(new_node)){throw new FS.ErrnoError(10)}if(new_dir!==old_dir){errCode=FS.nodePermissions(old_dir,\"w\");if(errCode){throw new FS.ErrnoError(errCode)}}FS.hashRemoveNode(old_node);try{old_dir.node_ops.rename(old_node,new_dir,new_name)}catch(e){throw e}finally{FS.hashAddNode(old_node)}},rmdir:function(path){var lookup=FS.lookupPath(path,{parent:true});var parent=lookup.node;var name=PATH.basename(path);var node=FS.lookupNode(parent,name);var errCode=FS.mayDelete(parent,name,true);if(errCode){throw new FS.ErrnoError(errCode)}if(!parent.node_ops.rmdir){throw new FS.ErrnoError(63)}if(FS.isMountpoint(node)){throw new FS.ErrnoError(10)}parent.node_ops.rmdir(parent,name);FS.destroyNode(node)},readdir:function(path){var lookup=FS.lookupPath(path,{follow:true});var node=lookup.node;if(!node.node_ops.readdir){throw new FS.ErrnoError(54)}return node.node_ops.readdir(node)},unlink:function(path){var lookup=FS.lookupPath(path,{parent:true});var parent=lookup.node;if(!parent){throw new FS.ErrnoError(44)}var name=PATH.basename(path);var node=FS.lookupNode(parent,name);var errCode=FS.mayDelete(parent,name,false);if(errCode){throw new FS.ErrnoError(errCode)}if(!parent.node_ops.unlink){throw new FS.ErrnoError(63)}if(FS.isMountpoint(node)){throw new FS.ErrnoError(10)}parent.node_ops.unlink(parent,name);FS.destroyNode(node)},readlink:function(path){var lookup=FS.lookupPath(path);var link=lookup.node;if(!link){throw new FS.ErrnoError(44)}if(!link.node_ops.readlink){throw new FS.ErrnoError(28)}return PATH_FS.resolve(FS.getPath(link.parent),link.node_ops.readlink(link))},stat:function(path,dontFollow){var lookup=FS.lookupPath(path,{follow:!dontFollow});var node=lookup.node;if(!node){throw new FS.ErrnoError(44)}if(!node.node_ops.getattr){throw new FS.ErrnoError(63)}return node.node_ops.getattr(node)},lstat:function(path){return FS.stat(path,true)},chmod:function(path,mode,dontFollow){var node;if(typeof path===\"string\"){var lookup=FS.lookupPath(path,{follow:!dontFollow});node=lookup.node}else{node=path}if(!node.node_ops.setattr){throw new FS.ErrnoError(63)}node.node_ops.setattr(node,{mode:mode&4095|node.mode&~4095,timestamp:Date.now()})},lchmod:function(path,mode){FS.chmod(path,mode,true)},fchmod:function(fd,mode){var stream=FS.getStream(fd);if(!stream){throw new FS.ErrnoError(8)}FS.chmod(stream.node,mode)},chown:function(path,uid,gid,dontFollow){var node;if(typeof path===\"string\"){var lookup=FS.lookupPath(path,{follow:!dontFollow});node=lookup.node}else{node=path}if(!node.node_ops.setattr){throw new FS.ErrnoError(63)}node.node_ops.setattr(node,{timestamp:Date.now()})},lchown:function(path,uid,gid){FS.chown(path,uid,gid,true)},fchown:function(fd,uid,gid){var stream=FS.getStream(fd);if(!stream){throw new FS.ErrnoError(8)}FS.chown(stream.node,uid,gid)},truncate:function(path,len){if(len<0){throw new FS.ErrnoError(28)}var node;if(typeof path===\"string\"){var lookup=FS.lookupPath(path,{follow:true});node=lookup.node}else{node=path}if(!node.node_ops.setattr){throw new FS.ErrnoError(63)}if(FS.isDir(node.mode)){throw new FS.ErrnoError(31)}if(!FS.isFile(node.mode)){throw new FS.ErrnoError(28)}var errCode=FS.nodePermissions(node,\"w\");if(errCode){throw new FS.ErrnoError(errCode)}node.node_ops.setattr(node,{size:len,timestamp:Date.now()})},ftruncate:function(fd,len){var stream=FS.getStream(fd);if(!stream){throw new FS.ErrnoError(8)}if((stream.flags&2097155)===0){throw new FS.ErrnoError(28)}FS.truncate(stream.node,len)},utime:function(path,atime,mtime){var lookup=FS.lookupPath(path,{follow:true});var node=lookup.node;node.node_ops.setattr(node,{timestamp:Math.max(atime,mtime)})},open:function(path,flags,mode,fd_start,fd_end){if(path===\"\"){throw new FS.ErrnoError(44)}flags=typeof flags===\"string\"?FS.modeStringToFlags(flags):flags;mode=typeof mode===\"undefined\"?438:mode;if(flags&64){mode=mode&4095|32768}else{mode=0}var node;if(typeof path===\"object\"){node=path}else{path=PATH.normalize(path);try{var lookup=FS.lookupPath(path,{follow:!(flags&131072)});node=lookup.node}catch(e){}}var created=false;if(flags&64){if(node){if(flags&128){throw new FS.ErrnoError(20)}}else{node=FS.mknod(path,mode,0);created=true}}if(!node){throw new FS.ErrnoError(44)}if(FS.isChrdev(node.mode)){flags&=~512}if(flags&65536&&!FS.isDir(node.mode)){throw new FS.ErrnoError(54)}if(!created){var errCode=FS.mayOpen(node,flags);if(errCode){throw new FS.ErrnoError(errCode)}}if(flags&512){FS.truncate(node,0)}flags&=~(128|512|131072);var stream=FS.createStream({node:node,path:FS.getPath(node),id:node.id,flags:flags,mode:node.mode,seekable:true,position:0,stream_ops:node.stream_ops,node_ops:node.node_ops,ungotten:[],error:false},fd_start,fd_end);if(stream.stream_ops.open){stream.stream_ops.open(stream)}if(Module[\"logReadFiles\"]&&!(flags&1)){if(!FS.readFiles)FS.readFiles={};if(!(path in FS.readFiles)){FS.readFiles[path]=1}}return stream},close:function(stream){if(FS.isClosed(stream)){throw new FS.ErrnoError(8)}if(stream.getdents)stream.getdents=null;try{if(stream.stream_ops.close){stream.stream_ops.close(stream)}}catch(e){throw e}finally{FS.closeStream(stream.fd)}stream.fd=null},isClosed:function(stream){return stream.fd===null},llseek:function(stream,offset,whence){if(FS.isClosed(stream)){throw new FS.ErrnoError(8)}if(!stream.seekable||!stream.stream_ops.llseek){throw new FS.ErrnoError(70)}if(whence!=0&&whence!=1&&whence!=2){throw new FS.ErrnoError(28)}stream.position=stream.stream_ops.llseek(stream,offset,whence);stream.ungotten=[];return stream.position},read:function(stream,buffer,offset,length,position){offset>>>=0;if(length<0||position<0){throw new FS.ErrnoError(28)}if(FS.isClosed(stream)){throw new FS.ErrnoError(8)}if((stream.flags&2097155)===1){throw new FS.ErrnoError(8)}if(FS.isDir(stream.node.mode)){throw new FS.ErrnoError(31)}if(!stream.stream_ops.read){throw new FS.ErrnoError(28)}var seeking=typeof position!==\"undefined\";if(!seeking){position=stream.position}else if(!stream.seekable){throw new FS.ErrnoError(70)}var bytesRead=stream.stream_ops.read(stream,buffer,offset,length,position);if(!seeking)stream.position+=bytesRead;return bytesRead},write:function(stream,buffer,offset,length,position,canOwn){offset>>>=0;if(length<0||position<0){throw new FS.ErrnoError(28)}if(FS.isClosed(stream)){throw new FS.ErrnoError(8)}if((stream.flags&2097155)===0){throw new FS.ErrnoError(8)}if(FS.isDir(stream.node.mode)){throw new FS.ErrnoError(31)}if(!stream.stream_ops.write){throw new FS.ErrnoError(28)}if(stream.seekable&&stream.flags&1024){FS.llseek(stream,0,2)}var seeking=typeof position!==\"undefined\";if(!seeking){position=stream.position}else if(!stream.seekable){throw new FS.ErrnoError(70)}var bytesWritten=stream.stream_ops.write(stream,buffer,offset,length,position,canOwn);if(!seeking)stream.position+=bytesWritten;return bytesWritten},allocate:function(stream,offset,length){if(FS.isClosed(stream)){throw new FS.ErrnoError(8)}if(offset<0||length<=0){throw new FS.ErrnoError(28)}if((stream.flags&2097155)===0){throw new FS.ErrnoError(8)}if(!FS.isFile(stream.node.mode)&&!FS.isDir(stream.node.mode)){throw new FS.ErrnoError(43)}if(!stream.stream_ops.allocate){throw new FS.ErrnoError(138)}stream.stream_ops.allocate(stream,offset,length)},mmap:function(stream,address,length,position,prot,flags){address>>>=0;if((prot&2)!==0&&(flags&2)===0&&(stream.flags&2097155)!==2){throw new FS.ErrnoError(2)}if((stream.flags&2097155)===1){throw new FS.ErrnoError(2)}if(!stream.stream_ops.mmap){throw new FS.ErrnoError(43)}return stream.stream_ops.mmap(stream,address,length,position,prot,flags)},msync:function(stream,buffer,offset,length,mmapFlags){offset>>>=0;if(!stream||!stream.stream_ops.msync){return 0}return stream.stream_ops.msync(stream,buffer,offset,length,mmapFlags)},munmap:function(stream){return 0},ioctl:function(stream,cmd,arg){if(!stream.stream_ops.ioctl){throw new FS.ErrnoError(59)}return stream.stream_ops.ioctl(stream,cmd,arg)},readFile:function(path,opts={}){opts.flags=opts.flags||0;opts.encoding=opts.encoding||\"binary\";if(opts.encoding!==\"utf8\"&&opts.encoding!==\"binary\"){throw new Error('Invalid encoding type \"'+opts.encoding+'\"')}var ret;var stream=FS.open(path,opts.flags);var stat=FS.stat(path);var length=stat.size;var buf=new Uint8Array(length);FS.read(stream,buf,0,length,0);if(opts.encoding===\"utf8\"){ret=UTF8ArrayToString(buf,0)}else if(opts.encoding===\"binary\"){ret=buf}FS.close(stream);return ret},writeFile:function(path,data,opts={}){opts.flags=opts.flags||577;var stream=FS.open(path,opts.flags,opts.mode);if(typeof data===\"string\"){var buf=new Uint8Array(lengthBytesUTF8(data)+1);var actualNumBytes=stringToUTF8Array(data,buf,0,buf.length);FS.write(stream,buf,0,actualNumBytes,undefined,opts.canOwn)}else if(ArrayBuffer.isView(data)){FS.write(stream,data,0,data.byteLength,undefined,opts.canOwn)}else{throw new Error(\"Unsupported data type\")}FS.close(stream)},cwd:function(){return FS.currentPath},chdir:function(path){var lookup=FS.lookupPath(path,{follow:true});if(lookup.node===null){throw new FS.ErrnoError(44)}if(!FS.isDir(lookup.node.mode)){throw new FS.ErrnoError(54)}var errCode=FS.nodePermissions(lookup.node,\"x\");if(errCode){throw new FS.ErrnoError(errCode)}FS.currentPath=lookup.path},createDefaultDirectories:function(){FS.mkdir(\"/tmp\");FS.mkdir(\"/home\");FS.mkdir(\"/home/web_user\")},createDefaultDevices:function(){FS.mkdir(\"/dev\");FS.registerDevice(FS.makedev(1,3),{read:function(){return 0},write:function(stream,buffer,offset,length,pos){return length}});FS.mkdev(\"/dev/null\",FS.makedev(1,3));TTY.register(FS.makedev(5,0),TTY.default_tty_ops);TTY.register(FS.makedev(6,0),TTY.default_tty1_ops);FS.mkdev(\"/dev/tty\",FS.makedev(5,0));FS.mkdev(\"/dev/tty1\",FS.makedev(6,0));var random_device=getRandomDevice();FS.createDevice(\"/dev\",\"random\",random_device);FS.createDevice(\"/dev\",\"urandom\",random_device);FS.mkdir(\"/dev/shm\");FS.mkdir(\"/dev/shm/tmp\")},createSpecialDirectories:function(){FS.mkdir(\"/proc\");var proc_self=FS.mkdir(\"/proc/self\");FS.mkdir(\"/proc/self/fd\");FS.mount({mount:function(){var node=FS.createNode(proc_self,\"fd\",16384|511,73);node.node_ops={lookup:function(parent,name){var fd=+name;var stream=FS.getStream(fd);if(!stream)throw new FS.ErrnoError(8);var ret={parent:null,mount:{mountpoint:\"fake\"},node_ops:{readlink:function(){return stream.path}}};ret.parent=ret;return ret}};return node}},{},\"/proc/self/fd\")},createStandardStreams:function(){if(Module[\"stdin\"]){FS.createDevice(\"/dev\",\"stdin\",Module[\"stdin\"])}else{FS.symlink(\"/dev/tty\",\"/dev/stdin\")}if(Module[\"stdout\"]){FS.createDevice(\"/dev\",\"stdout\",null,Module[\"stdout\"])}else{FS.symlink(\"/dev/tty\",\"/dev/stdout\")}if(Module[\"stderr\"]){FS.createDevice(\"/dev\",\"stderr\",null,Module[\"stderr\"])}else{FS.symlink(\"/dev/tty1\",\"/dev/stderr\")}var stdin=FS.open(\"/dev/stdin\",0);var stdout=FS.open(\"/dev/stdout\",1);var stderr=FS.open(\"/dev/stderr\",1)},ensureErrnoError:function(){if(FS.ErrnoError)return;FS.ErrnoError=function ErrnoError(errno,node){this.node=node;this.setErrno=function(errno){this.errno=errno};this.setErrno(errno);this.message=\"FS error\"};FS.ErrnoError.prototype=new Error;FS.ErrnoError.prototype.constructor=FS.ErrnoError;[44].forEach(function(code){FS.genericErrors[code]=new FS.ErrnoError(code);FS.genericErrors[code].stack=\"<generic error, no stack>\"})},staticInit:function(){FS.ensureErrnoError();FS.nameTable=new Array(4096);FS.mount(MEMFS,{},\"/\");FS.createDefaultDirectories();FS.createDefaultDevices();FS.createSpecialDirectories();FS.filesystems={\"MEMFS\":MEMFS}},init:function(input,output,error){FS.init.initialized=true;FS.ensureErrnoError();Module[\"stdin\"]=input||Module[\"stdin\"];Module[\"stdout\"]=output||Module[\"stdout\"];Module[\"stderr\"]=error||Module[\"stderr\"];FS.createStandardStreams()},quit:function(){FS.init.initialized=false;for(var i=0;i<FS.streams.length;i++){var stream=FS.streams[i];if(!stream){continue}FS.close(stream)}},getMode:function(canRead,canWrite){var mode=0;if(canRead)mode|=292|73;if(canWrite)mode|=146;return mode},findObject:function(path,dontResolveLastLink){var ret=FS.analyzePath(path,dontResolveLastLink);if(ret.exists){return ret.object}else{return null}},analyzePath:function(path,dontResolveLastLink){try{var lookup=FS.lookupPath(path,{follow:!dontResolveLastLink});path=lookup.path}catch(e){}var ret={isRoot:false,exists:false,error:0,name:null,path:null,object:null,parentExists:false,parentPath:null,parentObject:null};try{var lookup=FS.lookupPath(path,{parent:true});ret.parentExists=true;ret.parentPath=lookup.path;ret.parentObject=lookup.node;ret.name=PATH.basename(path);lookup=FS.lookupPath(path,{follow:!dontResolveLastLink});ret.exists=true;ret.path=lookup.path;ret.object=lookup.node;ret.name=lookup.node.name;ret.isRoot=lookup.path===\"/\"}catch(e){ret.error=e.errno}return ret},createPath:function(parent,path,canRead,canWrite){parent=typeof parent===\"string\"?parent:FS.getPath(parent);var parts=path.split(\"/\").reverse();while(parts.length){var part=parts.pop();if(!part)continue;var current=PATH.join2(parent,part);try{FS.mkdir(current)}catch(e){}parent=current}return current},createFile:function(parent,name,properties,canRead,canWrite){var path=PATH.join2(typeof parent===\"string\"?parent:FS.getPath(parent),name);var mode=FS.getMode(canRead,canWrite);return FS.create(path,mode)},createDataFile:function(parent,name,data,canRead,canWrite,canOwn){var path=name?PATH.join2(typeof parent===\"string\"?parent:FS.getPath(parent),name):parent;var mode=FS.getMode(canRead,canWrite);var node=FS.create(path,mode);if(data){if(typeof data===\"string\"){var arr=new Array(data.length);for(var i=0,len=data.length;i<len;++i)arr[i]=data.charCodeAt(i);data=arr}FS.chmod(node,mode|146);var stream=FS.open(node,577);FS.write(stream,data,0,data.length,0,canOwn);FS.close(stream);FS.chmod(node,mode)}return node},createDevice:function(parent,name,input,output){var path=PATH.join2(typeof parent===\"string\"?parent:FS.getPath(parent),name);var mode=FS.getMode(!!input,!!output);if(!FS.createDevice.major)FS.createDevice.major=64;var dev=FS.makedev(FS.createDevice.major++,0);FS.registerDevice(dev,{open:function(stream){stream.seekable=false},close:function(stream){if(output&&output.buffer&&output.buffer.length){output(10)}},read:function(stream,buffer,offset,length,pos){var bytesRead=0;for(var i=0;i<length;i++){var result;try{result=input()}catch(e){throw new FS.ErrnoError(29)}if(result===undefined&&bytesRead===0){throw new FS.ErrnoError(6)}if(result===null||result===undefined)break;bytesRead++;buffer[offset+i]=result}if(bytesRead){stream.node.timestamp=Date.now()}return bytesRead},write:function(stream,buffer,offset,length,pos){for(var i=0;i<length;i++){try{output(buffer[offset+i])}catch(e){throw new FS.ErrnoError(29)}}if(length){stream.node.timestamp=Date.now()}return i}});return FS.mkdev(path,mode,dev)},forceLoadFile:function(obj){if(obj.isDevice||obj.isFolder||obj.link||obj.contents)return true;if(typeof XMLHttpRequest!==\"undefined\"){throw new Error(\"Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.\")}else if(read_){try{obj.contents=intArrayFromString(read_(obj.url),true);obj.usedBytes=obj.contents.length}catch(e){throw new FS.ErrnoError(29)}}else{throw new Error(\"Cannot load without read() or XMLHttpRequest.\")}},createLazyFile:function(parent,name,url,canRead,canWrite){function LazyUint8Array(){this.lengthKnown=false;this.chunks=[]}LazyUint8Array.prototype.get=function LazyUint8Array_get(idx){if(idx>this.length-1||idx<0){return undefined}var chunkOffset=idx%this.chunkSize;var chunkNum=idx/this.chunkSize|0;return this.getter(chunkNum)[chunkOffset]};LazyUint8Array.prototype.setDataGetter=function LazyUint8Array_setDataGetter(getter){this.getter=getter};LazyUint8Array.prototype.cacheLength=function LazyUint8Array_cacheLength(){var xhr=new XMLHttpRequest;xhr.open(\"HEAD\",url,false);xhr.send(null);if(!(xhr.status>=200&&xhr.status<300||xhr.status===304))throw new Error(\"Couldn't load \"+url+\". Status: \"+xhr.status);var datalength=Number(xhr.getResponseHeader(\"Content-length\"));var header;var hasByteServing=(header=xhr.getResponseHeader(\"Accept-Ranges\"))&&header===\"bytes\";var usesGzip=(header=xhr.getResponseHeader(\"Content-Encoding\"))&&header===\"gzip\";var chunkSize=1024*1024;if(!hasByteServing)chunkSize=datalength;var doXHR=function(from,to){if(from>to)throw new Error(\"invalid range (\"+from+\", \"+to+\") or no bytes requested!\");if(to>datalength-1)throw new Error(\"only \"+datalength+\" bytes available! programmer error!\");var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);if(datalength!==chunkSize)xhr.setRequestHeader(\"Range\",\"bytes=\"+from+\"-\"+to);if(typeof Uint8Array!=\"undefined\")xhr.responseType=\"arraybuffer\";if(xhr.overrideMimeType){xhr.overrideMimeType(\"text/plain; charset=x-user-defined\")}xhr.send(null);if(!(xhr.status>=200&&xhr.status<300||xhr.status===304))throw new Error(\"Couldn't load \"+url+\". Status: \"+xhr.status);if(xhr.response!==undefined){return new Uint8Array(xhr.response||[])}else{return intArrayFromString(xhr.responseText||\"\",true)}};var lazyArray=this;lazyArray.setDataGetter(function(chunkNum){var start=chunkNum*chunkSize;var end=(chunkNum+1)*chunkSize-1;end=Math.min(end,datalength-1);if(typeof lazyArray.chunks[chunkNum]===\"undefined\"){lazyArray.chunks[chunkNum]=doXHR(start,end)}if(typeof lazyArray.chunks[chunkNum]===\"undefined\")throw new Error(\"doXHR failed!\");return lazyArray.chunks[chunkNum]});if(usesGzip||!datalength){chunkSize=datalength=1;datalength=this.getter(0).length;chunkSize=datalength;out(\"LazyFiles on gzip forces download of the whole file when length is accessed\")}this._length=datalength;this._chunkSize=chunkSize;this.lengthKnown=true};if(typeof XMLHttpRequest!==\"undefined\"){if(!ENVIRONMENT_IS_WORKER)throw\"Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc\";var lazyArray=new LazyUint8Array;Object.defineProperties(lazyArray,{length:{get:function(){if(!this.lengthKnown){this.cacheLength()}return this._length}},chunkSize:{get:function(){if(!this.lengthKnown){this.cacheLength()}return this._chunkSize}}});var properties={isDevice:false,contents:lazyArray}}else{var properties={isDevice:false,url:url}}var node=FS.createFile(parent,name,properties,canRead,canWrite);if(properties.contents){node.contents=properties.contents}else if(properties.url){node.contents=null;node.url=properties.url}Object.defineProperties(node,{usedBytes:{get:function(){return this.contents.length}}});var stream_ops={};var keys=Object.keys(node.stream_ops);keys.forEach(function(key){var fn=node.stream_ops[key];stream_ops[key]=function forceLoadLazyFile(){FS.forceLoadFile(node);return fn.apply(null,arguments)}});stream_ops.read=function stream_ops_read(stream,buffer,offset,length,position){FS.forceLoadFile(node);var contents=stream.node.contents;if(position>=contents.length)return 0;var size=Math.min(contents.length-position,length);if(contents.slice){for(var i=0;i<size;i++){buffer[offset+i]=contents[position+i]}}else{for(var i=0;i<size;i++){buffer[offset+i]=contents.get(position+i)}}return size};node.stream_ops=stream_ops;return node},createPreloadedFile:function(parent,name,url,canRead,canWrite,onload,onerror,dontCreateFile,canOwn,preFinish){Browser.init();var fullname=name?PATH_FS.resolve(PATH.join2(parent,name)):parent;var dep=getUniqueRunDependency(\"cp \"+fullname);function processData(byteArray){function finish(byteArray){if(preFinish)preFinish();if(!dontCreateFile){FS.createDataFile(parent,name,byteArray,canRead,canWrite,canOwn)}if(onload)onload();removeRunDependency(dep)}var handled=false;Module[\"preloadPlugins\"].forEach(function(plugin){if(handled)return;if(plugin[\"canHandle\"](fullname)){plugin[\"handle\"](byteArray,fullname,finish,function(){if(onerror)onerror();removeRunDependency(dep)});handled=true}});if(!handled)finish(byteArray)}addRunDependency(dep);if(typeof url==\"string\"){asyncLoad(url,function(byteArray){processData(byteArray)},onerror)}else{processData(url)}},indexedDB:function(){return window.indexedDB||window.mozIndexedDB||window.webkitIndexedDB||window.msIndexedDB},DB_NAME:function(){return\"EM_FS_\"+window.location.pathname},DB_VERSION:20,DB_STORE_NAME:\"FILE_DATA\",saveFilesToDB:function(paths,onload,onerror){onload=onload||function(){};onerror=onerror||function(){};var indexedDB=FS.indexedDB();try{var openRequest=indexedDB.open(FS.DB_NAME(),FS.DB_VERSION)}catch(e){return onerror(e)}openRequest.onupgradeneeded=function openRequest_onupgradeneeded(){out(\"creating db\");var db=openRequest.result;db.createObjectStore(FS.DB_STORE_NAME)};openRequest.onsuccess=function openRequest_onsuccess(){var db=openRequest.result;var transaction=db.transaction([FS.DB_STORE_NAME],\"readwrite\");var files=transaction.objectStore(FS.DB_STORE_NAME);var ok=0,fail=0,total=paths.length;function finish(){if(fail==0)onload();else onerror()}paths.forEach(function(path){var putRequest=files.put(FS.analyzePath(path).object.contents,path);putRequest.onsuccess=function putRequest_onsuccess(){ok++;if(ok+fail==total)finish()};putRequest.onerror=function putRequest_onerror(){fail++;if(ok+fail==total)finish()}});transaction.onerror=onerror};openRequest.onerror=onerror},loadFilesFromDB:function(paths,onload,onerror){onload=onload||function(){};onerror=onerror||function(){};var indexedDB=FS.indexedDB();try{var openRequest=indexedDB.open(FS.DB_NAME(),FS.DB_VERSION)}catch(e){return onerror(e)}openRequest.onupgradeneeded=onerror;openRequest.onsuccess=function openRequest_onsuccess(){var db=openRequest.result;try{var transaction=db.transaction([FS.DB_STORE_NAME],\"readonly\")}catch(e){onerror(e);return}var files=transaction.objectStore(FS.DB_STORE_NAME);var ok=0,fail=0,total=paths.length;function finish(){if(fail==0)onload();else onerror()}paths.forEach(function(path){var getRequest=files.get(path);getRequest.onsuccess=function getRequest_onsuccess(){if(FS.analyzePath(path).exists){FS.unlink(path)}FS.createDataFile(PATH.dirname(path),PATH.basename(path),getRequest.result,true,true,true);ok++;if(ok+fail==total)finish()};getRequest.onerror=function getRequest_onerror(){fail++;if(ok+fail==total)finish()}});transaction.onerror=onerror};openRequest.onerror=onerror}};var SYSCALLS={mappings:{},DEFAULT_POLLMASK:5,calculateAt:function(dirfd,path,allowEmpty){if(path[0]===\"/\"){return path}var dir;if(dirfd===-100){dir=FS.cwd()}else{var dirstream=FS.getStream(dirfd);if(!dirstream)throw new FS.ErrnoError(8);dir=dirstream.path}if(path.length==0){if(!allowEmpty){throw new FS.ErrnoError(44)}return dir}return PATH.join2(dir,path)},doStat:function(func,path,buf){try{var stat=func(path)}catch(e){if(e&&e.node&&PATH.normalize(path)!==PATH.normalize(FS.getPath(e.node))){return-54}throw e}GROWABLE_HEAP_I32()[buf>>>2]=stat.dev;GROWABLE_HEAP_I32()[buf+4>>>2]=0;GROWABLE_HEAP_I32()[buf+8>>>2]=stat.ino;GROWABLE_HEAP_I32()[buf+12>>>2]=stat.mode;GROWABLE_HEAP_I32()[buf+16>>>2]=stat.nlink;GROWABLE_HEAP_I32()[buf+20>>>2]=stat.uid;GROWABLE_HEAP_I32()[buf+24>>>2]=stat.gid;GROWABLE_HEAP_I32()[buf+28>>>2]=stat.rdev;GROWABLE_HEAP_I32()[buf+32>>>2]=0;tempI64=[stat.size>>>0,(tempDouble=stat.size,+Math.abs(tempDouble)>=1?tempDouble>0?(Math.min(+Math.floor(tempDouble/4294967296),4294967295)|0)>>>0:~~+Math.ceil((tempDouble-+(~~tempDouble>>>0))/4294967296)>>>0:0)],GROWABLE_HEAP_I32()[buf+40>>>2]=tempI64[0],GROWABLE_HEAP_I32()[buf+44>>>2]=tempI64[1];GROWABLE_HEAP_I32()[buf+48>>>2]=4096;GROWABLE_HEAP_I32()[buf+52>>>2]=stat.blocks;GROWABLE_HEAP_I32()[buf+56>>>2]=stat.atime.getTime()/1e3|0;GROWABLE_HEAP_I32()[buf+60>>>2]=0;GROWABLE_HEAP_I32()[buf+64>>>2]=stat.mtime.getTime()/1e3|0;GROWABLE_HEAP_I32()[buf+68>>>2]=0;GROWABLE_HEAP_I32()[buf+72>>>2]=stat.ctime.getTime()/1e3|0;GROWABLE_HEAP_I32()[buf+76>>>2]=0;tempI64=[stat.ino>>>0,(tempDouble=stat.ino,+Math.abs(tempDouble)>=1?tempDouble>0?(Math.min(+Math.floor(tempDouble/4294967296),4294967295)|0)>>>0:~~+Math.ceil((tempDouble-+(~~tempDouble>>>0))/4294967296)>>>0:0)],GROWABLE_HEAP_I32()[buf+80>>>2]=tempI64[0],GROWABLE_HEAP_I32()[buf+84>>>2]=tempI64[1];return 0},doMsync:function(addr,stream,len,flags,offset){var buffer=GROWABLE_HEAP_U8().slice(addr,addr+len);FS.msync(stream,buffer,offset,len,flags)},doMkdir:function(path,mode){path=PATH.normalize(path);if(path[path.length-1]===\"/\")path=path.substr(0,path.length-1);FS.mkdir(path,mode,0);return 0},doMknod:function(path,mode,dev){switch(mode&61440){case 32768:case 8192:case 24576:case 4096:case 49152:break;default:return-28}FS.mknod(path,mode,dev);return 0},doReadlink:function(path,buf,bufsize){if(bufsize<=0)return-28;var ret=FS.readlink(path);var len=Math.min(bufsize,lengthBytesUTF8(ret));var endChar=GROWABLE_HEAP_I8()[buf+len>>>0];stringToUTF8(ret,buf,bufsize+1);GROWABLE_HEAP_I8()[buf+len>>>0]=endChar;return len},doAccess:function(path,amode){if(amode&~7){return-28}var lookup=FS.lookupPath(path,{follow:true});var node=lookup.node;if(!node){return-44}var perms=\"\";if(amode&4)perms+=\"r\";if(amode&2)perms+=\"w\";if(amode&1)perms+=\"x\";if(perms&&FS.nodePermissions(node,perms)){return-2}return 0},doDup:function(path,flags,suggestFD){var suggest=FS.getStream(suggestFD);if(suggest)FS.close(suggest);return FS.open(path,flags,0,suggestFD,suggestFD).fd},doReadv:function(stream,iov,iovcnt,offset){var ret=0;for(var i=0;i<iovcnt;i++){var ptr=GROWABLE_HEAP_I32()[iov+i*8>>>2];var len=GROWABLE_HEAP_I32()[iov+(i*8+4)>>>2];var curr=FS.read(stream,GROWABLE_HEAP_I8(),ptr,len,offset);if(curr<0)return-1;ret+=curr;if(curr<len)break}return ret},doWritev:function(stream,iov,iovcnt,offset){var ret=0;for(var i=0;i<iovcnt;i++){var ptr=GROWABLE_HEAP_I32()[iov+i*8>>>2];var len=GROWABLE_HEAP_I32()[iov+(i*8+4)>>>2];var curr=FS.write(stream,GROWABLE_HEAP_I8(),ptr,len,offset);if(curr<0)return-1;ret+=curr}return ret},varargs:undefined,get:function(){SYSCALLS.varargs+=4;var ret=GROWABLE_HEAP_I32()[SYSCALLS.varargs-4>>>2];return ret},getStr:function(ptr){var ret=UTF8ToString(ptr);return ret},getStreamFromFD:function(fd){var stream=FS.getStream(fd);if(!stream)throw new FS.ErrnoError(8);return stream},get64:function(low,high){return low}};function ___syscall_fcntl64(fd,cmd,varargs){if(ENVIRONMENT_IS_PTHREAD)return _emscripten_proxy_to_main_thread_js(2,1,fd,cmd,varargs);SYSCALLS.varargs=varargs;try{var stream=SYSCALLS.getStreamFromFD(fd);switch(cmd){case 0:{var arg=SYSCALLS.get();if(arg<0){return-28}var newStream;newStream=FS.open(stream.path,stream.flags,0,arg);return newStream.fd}case 1:case 2:return 0;case 3:return stream.flags;case 4:{var arg=SYSCALLS.get();stream.flags|=arg;return 0}case 5:{var arg=SYSCALLS.get();var offset=0;GROWABLE_HEAP_I16()[arg+offset>>>1]=2;return 0}case 6:case 7:return 0;case 16:case 8:return-28;case 9:setErrNo(28);return-1;default:{return-28}}}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))throw e;return-e.errno}}function ___syscall_ftruncate64(fd,low,high){if(ENVIRONMENT_IS_PTHREAD)return _emscripten_proxy_to_main_thread_js(3,1,fd,low,high);try{var length=SYSCALLS.get64(low,high);FS.ftruncate(fd,length);return 0}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))throw e;return-e.errno}}function ___syscall_ioctl(fd,op,varargs){if(ENVIRONMENT_IS_PTHREAD)return _emscripten_proxy_to_main_thread_js(4,1,fd,op,varargs);SYSCALLS.varargs=varargs;try{var stream=SYSCALLS.getStreamFromFD(fd);switch(op){case 21509:case 21505:{if(!stream.tty)return-59;return 0}case 21510:case 21511:case 21512:case 21506:case 21507:case 21508:{if(!stream.tty)return-59;return 0}case 21519:{if(!stream.tty)return-59;var argp=SYSCALLS.get();GROWABLE_HEAP_I32()[argp>>>2]=0;return 0}case 21520:{if(!stream.tty)return-59;return-28}case 21531:{var argp=SYSCALLS.get();return FS.ioctl(stream,op,argp)}case 21523:{if(!stream.tty)return-59;return 0}case 21524:{if(!stream.tty)return-59;return 0}default:abort(\"bad ioctl syscall \"+op)}}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))throw e;return-e.errno}}function syscallMmap2(addr,len,prot,flags,fd,off){off<<=12;var ptr;var allocated=false;if((flags&16)!==0&&addr%65536!==0){return-28}if((flags&32)!==0){ptr=mmapAlloc(len);if(!ptr)return-48;allocated=true}else{var info=FS.getStream(fd);if(!info)return-8;var res=FS.mmap(info,addr,len,off,prot,flags);ptr=res.ptr;allocated=res.allocated}ptr>>>=0;SYSCALLS.mappings[ptr]={malloc:ptr,len:len,allocated:allocated,fd:fd,prot:prot,flags:flags,offset:off};return ptr}function ___syscall_mmap2(addr,len,prot,flags,fd,off){if(ENVIRONMENT_IS_PTHREAD)return _emscripten_proxy_to_main_thread_js(5,1,addr,len,prot,flags,fd,off);try{return syscallMmap2(addr,len,prot,flags,fd,off)}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))throw e;return-e.errno}}function syscallMunmap(addr,len){addr>>>=0;var info=SYSCALLS.mappings[addr];if(len===0||!info){return-28}if(len===info.len){var stream=FS.getStream(info.fd);if(stream){if(info.prot&2){SYSCALLS.doMsync(addr,stream,len,info.flags,info.offset)}FS.munmap(stream)}SYSCALLS.mappings[addr]=null;if(info.allocated){_free(info.malloc)}}return 0}function ___syscall_munmap(addr,len){if(ENVIRONMENT_IS_PTHREAD)return _emscripten_proxy_to_main_thread_js(6,1,addr,len);try{return syscallMunmap(addr,len)}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))throw e;return-e.errno}}function ___syscall_open(path,flags,varargs){if(ENVIRONMENT_IS_PTHREAD)return _emscripten_proxy_to_main_thread_js(7,1,path,flags,varargs);SYSCALLS.varargs=varargs;try{var pathname=SYSCALLS.getStr(path);var mode=varargs?SYSCALLS.get():0;var stream=FS.open(pathname,flags,mode);return stream.fd}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))throw e;return-e.errno}}function ___syscall_unlink(path){if(ENVIRONMENT_IS_PTHREAD)return _emscripten_proxy_to_main_thread_js(8,1,path);try{path=SYSCALLS.getStr(path);FS.unlink(path);return 0}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))throw e;return-e.errno}}function __embind_register_bigint(primitiveType,name,size,minRange,maxRange){}function getShiftFromSize(size){switch(size){case 1:return 0;case 2:return 1;case 4:return 2;case 8:return 3;default:throw new TypeError(\"Unknown type size: \"+size)}}function embind_init_charCodes(){var codes=new Array(256);for(var i=0;i<256;++i){codes[i]=String.fromCharCode(i)}embind_charCodes=codes}var embind_charCodes=undefined;function readLatin1String(ptr){var ret=\"\";var c=ptr;while(GROWABLE_HEAP_U8()[c>>>0]){ret+=embind_charCodes[GROWABLE_HEAP_U8()[c++>>>0]]}return ret}var awaitingDependencies={};var registeredTypes={};var typeDependencies={};var char_0=48;var char_9=57;function makeLegalFunctionName(name){if(undefined===name){return\"_unknown\"}name=name.replace(/[^a-zA-Z0-9_]/g,\"$\");var f=name.charCodeAt(0);if(f>=char_0&&f<=char_9){return\"_\"+name}else{return name}}function createNamedFunction(name,body){name=makeLegalFunctionName(name);return new Function(\"body\",\"return function \"+name+\"() {\\n\"+'    \"use strict\";'+\"    return body.apply(this, arguments);\\n\"+\"};\\n\")(body)}function extendError(baseErrorType,errorName){var errorClass=createNamedFunction(errorName,function(message){this.name=errorName;this.message=message;var stack=new Error(message).stack;if(stack!==undefined){this.stack=this.toString()+\"\\n\"+stack.replace(/^Error(:[^\\n]*)?\\n/,\"\")}});errorClass.prototype=Object.create(baseErrorType.prototype);errorClass.prototype.constructor=errorClass;errorClass.prototype.toString=function(){if(this.message===undefined){return this.name}else{return this.name+\": \"+this.message}};return errorClass}var BindingError=undefined;function throwBindingError(message){throw new BindingError(message)}var InternalError=undefined;function throwInternalError(message){throw new InternalError(message)}function whenDependentTypesAreResolved(myTypes,dependentTypes,getTypeConverters){myTypes.forEach(function(type){typeDependencies[type]=dependentTypes});function onComplete(typeConverters){var myTypeConverters=getTypeConverters(typeConverters);if(myTypeConverters.length!==myTypes.length){throwInternalError(\"Mismatched type converter count\")}for(var i=0;i<myTypes.length;++i){registerType(myTypes[i],myTypeConverters[i])}}var typeConverters=new Array(dependentTypes.length);var unregisteredTypes=[];var registered=0;dependentTypes.forEach(function(dt,i){if(registeredTypes.hasOwnProperty(dt)){typeConverters[i]=registeredTypes[dt]}else{unregisteredTypes.push(dt);if(!awaitingDependencies.hasOwnProperty(dt)){awaitingDependencies[dt]=[]}awaitingDependencies[dt].push(function(){typeConverters[i]=registeredTypes[dt];++registered;if(registered===unregisteredTypes.length){onComplete(typeConverters)}})}});if(0===unregisteredTypes.length){onComplete(typeConverters)}}function registerType(rawType,registeredInstance,options={}){if(!(\"argPackAdvance\"in registeredInstance)){throw new TypeError(\"registerType registeredInstance requires argPackAdvance\")}var name=registeredInstance.name;if(!rawType){throwBindingError('type \"'+name+'\" must have a positive integer typeid pointer')}if(registeredTypes.hasOwnProperty(rawType)){if(options.ignoreDuplicateRegistrations){return}else{throwBindingError(\"Cannot register type '\"+name+\"' twice\")}}registeredTypes[rawType]=registeredInstance;delete typeDependencies[rawType];if(awaitingDependencies.hasOwnProperty(rawType)){var callbacks=awaitingDependencies[rawType];delete awaitingDependencies[rawType];callbacks.forEach(function(cb){cb()})}}function __embind_register_bool(rawType,name,size,trueValue,falseValue){var shift=getShiftFromSize(size);name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":function(wt){return!!wt},\"toWireType\":function(destructors,o){return o?trueValue:falseValue},\"argPackAdvance\":8,\"readValueFromPointer\":function(pointer){var heap;if(size===1){heap=GROWABLE_HEAP_I8()}else if(size===2){heap=GROWABLE_HEAP_I16()}else if(size===4){heap=GROWABLE_HEAP_I32()}else{throw new TypeError(\"Unknown boolean type size: \"+name)}return this[\"fromWireType\"](heap[pointer>>>shift])},destructorFunction:null})}function ClassHandle_isAliasOf(other){if(!(this instanceof ClassHandle)){return false}if(!(other instanceof ClassHandle)){return false}var leftClass=this.$$.ptrType.registeredClass;var left=this.$$.ptr;var rightClass=other.$$.ptrType.registeredClass;var right=other.$$.ptr;while(leftClass.baseClass){left=leftClass.upcast(left);leftClass=leftClass.baseClass}while(rightClass.baseClass){right=rightClass.upcast(right);rightClass=rightClass.baseClass}return leftClass===rightClass&&left===right}function shallowCopyInternalPointer(o){return{count:o.count,deleteScheduled:o.deleteScheduled,preservePointerOnDelete:o.preservePointerOnDelete,ptr:o.ptr,ptrType:o.ptrType,smartPtr:o.smartPtr,smartPtrType:o.smartPtrType}}function throwInstanceAlreadyDeleted(obj){function getInstanceTypeName(handle){return handle.$$.ptrType.registeredClass.name}throwBindingError(getInstanceTypeName(obj)+\" instance already deleted\")}var finalizationGroup=false;function detachFinalizer(handle){}function runDestructor($$){if($$.smartPtr){$$.smartPtrType.rawDestructor($$.smartPtr)}else{$$.ptrType.registeredClass.rawDestructor($$.ptr)}}function releaseClassHandle($$){$$.count.value-=1;var toDelete=0===$$.count.value;if(toDelete){runDestructor($$)}}function attachFinalizer(handle){if(\"undefined\"===typeof FinalizationGroup){attachFinalizer=(handle=>handle);return handle}finalizationGroup=new FinalizationGroup(function(iter){for(var result=iter.next();!result.done;result=iter.next()){var $$=result.value;if(!$$.ptr){console.warn(\"object already deleted: \"+$$.ptr)}else{releaseClassHandle($$)}}});attachFinalizer=(handle=>{finalizationGroup.register(handle,handle.$$,handle.$$);return handle});detachFinalizer=(handle=>{finalizationGroup.unregister(handle.$$)});return attachFinalizer(handle)}function ClassHandle_clone(){if(!this.$$.ptr){throwInstanceAlreadyDeleted(this)}if(this.$$.preservePointerOnDelete){this.$$.count.value+=1;return this}else{var clone=attachFinalizer(Object.create(Object.getPrototypeOf(this),{$$:{value:shallowCopyInternalPointer(this.$$)}}));clone.$$.count.value+=1;clone.$$.deleteScheduled=false;return clone}}function ClassHandle_delete(){if(!this.$$.ptr){throwInstanceAlreadyDeleted(this)}if(this.$$.deleteScheduled&&!this.$$.preservePointerOnDelete){throwBindingError(\"Object already scheduled for deletion\")}detachFinalizer(this);releaseClassHandle(this.$$);if(!this.$$.preservePointerOnDelete){this.$$.smartPtr=undefined;this.$$.ptr=undefined}}function ClassHandle_isDeleted(){return!this.$$.ptr}var delayFunction=undefined;var deletionQueue=[];function flushPendingDeletes(){while(deletionQueue.length){var obj=deletionQueue.pop();obj.$$.deleteScheduled=false;obj[\"delete\"]()}}function ClassHandle_deleteLater(){if(!this.$$.ptr){throwInstanceAlreadyDeleted(this)}if(this.$$.deleteScheduled&&!this.$$.preservePointerOnDelete){throwBindingError(\"Object already scheduled for deletion\")}deletionQueue.push(this);if(deletionQueue.length===1&&delayFunction){delayFunction(flushPendingDeletes)}this.$$.deleteScheduled=true;return this}function init_ClassHandle(){ClassHandle.prototype[\"isAliasOf\"]=ClassHandle_isAliasOf;ClassHandle.prototype[\"clone\"]=ClassHandle_clone;ClassHandle.prototype[\"delete\"]=ClassHandle_delete;ClassHandle.prototype[\"isDeleted\"]=ClassHandle_isDeleted;ClassHandle.prototype[\"deleteLater\"]=ClassHandle_deleteLater}function ClassHandle(){}var registeredPointers={};function ensureOverloadTable(proto,methodName,humanName){if(undefined===proto[methodName].overloadTable){var prevFunc=proto[methodName];proto[methodName]=function(){if(!proto[methodName].overloadTable.hasOwnProperty(arguments.length)){throwBindingError(\"Function '\"+humanName+\"' called with an invalid number of arguments (\"+arguments.length+\") - expects one of (\"+proto[methodName].overloadTable+\")!\")}return proto[methodName].overloadTable[arguments.length].apply(this,arguments)};proto[methodName].overloadTable=[];proto[methodName].overloadTable[prevFunc.argCount]=prevFunc}}function exposePublicSymbol(name,value,numArguments){if(Module.hasOwnProperty(name)){if(undefined===numArguments||undefined!==Module[name].overloadTable&&undefined!==Module[name].overloadTable[numArguments]){throwBindingError(\"Cannot register public name '\"+name+\"' twice\")}ensureOverloadTable(Module,name,name);if(Module.hasOwnProperty(numArguments)){throwBindingError(\"Cannot register multiple overloads of a function with the same number of arguments (\"+numArguments+\")!\")}Module[name].overloadTable[numArguments]=value}else{Module[name]=value;if(undefined!==numArguments){Module[name].numArguments=numArguments}}}function RegisteredClass(name,constructor,instancePrototype,rawDestructor,baseClass,getActualType,upcast,downcast){this.name=name;this.constructor=constructor;this.instancePrototype=instancePrototype;this.rawDestructor=rawDestructor;this.baseClass=baseClass;this.getActualType=getActualType;this.upcast=upcast;this.downcast=downcast;this.pureVirtualFunctions=[]}function upcastPointer(ptr,ptrClass,desiredClass){while(ptrClass!==desiredClass){if(!ptrClass.upcast){throwBindingError(\"Expected null or instance of \"+desiredClass.name+\", got an instance of \"+ptrClass.name)}ptr=ptrClass.upcast(ptr);ptrClass=ptrClass.baseClass}return ptr}function constNoSmartPtrRawPointerToWireType(destructors,handle){if(handle===null){if(this.isReference){throwBindingError(\"null is not a valid \"+this.name)}return 0}if(!handle.$$){throwBindingError('Cannot pass \"'+_embind_repr(handle)+'\" as a '+this.name)}if(!handle.$$.ptr){throwBindingError(\"Cannot pass deleted object as a pointer of type \"+this.name)}var handleClass=handle.$$.ptrType.registeredClass;var ptr=upcastPointer(handle.$$.ptr,handleClass,this.registeredClass);return ptr}function genericPointerToWireType(destructors,handle){var ptr;if(handle===null){if(this.isReference){throwBindingError(\"null is not a valid \"+this.name)}if(this.isSmartPointer){ptr=this.rawConstructor();if(destructors!==null){destructors.push(this.rawDestructor,ptr)}return ptr}else{return 0}}if(!handle.$$){throwBindingError('Cannot pass \"'+_embind_repr(handle)+'\" as a '+this.name)}if(!handle.$$.ptr){throwBindingError(\"Cannot pass deleted object as a pointer of type \"+this.name)}if(!this.isConst&&handle.$$.ptrType.isConst){throwBindingError(\"Cannot convert argument of type \"+(handle.$$.smartPtrType?handle.$$.smartPtrType.name:handle.$$.ptrType.name)+\" to parameter type \"+this.name)}var handleClass=handle.$$.ptrType.registeredClass;ptr=upcastPointer(handle.$$.ptr,handleClass,this.registeredClass);if(this.isSmartPointer){if(undefined===handle.$$.smartPtr){throwBindingError(\"Passing raw pointer to smart pointer is illegal\")}switch(this.sharingPolicy){case 0:if(handle.$$.smartPtrType===this){ptr=handle.$$.smartPtr}else{throwBindingError(\"Cannot convert argument of type \"+(handle.$$.smartPtrType?handle.$$.smartPtrType.name:handle.$$.ptrType.name)+\" to parameter type \"+this.name)}break;case 1:ptr=handle.$$.smartPtr;break;case 2:if(handle.$$.smartPtrType===this){ptr=handle.$$.smartPtr}else{var clonedHandle=handle[\"clone\"]();ptr=this.rawShare(ptr,Emval.toHandle(function(){clonedHandle[\"delete\"]()}));if(destructors!==null){destructors.push(this.rawDestructor,ptr)}}break;default:throwBindingError(\"Unsupporting sharing policy\")}}return ptr}function nonConstNoSmartPtrRawPointerToWireType(destructors,handle){if(handle===null){if(this.isReference){throwBindingError(\"null is not a valid \"+this.name)}return 0}if(!handle.$$){throwBindingError('Cannot pass \"'+_embind_repr(handle)+'\" as a '+this.name)}if(!handle.$$.ptr){throwBindingError(\"Cannot pass deleted object as a pointer of type \"+this.name)}if(handle.$$.ptrType.isConst){throwBindingError(\"Cannot convert argument of type \"+handle.$$.ptrType.name+\" to parameter type \"+this.name)}var handleClass=handle.$$.ptrType.registeredClass;var ptr=upcastPointer(handle.$$.ptr,handleClass,this.registeredClass);return ptr}function simpleReadValueFromPointer(pointer){return this[\"fromWireType\"](GROWABLE_HEAP_U32()[pointer>>>2])}function RegisteredPointer_getPointee(ptr){if(this.rawGetPointee){ptr=this.rawGetPointee(ptr)}return ptr}function RegisteredPointer_destructor(ptr){if(this.rawDestructor){this.rawDestructor(ptr)}}function RegisteredPointer_deleteObject(handle){if(handle!==null){handle[\"delete\"]()}}function downcastPointer(ptr,ptrClass,desiredClass){if(ptrClass===desiredClass){return ptr}if(undefined===desiredClass.baseClass){return null}var rv=downcastPointer(ptr,ptrClass,desiredClass.baseClass);if(rv===null){return null}return desiredClass.downcast(rv)}function getInheritedInstanceCount(){return Object.keys(registeredInstances).length}function getLiveInheritedInstances(){var rv=[];for(var k in registeredInstances){if(registeredInstances.hasOwnProperty(k)){rv.push(registeredInstances[k])}}return rv}function setDelayFunction(fn){delayFunction=fn;if(deletionQueue.length&&delayFunction){delayFunction(flushPendingDeletes)}}function init_embind(){Module[\"getInheritedInstanceCount\"]=getInheritedInstanceCount;Module[\"getLiveInheritedInstances\"]=getLiveInheritedInstances;Module[\"flushPendingDeletes\"]=flushPendingDeletes;Module[\"setDelayFunction\"]=setDelayFunction}var registeredInstances={};function getBasestPointer(class_,ptr){if(ptr===undefined){throwBindingError(\"ptr should not be undefined\")}while(class_.baseClass){ptr=class_.upcast(ptr);class_=class_.baseClass}return ptr}function getInheritedInstance(class_,ptr){ptr=getBasestPointer(class_,ptr);return registeredInstances[ptr]}function makeClassHandle(prototype,record){if(!record.ptrType||!record.ptr){throwInternalError(\"makeClassHandle requires ptr and ptrType\")}var hasSmartPtrType=!!record.smartPtrType;var hasSmartPtr=!!record.smartPtr;if(hasSmartPtrType!==hasSmartPtr){throwInternalError(\"Both smartPtrType and smartPtr must be specified\")}record.count={value:1};return attachFinalizer(Object.create(prototype,{$$:{value:record}}))}function RegisteredPointer_fromWireType(ptr){var rawPointer=this.getPointee(ptr);if(!rawPointer){this.destructor(ptr);return null}var registeredInstance=getInheritedInstance(this.registeredClass,rawPointer);if(undefined!==registeredInstance){if(0===registeredInstance.$$.count.value){registeredInstance.$$.ptr=rawPointer;registeredInstance.$$.smartPtr=ptr;return registeredInstance[\"clone\"]()}else{var rv=registeredInstance[\"clone\"]();this.destructor(ptr);return rv}}function makeDefaultHandle(){if(this.isSmartPointer){return makeClassHandle(this.registeredClass.instancePrototype,{ptrType:this.pointeeType,ptr:rawPointer,smartPtrType:this,smartPtr:ptr})}else{return makeClassHandle(this.registeredClass.instancePrototype,{ptrType:this,ptr:ptr})}}var actualType=this.registeredClass.getActualType(rawPointer);var registeredPointerRecord=registeredPointers[actualType];if(!registeredPointerRecord){return makeDefaultHandle.call(this)}var toType;if(this.isConst){toType=registeredPointerRecord.constPointerType}else{toType=registeredPointerRecord.pointerType}var dp=downcastPointer(rawPointer,this.registeredClass,toType.registeredClass);if(dp===null){return makeDefaultHandle.call(this)}if(this.isSmartPointer){return makeClassHandle(toType.registeredClass.instancePrototype,{ptrType:toType,ptr:dp,smartPtrType:this,smartPtr:ptr})}else{return makeClassHandle(toType.registeredClass.instancePrototype,{ptrType:toType,ptr:dp})}}function init_RegisteredPointer(){RegisteredPointer.prototype.getPointee=RegisteredPointer_getPointee;RegisteredPointer.prototype.destructor=RegisteredPointer_destructor;RegisteredPointer.prototype[\"argPackAdvance\"]=8;RegisteredPointer.prototype[\"readValueFromPointer\"]=simpleReadValueFromPointer;RegisteredPointer.prototype[\"deleteObject\"]=RegisteredPointer_deleteObject;RegisteredPointer.prototype[\"fromWireType\"]=RegisteredPointer_fromWireType}function RegisteredPointer(name,registeredClass,isReference,isConst,isSmartPointer,pointeeType,sharingPolicy,rawGetPointee,rawConstructor,rawShare,rawDestructor){this.name=name;this.registeredClass=registeredClass;this.isReference=isReference;this.isConst=isConst;this.isSmartPointer=isSmartPointer;this.pointeeType=pointeeType;this.sharingPolicy=sharingPolicy;this.rawGetPointee=rawGetPointee;this.rawConstructor=rawConstructor;this.rawShare=rawShare;this.rawDestructor=rawDestructor;if(!isSmartPointer&&registeredClass.baseClass===undefined){if(isConst){this[\"toWireType\"]=constNoSmartPtrRawPointerToWireType;this.destructorFunction=null}else{this[\"toWireType\"]=nonConstNoSmartPtrRawPointerToWireType;this.destructorFunction=null}}else{this[\"toWireType\"]=genericPointerToWireType}}function replacePublicSymbol(name,value,numArguments){if(!Module.hasOwnProperty(name)){throwInternalError(\"Replacing nonexistant public symbol\")}if(undefined!==Module[name].overloadTable&&undefined!==numArguments){Module[name].overloadTable[numArguments]=value}else{Module[name]=value;Module[name].argCount=numArguments}}function dynCallLegacy(sig,ptr,args){var f=Module[\"dynCall_\"+sig];return args&&args.length?f.apply(null,[ptr].concat(args)):f.call(null,ptr)}function dynCall(sig,ptr,args){if(sig.includes(\"j\")){return dynCallLegacy(sig,ptr,args)}return getWasmTableEntry(ptr).apply(null,args)}function getDynCaller(sig,ptr){var argCache=[];return function(){argCache.length=arguments.length;for(var i=0;i<arguments.length;i++){argCache[i]=arguments[i]}return dynCall(sig,ptr,argCache)}}function embind__requireFunction(signature,rawFunction){signature=readLatin1String(signature);function makeDynCaller(){if(signature.includes(\"j\")){return getDynCaller(signature,rawFunction)}return getWasmTableEntry(rawFunction)}var fp=makeDynCaller();if(typeof fp!==\"function\"){throwBindingError(\"unknown function pointer with signature \"+signature+\": \"+rawFunction)}return fp}var UnboundTypeError=undefined;function getTypeName(type){var ptr=___getTypeName(type);var rv=readLatin1String(ptr);_free(ptr);return rv}function throwUnboundTypeError(message,types){var unboundTypes=[];var seen={};function visit(type){if(seen[type]){return}if(registeredTypes[type]){return}if(typeDependencies[type]){typeDependencies[type].forEach(visit);return}unboundTypes.push(type);seen[type]=true}types.forEach(visit);throw new UnboundTypeError(message+\": \"+unboundTypes.map(getTypeName).join([\", \"]))}function __embind_register_class(rawType,rawPointerType,rawConstPointerType,baseClassRawType,getActualTypeSignature,getActualType,upcastSignature,upcast,downcastSignature,downcast,name,destructorSignature,rawDestructor){name=readLatin1String(name);getActualType=embind__requireFunction(getActualTypeSignature,getActualType);if(upcast){upcast=embind__requireFunction(upcastSignature,upcast)}if(downcast){downcast=embind__requireFunction(downcastSignature,downcast)}rawDestructor=embind__requireFunction(destructorSignature,rawDestructor);var legalFunctionName=makeLegalFunctionName(name);exposePublicSymbol(legalFunctionName,function(){throwUnboundTypeError(\"Cannot construct \"+name+\" due to unbound types\",[baseClassRawType])});whenDependentTypesAreResolved([rawType,rawPointerType,rawConstPointerType],baseClassRawType?[baseClassRawType]:[],function(base){base=base[0];var baseClass;var basePrototype;if(baseClassRawType){baseClass=base.registeredClass;basePrototype=baseClass.instancePrototype}else{basePrototype=ClassHandle.prototype}var constructor=createNamedFunction(legalFunctionName,function(){if(Object.getPrototypeOf(this)!==instancePrototype){throw new BindingError(\"Use 'new' to construct \"+name)}if(undefined===registeredClass.constructor_body){throw new BindingError(name+\" has no accessible constructor\")}var body=registeredClass.constructor_body[arguments.length];if(undefined===body){throw new BindingError(\"Tried to invoke ctor of \"+name+\" with invalid number of parameters (\"+arguments.length+\") - expected (\"+Object.keys(registeredClass.constructor_body).toString()+\") parameters instead!\")}return body.apply(this,arguments)});var instancePrototype=Object.create(basePrototype,{constructor:{value:constructor}});constructor.prototype=instancePrototype;var registeredClass=new RegisteredClass(name,constructor,instancePrototype,rawDestructor,baseClass,getActualType,upcast,downcast);var referenceConverter=new RegisteredPointer(name,registeredClass,true,false,false);var pointerConverter=new RegisteredPointer(name+\"*\",registeredClass,false,false,false);var constPointerConverter=new RegisteredPointer(name+\" const*\",registeredClass,false,true,false);registeredPointers[rawType]={pointerType:pointerConverter,constPointerType:constPointerConverter};replacePublicSymbol(legalFunctionName,constructor);return[referenceConverter,pointerConverter,constPointerConverter]})}function heap32VectorToArray(count,firstElement){var array=[];for(var i=0;i<count;i++){array.push(GROWABLE_HEAP_I32()[(firstElement>>2)+i>>>0])}return array}function runDestructors(destructors){while(destructors.length){var ptr=destructors.pop();var del=destructors.pop();del(ptr)}}function __embind_register_class_constructor(rawClassType,argCount,rawArgTypesAddr,invokerSignature,invoker,rawConstructor){assert(argCount>0);var rawArgTypes=heap32VectorToArray(argCount,rawArgTypesAddr);invoker=embind__requireFunction(invokerSignature,invoker);whenDependentTypesAreResolved([],[rawClassType],function(classType){classType=classType[0];var humanName=\"constructor \"+classType.name;if(undefined===classType.registeredClass.constructor_body){classType.registeredClass.constructor_body=[]}if(undefined!==classType.registeredClass.constructor_body[argCount-1]){throw new BindingError(\"Cannot register multiple constructors with identical number of parameters (\"+(argCount-1)+\") for class '\"+classType.name+\"'! Overload resolution is currently only performed using the parameter count, not actual type info!\")}classType.registeredClass.constructor_body[argCount-1]=(()=>{throwUnboundTypeError(\"Cannot construct \"+classType.name+\" due to unbound types\",rawArgTypes)});whenDependentTypesAreResolved([],rawArgTypes,function(argTypes){argTypes.splice(1,0,null);classType.registeredClass.constructor_body[argCount-1]=craftInvokerFunction(humanName,argTypes,null,invoker,rawConstructor);return[]});return[]})}function new_(constructor,argumentList){if(!(constructor instanceof Function)){throw new TypeError(\"new_ called with constructor type \"+typeof constructor+\" which is not a function\")}var dummy=createNamedFunction(constructor.name||\"unknownFunctionName\",function(){});dummy.prototype=constructor.prototype;var obj=new dummy;var r=constructor.apply(obj,argumentList);return r instanceof Object?r:obj}function craftInvokerFunction(humanName,argTypes,classType,cppInvokerFunc,cppTargetFunc){var argCount=argTypes.length;if(argCount<2){throwBindingError(\"argTypes array size mismatch! Must at least get return value and 'this' types!\")}var isClassMethodFunc=argTypes[1]!==null&&classType!==null;var needsDestructorStack=false;for(var i=1;i<argTypes.length;++i){if(argTypes[i]!==null&&argTypes[i].destructorFunction===undefined){needsDestructorStack=true;break}}var returns=argTypes[0].name!==\"void\";var argsList=\"\";var argsListWired=\"\";for(var i=0;i<argCount-2;++i){argsList+=(i!==0?\", \":\"\")+\"arg\"+i;argsListWired+=(i!==0?\", \":\"\")+\"arg\"+i+\"Wired\"}var invokerFnBody=\"return function \"+makeLegalFunctionName(humanName)+\"(\"+argsList+\") {\\n\"+\"if (arguments.length !== \"+(argCount-2)+\") {\\n\"+\"throwBindingError('function \"+humanName+\" called with ' + arguments.length + ' arguments, expected \"+(argCount-2)+\" args!');\\n\"+\"}\\n\";if(needsDestructorStack){invokerFnBody+=\"var destructors = [];\\n\"}var dtorStack=needsDestructorStack?\"destructors\":\"null\";var args1=[\"throwBindingError\",\"invoker\",\"fn\",\"runDestructors\",\"retType\",\"classParam\"];var args2=[throwBindingError,cppInvokerFunc,cppTargetFunc,runDestructors,argTypes[0],argTypes[1]];if(isClassMethodFunc){invokerFnBody+=\"var thisWired = classParam.toWireType(\"+dtorStack+\", this);\\n\"}for(var i=0;i<argCount-2;++i){invokerFnBody+=\"var arg\"+i+\"Wired = argType\"+i+\".toWireType(\"+dtorStack+\", arg\"+i+\"); // \"+argTypes[i+2].name+\"\\n\";args1.push(\"argType\"+i);args2.push(argTypes[i+2])}if(isClassMethodFunc){argsListWired=\"thisWired\"+(argsListWired.length>0?\", \":\"\")+argsListWired}invokerFnBody+=(returns?\"var rv = \":\"\")+\"invoker(fn\"+(argsListWired.length>0?\", \":\"\")+argsListWired+\");\\n\";if(needsDestructorStack){invokerFnBody+=\"runDestructors(destructors);\\n\"}else{for(var i=isClassMethodFunc?1:2;i<argTypes.length;++i){var paramName=i===1?\"thisWired\":\"arg\"+(i-2)+\"Wired\";if(argTypes[i].destructorFunction!==null){invokerFnBody+=paramName+\"_dtor(\"+paramName+\"); // \"+argTypes[i].name+\"\\n\";args1.push(paramName+\"_dtor\");args2.push(argTypes[i].destructorFunction)}}}if(returns){invokerFnBody+=\"var ret = retType.fromWireType(rv);\\n\"+\"return ret;\\n\"}else{}invokerFnBody+=\"}\\n\";args1.push(invokerFnBody);var invokerFunction=new_(Function,args1).apply(null,args2);return invokerFunction}function __embind_register_class_function(rawClassType,methodName,argCount,rawArgTypesAddr,invokerSignature,rawInvoker,context,isPureVirtual){var rawArgTypes=heap32VectorToArray(argCount,rawArgTypesAddr);methodName=readLatin1String(methodName);rawInvoker=embind__requireFunction(invokerSignature,rawInvoker);whenDependentTypesAreResolved([],[rawClassType],function(classType){classType=classType[0];var humanName=classType.name+\".\"+methodName;if(methodName.startsWith(\"@@\")){methodName=Symbol[methodName.substring(2)]}if(isPureVirtual){classType.registeredClass.pureVirtualFunctions.push(methodName)}function unboundTypesHandler(){throwUnboundTypeError(\"Cannot call \"+humanName+\" due to unbound types\",rawArgTypes)}var proto=classType.registeredClass.instancePrototype;var method=proto[methodName];if(undefined===method||undefined===method.overloadTable&&method.className!==classType.name&&method.argCount===argCount-2){unboundTypesHandler.argCount=argCount-2;unboundTypesHandler.className=classType.name;proto[methodName]=unboundTypesHandler}else{ensureOverloadTable(proto,methodName,humanName);proto[methodName].overloadTable[argCount-2]=unboundTypesHandler}whenDependentTypesAreResolved([],rawArgTypes,function(argTypes){var memberFunction=craftInvokerFunction(humanName,argTypes,classType,rawInvoker,context);if(undefined===proto[methodName].overloadTable){memberFunction.argCount=argCount-2;proto[methodName]=memberFunction}else{proto[methodName].overloadTable[argCount-2]=memberFunction}return[]});return[]})}var emval_free_list=[];var emval_handle_array=[{},{value:undefined},{value:null},{value:true},{value:false}];function __emval_decref(handle){if(handle>4&&0===--emval_handle_array[handle].refcount){emval_handle_array[handle]=undefined;emval_free_list.push(handle)}}function count_emval_handles(){var count=0;for(var i=5;i<emval_handle_array.length;++i){if(emval_handle_array[i]!==undefined){++count}}return count}function get_first_emval(){for(var i=5;i<emval_handle_array.length;++i){if(emval_handle_array[i]!==undefined){return emval_handle_array[i]}}return null}function init_emval(){Module[\"count_emval_handles\"]=count_emval_handles;Module[\"get_first_emval\"]=get_first_emval}var Emval={toValue:function(handle){if(!handle){throwBindingError(\"Cannot use deleted val. handle = \"+handle)}return emval_handle_array[handle].value},toHandle:function(value){switch(value){case undefined:{return 1}case null:{return 2}case true:{return 3}case false:{return 4}default:{var handle=emval_free_list.length?emval_free_list.pop():emval_handle_array.length;emval_handle_array[handle]={refcount:1,value:value};return handle}}}};function __embind_register_emval(rawType,name){name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":function(handle){var rv=Emval.toValue(handle);__emval_decref(handle);return rv},\"toWireType\":function(destructors,value){return Emval.toHandle(value)},\"argPackAdvance\":8,\"readValueFromPointer\":simpleReadValueFromPointer,destructorFunction:null})}function _embind_repr(v){if(v===null){return\"null\"}var t=typeof v;if(t===\"object\"||t===\"array\"||t===\"function\"){return v.toString()}else{return\"\"+v}}function floatReadValueFromPointer(name,shift){switch(shift){case 2:return function(pointer){return this[\"fromWireType\"](GROWABLE_HEAP_F32()[pointer>>>2])};case 3:return function(pointer){return this[\"fromWireType\"](GROWABLE_HEAP_F64()[pointer>>>3])};default:throw new TypeError(\"Unknown float type: \"+name)}}function __embind_register_float(rawType,name,size){var shift=getShiftFromSize(size);name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":function(value){return value},\"toWireType\":function(destructors,value){return value},\"argPackAdvance\":8,\"readValueFromPointer\":floatReadValueFromPointer(name,shift),destructorFunction:null})}function __embind_register_function(name,argCount,rawArgTypesAddr,signature,rawInvoker,fn){var argTypes=heap32VectorToArray(argCount,rawArgTypesAddr);name=readLatin1String(name);rawInvoker=embind__requireFunction(signature,rawInvoker);exposePublicSymbol(name,function(){throwUnboundTypeError(\"Cannot call \"+name+\" due to unbound types\",argTypes)},argCount-1);whenDependentTypesAreResolved([],argTypes,function(argTypes){var invokerArgsArray=[argTypes[0],null].concat(argTypes.slice(1));replacePublicSymbol(name,craftInvokerFunction(name,invokerArgsArray,null,rawInvoker,fn),argCount-1);return[]})}function integerReadValueFromPointer(name,shift,signed){switch(shift){case 0:return signed?function readS8FromPointer(pointer){return GROWABLE_HEAP_I8()[pointer>>>0]}:function readU8FromPointer(pointer){return GROWABLE_HEAP_U8()[pointer>>>0]};case 1:return signed?function readS16FromPointer(pointer){return GROWABLE_HEAP_I16()[pointer>>>1]}:function readU16FromPointer(pointer){return GROWABLE_HEAP_U16()[pointer>>>1]};case 2:return signed?function readS32FromPointer(pointer){return GROWABLE_HEAP_I32()[pointer>>>2]}:function readU32FromPointer(pointer){return GROWABLE_HEAP_U32()[pointer>>>2]};default:throw new TypeError(\"Unknown integer type: \"+name)}}function __embind_register_integer(primitiveType,name,size,minRange,maxRange){name=readLatin1String(name);if(maxRange===-1){maxRange=4294967295}var shift=getShiftFromSize(size);var fromWireType=value=>value;if(minRange===0){var bitshift=32-8*size;fromWireType=(value=>value<<bitshift>>>bitshift)}var isUnsignedType=name.includes(\"unsigned\");var checkAssertions=(value,toTypeName)=>{};var toWireType;if(isUnsignedType){toWireType=function(destructors,value){checkAssertions(value,this.name);return value>>>0}}else{toWireType=function(destructors,value){checkAssertions(value,this.name);return value}}registerType(primitiveType,{name:name,\"fromWireType\":fromWireType,\"toWireType\":toWireType,\"argPackAdvance\":8,\"readValueFromPointer\":integerReadValueFromPointer(name,shift,minRange!==0),destructorFunction:null})}function __embind_register_memory_view(rawType,dataTypeIndex,name){var typeMapping=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array];var TA=typeMapping[dataTypeIndex];function decodeMemoryView(handle){handle=handle>>2;var heap=GROWABLE_HEAP_U32();var size=heap[handle>>>0];var data=heap[handle+1>>>0];return new TA(buffer,data,size)}name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":decodeMemoryView,\"argPackAdvance\":8,\"readValueFromPointer\":decodeMemoryView},{ignoreDuplicateRegistrations:true})}function __embind_register_std_string(rawType,name){name=readLatin1String(name);var stdStringIsUTF8=name===\"std::string\";registerType(rawType,{name:name,\"fromWireType\":function(value){var length=GROWABLE_HEAP_U32()[value>>>2];var str;if(stdStringIsUTF8){var decodeStartPtr=value+4;for(var i=0;i<=length;++i){var currentBytePtr=value+4+i;if(i==length||GROWABLE_HEAP_U8()[currentBytePtr>>>0]==0){var maxRead=currentBytePtr-decodeStartPtr;var stringSegment=UTF8ToString(decodeStartPtr,maxRead);if(str===undefined){str=stringSegment}else{str+=String.fromCharCode(0);str+=stringSegment}decodeStartPtr=currentBytePtr+1}}}else{var a=new Array(length);for(var i=0;i<length;++i){a[i]=String.fromCharCode(GROWABLE_HEAP_U8()[value+4+i>>>0])}str=a.join(\"\")}_free(value);return str},\"toWireType\":function(destructors,value){if(value instanceof ArrayBuffer){value=new Uint8Array(value)}var getLength;var valueIsOfTypeString=typeof value===\"string\";if(!(valueIsOfTypeString||value instanceof Uint8Array||value instanceof Uint8ClampedArray||value instanceof Int8Array)){throwBindingError(\"Cannot pass non-string to std::string\")}if(stdStringIsUTF8&&valueIsOfTypeString){getLength=(()=>lengthBytesUTF8(value))}else{getLength=(()=>value.length)}var length=getLength();var ptr=_malloc(4+length+1);ptr>>>=0;GROWABLE_HEAP_U32()[ptr>>>2]=length;if(stdStringIsUTF8&&valueIsOfTypeString){stringToUTF8(value,ptr+4,length+1)}else{if(valueIsOfTypeString){for(var i=0;i<length;++i){var charCode=value.charCodeAt(i);if(charCode>255){_free(ptr);throwBindingError(\"String has UTF-16 code units that do not fit in 8 bits\")}GROWABLE_HEAP_U8()[ptr+4+i>>>0]=charCode}}else{for(var i=0;i<length;++i){GROWABLE_HEAP_U8()[ptr+4+i>>>0]=value[i]}}}if(destructors!==null){destructors.push(_free,ptr)}return ptr},\"argPackAdvance\":8,\"readValueFromPointer\":simpleReadValueFromPointer,destructorFunction:function(ptr){_free(ptr)}})}function __embind_register_std_wstring(rawType,charSize,name){name=readLatin1String(name);var decodeString,encodeString,getHeap,lengthBytesUTF,shift;if(charSize===2){decodeString=UTF16ToString;encodeString=stringToUTF16;lengthBytesUTF=lengthBytesUTF16;getHeap=(()=>GROWABLE_HEAP_U16());shift=1}else if(charSize===4){decodeString=UTF32ToString;encodeString=stringToUTF32;lengthBytesUTF=lengthBytesUTF32;getHeap=(()=>GROWABLE_HEAP_U32());shift=2}registerType(rawType,{name:name,\"fromWireType\":function(value){var length=GROWABLE_HEAP_U32()[value>>>2];var HEAP=getHeap();var str;var decodeStartPtr=value+4;for(var i=0;i<=length;++i){var currentBytePtr=value+4+i*charSize;if(i==length||HEAP[currentBytePtr>>>shift]==0){var maxReadBytes=currentBytePtr-decodeStartPtr;var stringSegment=decodeString(decodeStartPtr,maxReadBytes);if(str===undefined){str=stringSegment}else{str+=String.fromCharCode(0);str+=stringSegment}decodeStartPtr=currentBytePtr+charSize}}_free(value);return str},\"toWireType\":function(destructors,value){if(!(typeof value===\"string\")){throwBindingError(\"Cannot pass non-string to C++ string type \"+name)}var length=lengthBytesUTF(value);var ptr=_malloc(4+length+charSize);ptr>>>=0;GROWABLE_HEAP_U32()[ptr>>>2]=length>>shift;encodeString(value,ptr+4,length+charSize);if(destructors!==null){destructors.push(_free,ptr)}return ptr},\"argPackAdvance\":8,\"readValueFromPointer\":simpleReadValueFromPointer,destructorFunction:function(ptr){_free(ptr)}})}function __embind_register_void(rawType,name){name=readLatin1String(name);registerType(rawType,{isVoid:true,name:name,\"argPackAdvance\":0,\"fromWireType\":function(){return undefined},\"toWireType\":function(destructors,o){return undefined}})}function __emscripten_default_pthread_stack_size(){return 2097152}function __emscripten_futex_wait_non_blocking(addr,val,timeout){var tNow=performance.now();var tEnd=tNow+timeout;var lastAddr=Atomics.exchange(GROWABLE_HEAP_I32(),__emscripten_main_thread_futex>>2,addr);while(1){tNow=performance.now();if(tNow>tEnd){lastAddr=Atomics.exchange(GROWABLE_HEAP_I32(),__emscripten_main_thread_futex>>2,0);return-73}lastAddr=Atomics.exchange(GROWABLE_HEAP_I32(),__emscripten_main_thread_futex>>2,0);if(lastAddr==0){break}_emscripten_main_thread_process_queued_calls();if(Atomics.load(GROWABLE_HEAP_I32(),addr>>2)!=val){return-6}lastAddr=Atomics.exchange(GROWABLE_HEAP_I32(),__emscripten_main_thread_futex>>2,addr)}return 0}function __emscripten_notify_thread_queue(targetThreadId,mainThreadId){if(targetThreadId==mainThreadId){postMessage({\"cmd\":\"processQueuedMainThreadWork\"})}else if(ENVIRONMENT_IS_PTHREAD){postMessage({\"targetThread\":targetThreadId,\"cmd\":\"processThreadQueue\"})}else{var pthread=PThread.pthreads[targetThreadId];var worker=pthread&&pthread.worker;if(!worker){return}worker.postMessage({\"cmd\":\"processThreadQueue\"})}return 1}function __emval_incref(handle){if(handle>4){emval_handle_array[handle].refcount+=1}}function requireRegisteredType(rawType,humanName){var impl=registeredTypes[rawType];if(undefined===impl){throwBindingError(humanName+\" has unknown type \"+getTypeName(rawType))}return impl}function __emval_take_value(type,argv){type=requireRegisteredType(type,\"_emval_take_value\");var v=type[\"readValueFromPointer\"](argv);return Emval.toHandle(v)}function _abort(){abort(\"\")}function _emscripten_check_blocking_allowed(){if(ENVIRONMENT_IS_WORKER)return;warnOnce(\"Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread\")}function _emscripten_memcpy_big(dest,src,num){GROWABLE_HEAP_U8().copyWithin(dest>>>0,src>>>0,src+num>>>0)}function _emscripten_proxy_to_main_thread_js(index,sync){var numCallArgs=arguments.length-2;var outerArgs=arguments;return withStackSave(function(){var serializedNumCallArgs=numCallArgs;var args=stackAlloc(serializedNumCallArgs*8);var b=args>>3;for(var i=0;i<numCallArgs;i++){var arg=outerArgs[2+i];GROWABLE_HEAP_F64()[b+i>>>0]=arg}return _emscripten_run_in_main_runtime_thread_js(index,serializedNumCallArgs,args,sync)})}var _emscripten_receive_on_main_thread_js_callArgs=[];function _emscripten_receive_on_main_thread_js(index,numCallArgs,args){_emscripten_receive_on_main_thread_js_callArgs.length=numCallArgs;var b=args>>3;for(var i=0;i<numCallArgs;i++){_emscripten_receive_on_main_thread_js_callArgs[i]=GROWABLE_HEAP_F64()[b+i>>>0]}var isEmAsmConst=index<0;var func=!isEmAsmConst?proxiedFunctionTable[index]:ASM_CONSTS[-index-1];return func.apply(null,_emscripten_receive_on_main_thread_js_callArgs)}function emscripten_realloc_buffer(size){try{wasmMemory.grow(size-buffer.byteLength+65535>>>16);updateGlobalBufferAndViews(wasmMemory.buffer);return 1}catch(e){}}function _emscripten_resize_heap(requestedSize){var oldSize=GROWABLE_HEAP_U8().length;requestedSize=requestedSize>>>0;if(requestedSize<=oldSize){return false}var maxHeapSize=4294901760;if(requestedSize>maxHeapSize){return false}for(var cutDown=1;cutDown<=4;cutDown*=2){var overGrownHeapSize=oldSize*(1+.2/cutDown);overGrownHeapSize=Math.min(overGrownHeapSize,requestedSize+100663296);var newSize=Math.min(maxHeapSize,alignUp(Math.max(requestedSize,overGrownHeapSize),65536));var replacement=emscripten_realloc_buffer(newSize);if(replacement){return true}}return false}var JSEvents={inEventHandler:0,removeAllEventListeners:function(){for(var i=JSEvents.eventHandlers.length-1;i>=0;--i){JSEvents._removeHandler(i)}JSEvents.eventHandlers=[];JSEvents.deferredCalls=[]},registerRemoveEventListeners:function(){if(!JSEvents.removeEventListenersRegistered){__ATEXIT__.push(JSEvents.removeAllEventListeners);JSEvents.removeEventListenersRegistered=true}},deferredCalls:[],deferCall:function(targetFunction,precedence,argsList){function arraysHaveEqualContent(arrA,arrB){if(arrA.length!=arrB.length)return false;for(var i in arrA){if(arrA[i]!=arrB[i])return false}return true}for(var i in JSEvents.deferredCalls){var call=JSEvents.deferredCalls[i];if(call.targetFunction==targetFunction&&arraysHaveEqualContent(call.argsList,argsList)){return}}JSEvents.deferredCalls.push({targetFunction:targetFunction,precedence:precedence,argsList:argsList});JSEvents.deferredCalls.sort(function(x,y){return x.precedence<y.precedence})},removeDeferredCalls:function(targetFunction){for(var i=0;i<JSEvents.deferredCalls.length;++i){if(JSEvents.deferredCalls[i].targetFunction==targetFunction){JSEvents.deferredCalls.splice(i,1);--i}}},canPerformEventHandlerRequests:function(){return JSEvents.inEventHandler&&JSEvents.currentEventHandler.allowsDeferredCalls},runDeferredCalls:function(){if(!JSEvents.canPerformEventHandlerRequests()){return}for(var i=0;i<JSEvents.deferredCalls.length;++i){var call=JSEvents.deferredCalls[i];JSEvents.deferredCalls.splice(i,1);--i;call.targetFunction.apply(null,call.argsList)}},eventHandlers:[],removeAllHandlersOnTarget:function(target,eventTypeString){for(var i=0;i<JSEvents.eventHandlers.length;++i){if(JSEvents.eventHandlers[i].target==target&&(!eventTypeString||eventTypeString==JSEvents.eventHandlers[i].eventTypeString)){JSEvents._removeHandler(i--)}}},_removeHandler:function(i){var h=JSEvents.eventHandlers[i];h.target.removeEventListener(h.eventTypeString,h.eventListenerFunc,h.useCapture);JSEvents.eventHandlers.splice(i,1)},registerOrRemoveHandler:function(eventHandler){var jsEventHandler=function jsEventHandler(event){++JSEvents.inEventHandler;JSEvents.currentEventHandler=eventHandler;JSEvents.runDeferredCalls();eventHandler.handlerFunc(event);JSEvents.runDeferredCalls();--JSEvents.inEventHandler};if(eventHandler.callbackfunc){eventHandler.eventListenerFunc=jsEventHandler;eventHandler.target.addEventListener(eventHandler.eventTypeString,jsEventHandler,eventHandler.useCapture);JSEvents.eventHandlers.push(eventHandler);JSEvents.registerRemoveEventListeners()}else{for(var i=0;i<JSEvents.eventHandlers.length;++i){if(JSEvents.eventHandlers[i].target==eventHandler.target&&JSEvents.eventHandlers[i].eventTypeString==eventHandler.eventTypeString){JSEvents._removeHandler(i--)}}}},queueEventHandlerOnThread_iiii:function(targetThread,eventHandlerFunc,eventTypeId,eventData,userData){withStackSave(function(){var varargs=stackAlloc(12);GROWABLE_HEAP_I32()[varargs>>>2]=eventTypeId;GROWABLE_HEAP_I32()[varargs+4>>>2]=eventData;GROWABLE_HEAP_I32()[varargs+8>>>2]=userData;_emscripten_dispatch_to_thread_(targetThread,637534208,eventHandlerFunc,eventData,varargs)})},getTargetThreadForEventCallback:function(targetThread){switch(targetThread){case 1:return 0;case 2:return PThread.currentProxiedOperationCallerThread;default:return targetThread}},getNodeNameForTarget:function(target){if(!target)return\"\";if(target==window)return\"#window\";if(target==screen)return\"#screen\";return target&&target.nodeName?target.nodeName:\"\"},fullscreenEnabled:function(){return document.fullscreenEnabled||document.webkitFullscreenEnabled}};function stringToNewUTF8(jsString){var length=lengthBytesUTF8(jsString)+1;var cString=_malloc(length);stringToUTF8(jsString,cString,length);return cString}function _emscripten_set_offscreencanvas_size_on_target_thread_js(targetThread,targetCanvas,width,height){withStackSave(function(){var varargs=stackAlloc(12);var targetCanvasPtr=0;if(targetCanvas){targetCanvasPtr=stringToNewUTF8(targetCanvas)}GROWABLE_HEAP_I32()[varargs>>>2]=targetCanvasPtr;GROWABLE_HEAP_I32()[varargs+4>>>2]=width;GROWABLE_HEAP_I32()[varargs+8>>>2]=height;_emscripten_dispatch_to_thread_(targetThread,657457152,0,targetCanvasPtr,varargs)})}function _emscripten_set_offscreencanvas_size_on_target_thread(targetThread,targetCanvas,width,height){targetCanvas=targetCanvas?UTF8ToString(targetCanvas):\"\";_emscripten_set_offscreencanvas_size_on_target_thread_js(targetThread,targetCanvas,width,height)}function maybeCStringToJsString(cString){return cString>2?UTF8ToString(cString):cString}var specialHTMLTargets=[0,typeof document!==\"undefined\"?document:0,typeof window!==\"undefined\"?window:0];function findEventTarget(target){target=maybeCStringToJsString(target);var domElement=specialHTMLTargets[target]||(typeof document!==\"undefined\"?document.querySelector(target):undefined);return domElement}function findCanvasEventTarget(target){return findEventTarget(target)}function _emscripten_set_canvas_element_size_calling_thread(target,width,height){var canvas=findCanvasEventTarget(target);if(!canvas)return-4;if(canvas.canvasSharedPtr){GROWABLE_HEAP_I32()[canvas.canvasSharedPtr>>>2]=width;GROWABLE_HEAP_I32()[canvas.canvasSharedPtr+4>>>2]=height}if(canvas.offscreenCanvas||!canvas.controlTransferredOffscreen){if(canvas.offscreenCanvas)canvas=canvas.offscreenCanvas;var autoResizeViewport=false;if(canvas.GLctxObject&&canvas.GLctxObject.GLctx){var prevViewport=canvas.GLctxObject.GLctx.getParameter(2978);autoResizeViewport=prevViewport[0]===0&&prevViewport[1]===0&&prevViewport[2]===canvas.width&&prevViewport[3]===canvas.height}canvas.width=width;canvas.height=height;if(autoResizeViewport){canvas.GLctxObject.GLctx.viewport(0,0,width,height)}}else if(canvas.canvasSharedPtr){var targetThread=GROWABLE_HEAP_I32()[canvas.canvasSharedPtr+8>>>2];_emscripten_set_offscreencanvas_size_on_target_thread(targetThread,target,width,height);return 1}else{return-4}return 0}function _emscripten_set_canvas_element_size_main_thread(target,width,height){if(ENVIRONMENT_IS_PTHREAD)return _emscripten_proxy_to_main_thread_js(9,1,target,width,height);return _emscripten_set_canvas_element_size_calling_thread(target,width,height)}function _emscripten_set_canvas_element_size(target,width,height){var canvas=findCanvasEventTarget(target);if(canvas){return _emscripten_set_canvas_element_size_calling_thread(target,width,height)}else{return _emscripten_set_canvas_element_size_main_thread(target,width,height)}}function _emscripten_unwind_to_js_event_loop(){throw\"unwind\"}function __webgl_enable_ANGLE_instanced_arrays(ctx){var ext=ctx.getExtension(\"ANGLE_instanced_arrays\");if(ext){ctx[\"vertexAttribDivisor\"]=function(index,divisor){ext[\"vertexAttribDivisorANGLE\"](index,divisor)};ctx[\"drawArraysInstanced\"]=function(mode,first,count,primcount){ext[\"drawArraysInstancedANGLE\"](mode,first,count,primcount)};ctx[\"drawElementsInstanced\"]=function(mode,count,type,indices,primcount){ext[\"drawElementsInstancedANGLE\"](mode,count,type,indices,primcount)};return 1}}function __webgl_enable_OES_vertex_array_object(ctx){var ext=ctx.getExtension(\"OES_vertex_array_object\");if(ext){ctx[\"createVertexArray\"]=function(){return ext[\"createVertexArrayOES\"]()};ctx[\"deleteVertexArray\"]=function(vao){ext[\"deleteVertexArrayOES\"](vao)};ctx[\"bindVertexArray\"]=function(vao){ext[\"bindVertexArrayOES\"](vao)};ctx[\"isVertexArray\"]=function(vao){return ext[\"isVertexArrayOES\"](vao)};return 1}}function __webgl_enable_WEBGL_draw_buffers(ctx){var ext=ctx.getExtension(\"WEBGL_draw_buffers\");if(ext){ctx[\"drawBuffers\"]=function(n,bufs){ext[\"drawBuffersWEBGL\"](n,bufs)};return 1}}function __webgl_enable_WEBGL_multi_draw(ctx){return!!(ctx.multiDrawWebgl=ctx.getExtension(\"WEBGL_multi_draw\"))}var GL={counter:1,buffers:[],programs:[],framebuffers:[],renderbuffers:[],textures:[],shaders:[],vaos:[],contexts:{},offscreenCanvases:{},queries:[],stringCache:{},unpackAlignment:4,recordError:function recordError(errorCode){if(!GL.lastError){GL.lastError=errorCode}},getNewId:function(table){var ret=GL.counter++;for(var i=table.length;i<ret;i++){table[i]=null}return ret},getSource:function(shader,count,string,length){var source=\"\";for(var i=0;i<count;++i){var len=length?GROWABLE_HEAP_I32()[length+i*4>>>2]:-1;source+=UTF8ToString(GROWABLE_HEAP_I32()[string+i*4>>>2],len<0?undefined:len)}return source},createContext:function(canvas,webGLContextAttributes){if(!canvas.getContextSafariWebGL2Fixed){canvas.getContextSafariWebGL2Fixed=canvas.getContext;canvas.getContext=function(ver,attrs){var gl=canvas.getContextSafariWebGL2Fixed(ver,attrs);return ver==\"webgl\"==gl instanceof WebGLRenderingContext?gl:null}}var ctx=canvas.getContext(\"webgl\",webGLContextAttributes);if(!ctx)return 0;var handle=GL.registerContext(ctx,webGLContextAttributes);return handle},registerContext:function(ctx,webGLContextAttributes){var handle=_malloc(8);GROWABLE_HEAP_I32()[handle+4>>>2]=_pthread_self();var context={handle:handle,attributes:webGLContextAttributes,version:webGLContextAttributes.majorVersion,GLctx:ctx};if(ctx.canvas)ctx.canvas.GLctxObject=context;GL.contexts[handle]=context;if(typeof webGLContextAttributes.enableExtensionsByDefault===\"undefined\"||webGLContextAttributes.enableExtensionsByDefault){GL.initExtensions(context)}return handle},makeContextCurrent:function(contextHandle){GL.currentContext=GL.contexts[contextHandle];Module.ctx=GLctx=GL.currentContext&&GL.currentContext.GLctx;return!(contextHandle&&!GLctx)},getContext:function(contextHandle){return GL.contexts[contextHandle]},deleteContext:function(contextHandle){if(GL.currentContext===GL.contexts[contextHandle])GL.currentContext=null;if(typeof JSEvents===\"object\")JSEvents.removeAllHandlersOnTarget(GL.contexts[contextHandle].GLctx.canvas);if(GL.contexts[contextHandle]&&GL.contexts[contextHandle].GLctx.canvas)GL.contexts[contextHandle].GLctx.canvas.GLctxObject=undefined;_free(GL.contexts[contextHandle].handle);GL.contexts[contextHandle]=null},initExtensions:function(context){if(!context)context=GL.currentContext;if(context.initExtensionsDone)return;context.initExtensionsDone=true;var GLctx=context.GLctx;__webgl_enable_ANGLE_instanced_arrays(GLctx);__webgl_enable_OES_vertex_array_object(GLctx);__webgl_enable_WEBGL_draw_buffers(GLctx);{GLctx.disjointTimerQueryExt=GLctx.getExtension(\"EXT_disjoint_timer_query\")}__webgl_enable_WEBGL_multi_draw(GLctx);var exts=GLctx.getSupportedExtensions()||[];exts.forEach(function(ext){if(!ext.includes(\"lose_context\")&&!ext.includes(\"debug\")){GLctx.getExtension(ext)}})}};var __emscripten_webgl_power_preferences=[\"default\",\"low-power\",\"high-performance\"];function _emscripten_webgl_do_create_context(target,attributes){var a=attributes>>2;var powerPreference=GROWABLE_HEAP_I32()[a+(24>>2)>>>0];var contextAttributes={\"alpha\":!!GROWABLE_HEAP_I32()[a+(0>>2)>>>0],\"depth\":!!GROWABLE_HEAP_I32()[a+(4>>2)>>>0],\"stencil\":!!GROWABLE_HEAP_I32()[a+(8>>2)>>>0],\"antialias\":!!GROWABLE_HEAP_I32()[a+(12>>2)>>>0],\"premultipliedAlpha\":!!GROWABLE_HEAP_I32()[a+(16>>2)>>>0],\"preserveDrawingBuffer\":!!GROWABLE_HEAP_I32()[a+(20>>2)>>>0],\"powerPreference\":__emscripten_webgl_power_preferences[powerPreference],\"failIfMajorPerformanceCaveat\":!!GROWABLE_HEAP_I32()[a+(28>>2)>>>0],majorVersion:GROWABLE_HEAP_I32()[a+(32>>2)>>>0],minorVersion:GROWABLE_HEAP_I32()[a+(36>>2)>>>0],enableExtensionsByDefault:GROWABLE_HEAP_I32()[a+(40>>2)>>>0],explicitSwapControl:GROWABLE_HEAP_I32()[a+(44>>2)>>>0],proxyContextToMainThread:GROWABLE_HEAP_I32()[a+(48>>2)>>>0],renderViaOffscreenBackBuffer:GROWABLE_HEAP_I32()[a+(52>>2)>>>0]};var canvas=findCanvasEventTarget(target);if(!canvas){return 0}if(contextAttributes.explicitSwapControl){return 0}var contextHandle=GL.createContext(canvas,contextAttributes);return contextHandle}function _emscripten_webgl_create_context(a0,a1){return _emscripten_webgl_do_create_context(a0,a1)}function _fd_close(fd){if(ENVIRONMENT_IS_PTHREAD)return _emscripten_proxy_to_main_thread_js(10,1,fd);try{var stream=SYSCALLS.getStreamFromFD(fd);FS.close(stream);return 0}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))throw e;return e.errno}}function _fd_read(fd,iov,iovcnt,pnum){if(ENVIRONMENT_IS_PTHREAD)return _emscripten_proxy_to_main_thread_js(11,1,fd,iov,iovcnt,pnum);try{var stream=SYSCALLS.getStreamFromFD(fd);var num=SYSCALLS.doReadv(stream,iov,iovcnt);GROWABLE_HEAP_I32()[pnum>>>2]=num;return 0}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))throw e;return e.errno}}function _fd_seek(fd,offset_low,offset_high,whence,newOffset){if(ENVIRONMENT_IS_PTHREAD)return _emscripten_proxy_to_main_thread_js(12,1,fd,offset_low,offset_high,whence,newOffset);try{var stream=SYSCALLS.getStreamFromFD(fd);var HIGH_OFFSET=4294967296;var offset=offset_high*HIGH_OFFSET+(offset_low>>>0);var DOUBLE_LIMIT=9007199254740992;if(offset<=-DOUBLE_LIMIT||offset>=DOUBLE_LIMIT){return-61}FS.llseek(stream,offset,whence);tempI64=[stream.position>>>0,(tempDouble=stream.position,+Math.abs(tempDouble)>=1?tempDouble>0?(Math.min(+Math.floor(tempDouble/4294967296),4294967295)|0)>>>0:~~+Math.ceil((tempDouble-+(~~tempDouble>>>0))/4294967296)>>>0:0)],GROWABLE_HEAP_I32()[newOffset>>>2]=tempI64[0],GROWABLE_HEAP_I32()[newOffset+4>>>2]=tempI64[1];if(stream.getdents&&offset===0&&whence===0)stream.getdents=null;return 0}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))throw e;return e.errno}}function _fd_write(fd,iov,iovcnt,pnum){if(ENVIRONMENT_IS_PTHREAD)return _emscripten_proxy_to_main_thread_js(13,1,fd,iov,iovcnt,pnum);try{var stream=SYSCALLS.getStreamFromFD(fd);var num=SYSCALLS.doWritev(stream,iov,iovcnt);GROWABLE_HEAP_I32()[pnum>>>2]=num;return 0}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))throw e;return e.errno}}function _setTempRet0(val){setTempRet0(val)}function _time(ptr){var ret=Date.now()/1e3|0;if(ptr){GROWABLE_HEAP_I32()[ptr>>>2]=ret}return ret}if(!ENVIRONMENT_IS_PTHREAD)PThread.initMainThread();var FSNode=function(parent,name,mode,rdev){if(!parent){parent=this}this.parent=parent;this.mount=parent.mount;this.mounted=null;this.id=FS.nextInode++;this.name=name;this.mode=mode;this.node_ops={};this.stream_ops={};this.rdev=rdev};var readMode=292|73;var writeMode=146;Object.defineProperties(FSNode.prototype,{read:{get:function(){return(this.mode&readMode)===readMode},set:function(val){val?this.mode|=readMode:this.mode&=~readMode}},write:{get:function(){return(this.mode&writeMode)===writeMode},set:function(val){val?this.mode|=writeMode:this.mode&=~writeMode}},isFolder:{get:function(){return FS.isDir(this.mode)}},isDevice:{get:function(){return FS.isChrdev(this.mode)}}});FS.FSNode=FSNode;FS.staticInit();embind_init_charCodes();BindingError=Module[\"BindingError\"]=extendError(Error,\"BindingError\");InternalError=Module[\"InternalError\"]=extendError(Error,\"InternalError\");init_ClassHandle();init_RegisteredPointer();init_embind();UnboundTypeError=Module[\"UnboundTypeError\"]=extendError(Error,\"UnboundTypeError\");init_emval();var GLctx;var proxiedFunctionTable=[null,exitOnMainThread,___syscall_fcntl64,___syscall_ftruncate64,___syscall_ioctl,___syscall_mmap2,___syscall_munmap,___syscall_open,___syscall_unlink,_emscripten_set_canvas_element_size_main_thread,_fd_close,_fd_read,_fd_seek,_fd_write];var ASSERTIONS=false;function intArrayFromString(stringy,dontAddNull,length){var len=length>0?length:lengthBytesUTF8(stringy)+1;var u8array=new Array(len);var numBytesWritten=stringToUTF8Array(stringy,u8array,0,u8array.length);if(dontAddNull)u8array.length=numBytesWritten;return u8array}var asmLibraryArg={\"__assert_fail\":___assert_fail,\"__clock_gettime\":___clock_gettime,\"__cxa_allocate_exception\":___cxa_allocate_exception,\"__cxa_throw\":___cxa_throw,\"__emscripten_init_main_thread_js\":___emscripten_init_main_thread_js,\"__emscripten_thread_cleanup\":___emscripten_thread_cleanup,\"__pthread_create_js\":___pthread_create_js,\"__syscall_fcntl64\":___syscall_fcntl64,\"__syscall_ftruncate64\":___syscall_ftruncate64,\"__syscall_ioctl\":___syscall_ioctl,\"__syscall_mmap2\":___syscall_mmap2,\"__syscall_munmap\":___syscall_munmap,\"__syscall_open\":___syscall_open,\"__syscall_unlink\":___syscall_unlink,\"_embind_register_bigint\":__embind_register_bigint,\"_embind_register_bool\":__embind_register_bool,\"_embind_register_class\":__embind_register_class,\"_embind_register_class_constructor\":__embind_register_class_constructor,\"_embind_register_class_function\":__embind_register_class_function,\"_embind_register_emval\":__embind_register_emval,\"_embind_register_float\":__embind_register_float,\"_embind_register_function\":__embind_register_function,\"_embind_register_integer\":__embind_register_integer,\"_embind_register_memory_view\":__embind_register_memory_view,\"_embind_register_std_string\":__embind_register_std_string,\"_embind_register_std_wstring\":__embind_register_std_wstring,\"_embind_register_void\":__embind_register_void,\"_emscripten_default_pthread_stack_size\":__emscripten_default_pthread_stack_size,\"_emscripten_futex_wait_non_blocking\":__emscripten_futex_wait_non_blocking,\"_emscripten_notify_thread_queue\":__emscripten_notify_thread_queue,\"_emval_decref\":__emval_decref,\"_emval_incref\":__emval_incref,\"_emval_take_value\":__emval_take_value,\"abort\":_abort,\"clock_gettime\":_clock_gettime,\"emscripten_check_blocking_allowed\":_emscripten_check_blocking_allowed,\"emscripten_get_now\":_emscripten_get_now,\"emscripten_memcpy_big\":_emscripten_memcpy_big,\"emscripten_receive_on_main_thread_js\":_emscripten_receive_on_main_thread_js,\"emscripten_resize_heap\":_emscripten_resize_heap,\"emscripten_set_canvas_element_size\":_emscripten_set_canvas_element_size,\"emscripten_unwind_to_js_event_loop\":_emscripten_unwind_to_js_event_loop,\"emscripten_webgl_create_context\":_emscripten_webgl_create_context,\"exit\":_exit,\"fd_close\":_fd_close,\"fd_read\":_fd_read,\"fd_seek\":_fd_seek,\"fd_write\":_fd_write,\"find_num_threads\":find_num_threads,\"memory\":wasmMemory||Module[\"wasmMemory\"],\"setTempRet0\":_setTempRet0,\"time\":_time};var asm=createWasm();var ___wasm_call_ctors=Module[\"___wasm_call_ctors\"]=function(){return(___wasm_call_ctors=Module[\"___wasm_call_ctors\"]=Module[\"asm\"][\"__wasm_call_ctors\"]).apply(null,arguments)};var _free=Module[\"_free\"]=function(){return(_free=Module[\"_free\"]=Module[\"asm\"][\"free\"]).apply(null,arguments)};var _malloc=Module[\"_malloc\"]=function(){return(_malloc=Module[\"_malloc\"]=Module[\"asm\"][\"malloc\"]).apply(null,arguments)};var ___errno_location=Module[\"___errno_location\"]=function(){return(___errno_location=Module[\"___errno_location\"]=Module[\"asm\"][\"__errno_location\"]).apply(null,arguments)};var _emscripten_tls_init=Module[\"_emscripten_tls_init\"]=function(){return(_emscripten_tls_init=Module[\"_emscripten_tls_init\"]=Module[\"asm\"][\"emscripten_tls_init\"]).apply(null,arguments)};var ___getTypeName=Module[\"___getTypeName\"]=function(){return(___getTypeName=Module[\"___getTypeName\"]=Module[\"asm\"][\"__getTypeName\"]).apply(null,arguments)};var ___embind_register_native_and_builtin_types=Module[\"___embind_register_native_and_builtin_types\"]=function(){return(___embind_register_native_and_builtin_types=Module[\"___embind_register_native_and_builtin_types\"]=Module[\"asm\"][\"__embind_register_native_and_builtin_types\"]).apply(null,arguments)};var __emscripten_thread_init=Module[\"__emscripten_thread_init\"]=function(){return(__emscripten_thread_init=Module[\"__emscripten_thread_init\"]=Module[\"asm\"][\"_emscripten_thread_init\"]).apply(null,arguments)};var __get_tzname=Module[\"__get_tzname\"]=function(){return(__get_tzname=Module[\"__get_tzname\"]=Module[\"asm\"][\"_get_tzname\"]).apply(null,arguments)};var __get_daylight=Module[\"__get_daylight\"]=function(){return(__get_daylight=Module[\"__get_daylight\"]=Module[\"asm\"][\"_get_daylight\"]).apply(null,arguments)};var __get_timezone=Module[\"__get_timezone\"]=function(){return(__get_timezone=Module[\"__get_timezone\"]=Module[\"asm\"][\"_get_timezone\"]).apply(null,arguments)};var _pthread_self=Module[\"_pthread_self\"]=function(){return(_pthread_self=Module[\"_pthread_self\"]=Module[\"asm\"][\"pthread_self\"]).apply(null,arguments)};var _emscripten_main_thread_process_queued_calls=Module[\"_emscripten_main_thread_process_queued_calls\"]=function(){return(_emscripten_main_thread_process_queued_calls=Module[\"_emscripten_main_thread_process_queued_calls\"]=Module[\"asm\"][\"emscripten_main_thread_process_queued_calls\"]).apply(null,arguments)};var _emscripten_current_thread_process_queued_calls=Module[\"_emscripten_current_thread_process_queued_calls\"]=function(){return(_emscripten_current_thread_process_queued_calls=Module[\"_emscripten_current_thread_process_queued_calls\"]=Module[\"asm\"][\"emscripten_current_thread_process_queued_calls\"]).apply(null,arguments)};var _emscripten_main_browser_thread_id=Module[\"_emscripten_main_browser_thread_id\"]=function(){return(_emscripten_main_browser_thread_id=Module[\"_emscripten_main_browser_thread_id\"]=Module[\"asm\"][\"emscripten_main_browser_thread_id\"]).apply(null,arguments)};var _emscripten_sync_run_in_main_thread_2=Module[\"_emscripten_sync_run_in_main_thread_2\"]=function(){return(_emscripten_sync_run_in_main_thread_2=Module[\"_emscripten_sync_run_in_main_thread_2\"]=Module[\"asm\"][\"emscripten_sync_run_in_main_thread_2\"]).apply(null,arguments)};var _emscripten_sync_run_in_main_thread_4=Module[\"_emscripten_sync_run_in_main_thread_4\"]=function(){return(_emscripten_sync_run_in_main_thread_4=Module[\"_emscripten_sync_run_in_main_thread_4\"]=Module[\"asm\"][\"emscripten_sync_run_in_main_thread_4\"]).apply(null,arguments)};var _emscripten_run_in_main_runtime_thread_js=Module[\"_emscripten_run_in_main_runtime_thread_js\"]=function(){return(_emscripten_run_in_main_runtime_thread_js=Module[\"_emscripten_run_in_main_runtime_thread_js\"]=Module[\"asm\"][\"emscripten_run_in_main_runtime_thread_js\"]).apply(null,arguments)};var _emscripten_dispatch_to_thread_=Module[\"_emscripten_dispatch_to_thread_\"]=function(){return(_emscripten_dispatch_to_thread_=Module[\"_emscripten_dispatch_to_thread_\"]=Module[\"asm\"][\"emscripten_dispatch_to_thread_\"]).apply(null,arguments)};var __emscripten_thread_free_data=Module[\"__emscripten_thread_free_data\"]=function(){return(__emscripten_thread_free_data=Module[\"__emscripten_thread_free_data\"]=Module[\"asm\"][\"_emscripten_thread_free_data\"]).apply(null,arguments)};var __emscripten_thread_exit=Module[\"__emscripten_thread_exit\"]=function(){return(__emscripten_thread_exit=Module[\"__emscripten_thread_exit\"]=Module[\"asm\"][\"_emscripten_thread_exit\"]).apply(null,arguments)};var _memalign=Module[\"_memalign\"]=function(){return(_memalign=Module[\"_memalign\"]=Module[\"asm\"][\"memalign\"]).apply(null,arguments)};var _setThrew=Module[\"_setThrew\"]=function(){return(_setThrew=Module[\"_setThrew\"]=Module[\"asm\"][\"setThrew\"]).apply(null,arguments)};var _saveSetjmp=Module[\"_saveSetjmp\"]=function(){return(_saveSetjmp=Module[\"_saveSetjmp\"]=Module[\"asm\"][\"saveSetjmp\"]).apply(null,arguments)};var _emscripten_stack_set_limits=Module[\"_emscripten_stack_set_limits\"]=function(){return(_emscripten_stack_set_limits=Module[\"_emscripten_stack_set_limits\"]=Module[\"asm\"][\"emscripten_stack_set_limits\"]).apply(null,arguments)};var stackSave=Module[\"stackSave\"]=function(){return(stackSave=Module[\"stackSave\"]=Module[\"asm\"][\"stackSave\"]).apply(null,arguments)};var stackRestore=Module[\"stackRestore\"]=function(){return(stackRestore=Module[\"stackRestore\"]=Module[\"asm\"][\"stackRestore\"]).apply(null,arguments)};var stackAlloc=Module[\"stackAlloc\"]=function(){return(stackAlloc=Module[\"stackAlloc\"]=Module[\"asm\"][\"stackAlloc\"]).apply(null,arguments)};var dynCall_vij=Module[\"dynCall_vij\"]=function(){return(dynCall_vij=Module[\"dynCall_vij\"]=Module[\"asm\"][\"dynCall_vij\"]).apply(null,arguments)};var dynCall_jiji=Module[\"dynCall_jiji\"]=function(){return(dynCall_jiji=Module[\"dynCall_jiji\"]=Module[\"asm\"][\"dynCall_jiji\"]).apply(null,arguments)};var __emscripten_main_thread_futex=Module[\"__emscripten_main_thread_futex\"]=73152;var __emscripten_allow_main_runtime_queued_calls=Module[\"__emscripten_allow_main_runtime_queued_calls\"]=68e3;Module[\"keepRuntimeAlive\"]=keepRuntimeAlive;Module[\"PThread\"]=PThread;Module[\"PThread\"]=PThread;Module[\"wasmMemory\"]=wasmMemory;Module[\"ExitStatus\"]=ExitStatus;var calledRun;function ExitStatus(status){this.name=\"ExitStatus\";this.message=\"Program terminated with exit(\"+status+\")\";this.status=status}dependenciesFulfilled=function runCaller(){if(!calledRun)run();if(!calledRun)dependenciesFulfilled=runCaller};function run(args){args=args||arguments_;if(runDependencies>0){return}if(ENVIRONMENT_IS_PTHREAD){readyPromiseResolve(Module);initRuntime();postMessage({\"cmd\":\"loaded\"});return}preRun();if(runDependencies>0){return}function doRun(){if(calledRun)return;calledRun=true;Module[\"calledRun\"]=true;if(ABORT)return;initRuntime();readyPromiseResolve(Module);if(Module[\"onRuntimeInitialized\"])Module[\"onRuntimeInitialized\"]();postRun()}if(Module[\"setStatus\"]){Module[\"setStatus\"](\"Running...\");setTimeout(function(){setTimeout(function(){Module[\"setStatus\"](\"\")},1);doRun()},1)}else{doRun()}}Module[\"run\"]=run;function exit(status,implicit){EXITSTATUS=status;if(!implicit){if(ENVIRONMENT_IS_PTHREAD){exitOnMainThread(status);throw\"unwind\"}else{}}if(keepRuntimeAlive()){}else{exitRuntime()}procExit(status)}function procExit(code){EXITSTATUS=code;if(!keepRuntimeAlive()){PThread.terminateAllThreads();if(Module[\"onExit\"])Module[\"onExit\"](code);ABORT=true}quit_(code,new ExitStatus(code))}if(Module[\"preInit\"]){if(typeof Module[\"preInit\"]==\"function\")Module[\"preInit\"]=[Module[\"preInit\"]];while(Module[\"preInit\"].length>0){Module[\"preInit\"].pop()()}}if(ENVIRONMENT_IS_PTHREAD){noExitRuntime=false;PThread.initWorker()}run();\n\n\n  return loadScran.ready\n}\n);\n})();\nexport default loadScran;","import loadScran from \"./wasm/scran.js\";\nconst cache = {};\n\n/**\n * @param {Object} [options] - Optional parameters.\n * @param {number} [numberOfThreads] - Number of threads to use for calculations.\n * This will spin up the requested number of Web Workers during module initialization.\n * @param {boolean} [localFile] - Whether or not to look for the Wasm and worker scripts locally.\n * Should only be `true` when using old versions of Node where file URLs are not supported.\n *\n * @return \n * The Wasm bindings are initialized and `true` is returned.\n * If the bindings were already initialized (e.g., by a previous call), nothing is done and `false` is returned.\n */\nexport async function initialize({ numberOfThreads = 4, localFile = false } = {}) {\n    if (\"module\" in cache) {\n        return false;\n    }\n\n    let options = {\n        scran_custom_nthreads: numberOfThreads\n    }\n\n    if (localFile) {\n        options.locateFile = (x) => import.meta.url.substring(7) + \"/../wasm/\" + x;\n    }\n\n    // TODO: figure out how to add the thing for service workers.\n    cache.module = await loadScran(options);\n    return true;\n}\n\nexport function call(func) {\n    if (! (\"module\" in cache)) {\n        throw \"Wasm module needs to be initialized via 'initialize()'\";\n    }\n\n    var output;\n    try {\n        output = func(cache.module);    \n    } catch (e) {\n        if (e instanceof Number) {\n            throw cache.module.get_error_message(e);\n        } else {\n            throw e;\n        }\n    }\n    return output;\n}\n\nexport function buffer() {\n    if (! (\"module\" in cache)) {\n        throw \"Wasm module needs to be initialized via 'initialize()'\";\n    }\n    return cache.module.wasmMemory.buffer;\n}\n\n/**\n * @return All worker threads are terminated and the module is deleted from the cache.\n * This is useful for cleaning up at the end of the analysis,\n * otherwise the workers will be shut done ungracefully on program exit.\n */\nexport function terminate() {\n    cache.module.PThread.terminateAllThreads();\n    delete cache.module;\n    return;\n}\n"],"names":["module","exports","arr","len","length","i","arr2","Array","__esModule","isArray","self","ReferenceError","instance","Constructor","TypeError","setPrototypeOf","isNativeReflectConstruct","_construct","Parent","args","Class","Reflect","construct","a","push","apply","Function","bind","prototype","arguments","_defineProperties","target","props","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","unsupportedIterableToArray","o","allowArrayLike","it","Symbol","iterator","F","s","n","done","value","e","_e","f","err","normalCompletion","didErr","call","step","next","_e2","getPrototypeOf","possibleConstructorReturn","Derived","hasNativeReflectConstruct","result","Super","NewTarget","this","constructor","obj","_getPrototypeOf","__proto__","subClass","superClass","create","fn","toString","indexOf","sham","Proxy","Boolean","valueOf","_i","_s","_arr","_n","_d","_typeof","assertThisInitialized","_setPrototypeOf","p","arrayWithHoles","iterableToArrayLimit","nonIterableRest","arrayLikeToArray","minLen","slice","name","from","test","isNativeFunction","_wrapNativeSuper","_cache","Map","undefined","has","get","set","Wrapper","_unpack_struct_from","structure","buf","offset","output","entries","fmt","struct","unpack_from","calcsize","assert","thing","_structure_size","values","join","_padded_size","size","padding_multiple","Math","ceil","dtype_to_format","dtype_getter","dtype_str","getter","nbytes","big_endian","_is_big_endian","match","fstr","bytestr","parseInt","toFixed","array","Uint8Array","Uint32Array","buffer","isBigEndian","getters","byte_lengths","all_formats","keys","fmt_size_regex","regex","RegExp","exec","Number","view","DataView64","append_target","sarray","reduce","b","String","fromCharCode","byteOffset","littleEndian","left","BigInt","getUint32","right","combined","low","high","getInt32","c","getUint8","decodeURIComponent","escape","getUint64","DataView","bitSize","integer","_unpack_integer","fh","bytes","reverse","accumulator","currentValue","index","dtype","determine_dtype","datatype_msg","DATATYPE_MSG","DATATYPE_MSG_SIZE","datatype_class","DATATYPE_FIXED_POINT","_determine_dtype_fixed_point","DATATYPE_FLOATING_POINT","_determine_dtype_floating_point","DATATYPE_TIME","DATATYPE_STRING","_determine_dtype_string","DATATYPE_BITFIELD","DATATYPE_OPAQUE","DATATYPE_COMPOUND","_determine_dtype_compound","DATATYPE_REFERENCE","DATATYPE_ENUMERATED","DATATYPE_ARRAY","DATATYPE_VARIABLE_LENGTH","vlen_type","_determine_dtype_vlen","dtype_char","byte_order_char","length_in_bytes","includes","zero$1","LITERALS$1","L_CODES$1","D_CODES$1","MAX_BITS$1","extra_lbits","extra_dbits","extra_blbits","bl_order","static_ltree","static_dtree","_dist_code","_length_code","MAX_MATCH$1","base_length","static_l_desc","static_d_desc","static_bl_desc","base_dist","StaticTreeDesc","static_tree","extra_bits","extra_base","elems","max_length","has_stree","TreeDesc","dyn_tree","stat_desc","max_code","d_code","dist","put_short","w","pending_buf","pending","send_bits","bi_valid","bi_buf","send_code","tree","bi_reverse","code","res","gen_codes","bl_count","bits","next_code","init_block","dyn_ltree","dyn_dtree","bl_tree","END_BLOCK","opt_len","static_len","last_lit","matches","bi_windup","smaller","m","depth","_n2","_m2","pqdownheap","k","v","heap","j","heap_len","compress_block","ltree","dtree","lc","extra","lx","d_buf","l_buf","build_tree","desc","stree","heap_max","h","xbits","base","overflow","gen_bitlen","scan_tree","curlen","prevlen","nextlen","count","max_count","min_count","REP_3_6","REPZ_3_10","REPZ_11_138","send_tree","static_init_done","_tr_stored_block$1","stored_len","last","header","window","subarray","copy_block","trees","_tr_init","LENGTH_CODES$1","tr_static_init","l_desc","d_desc","bl_desc","_tr_stored_block","_tr_flush_block","opt_lenb","static_lenb","max_blindex","level","strm","data_type","black_mask","detect_data_type","BL_CODES$1","build_bl_tree","strategy","lcodes","dcodes","blcodes","send_all_trees","_tr_tally","lit_bufsize","_tr_align","STATIC_TREES","bi_flush","adler32_1","adler","pos","s1","s2","crcTable","table","makeTable","crc32_1","crc","t","end","messages","constants$2","Z_NO_FLUSH","Z_PARTIAL_FLUSH","Z_SYNC_FLUSH","Z_FULL_FLUSH","Z_FINISH","Z_BLOCK","Z_TREES","Z_OK","Z_STREAM_END","Z_NEED_DICT","Z_ERRNO","Z_STREAM_ERROR","Z_DATA_ERROR","Z_MEM_ERROR","Z_BUF_ERROR","Z_NO_COMPRESSION","Z_BEST_SPEED","Z_BEST_COMPRESSION","Z_DEFAULT_COMPRESSION","Z_FILTERED","Z_HUFFMAN_ONLY","Z_RLE","Z_FIXED","Z_DEFAULT_STRATEGY","Z_BINARY","Z_TEXT","Z_UNKNOWN","Z_DEFLATED","Z_NO_FLUSH$2","Z_FULL_FLUSH$1","Z_FINISH$3","Z_BLOCK$1","Z_OK$3","Z_STREAM_END$3","Z_STREAM_ERROR$2","Z_DATA_ERROR$2","Z_BUF_ERROR$1","Z_DEFAULT_COMPRESSION$1","Z_DEFAULT_STRATEGY$1","Z_DEFLATED$2","MAX_MATCH","MIN_LOOKAHEAD","HCRC_STATE","BUSY_STATE","FINISH_STATE","errorCode","msg","rank","zero","HASH","prev","data","hash_shift","hash_mask","flush_pending","state","avail_out","pending_out","next_out","total_out","flush_block_only","block_start","strstart","put_byte","putShortMSB","read_buf","start","avail_in","input","next_in","wrap","total_in","longest_match","cur_match","chain_length","max_chain_length","scan","best_len","prev_length","nice_match","limit","w_size","_win","wmask","w_mask","strend","scan_end1","scan_end","good_match","lookahead","match_start","fill_window","more","str","_w_size","window_size","hash_size","head","insert","ins_h","deflate_fast","flush","hash_head","bflush","match_length","max_lazy_match","MIN_MATCH","deflate_slow","max_insert","prev_match","match_available","Config","good_length","max_lazy","nice_length","max_chain","func","configuration_table","max_block_size","pending_buf_size","max_start","DeflateState","status","gzhead","gzindex","method","last_flush","w_bits","hash_bits","Uint16Array","HEAP_SIZE","MAX_BITS","deflateResetKeep","deflateReset","ret","deflateInit2","windowBits","memLevel","deflate_1$2","deflateInit","deflateSetHeader","deflate","beg","val","old_flush","text","hcrc","comment","time","os","charCodeAt","bstate","deflate_huff","deflate_rle","deflateEnd","deflateSetDictionary","dictionary","dictLength","tmpDict","avail","deflateInfo","_has","hasOwnProperty","common","sources","source","shift","chunks","l","chunk","STR_APPLY_UIA_OK","__","_utf8len","q","strings","TextEncoder","encode","c2","m_pos","str_len","buf_len","max","out","TextDecoder","decode","utf16buf","c_len","buf2binstring","zstream","toString$1","Z_NO_FLUSH$1","Z_FINISH$2","Z_OK$2","Z_STREAM_END$2","Z_DEFLATED$1","Deflate$1","options","chunkSize","opt","raw","gzip","ended","Error","dict","_dict_set","deflate$1","deflator","flush_mode","_flush_mode","onData","onEnd","deflate_1$1","Deflate","deflateRaw","constants","inffast","_in","_out","dmax","wsize","whave","wnext","s_window","hold","lcode","dcode","lmask","dmask","here","op","from_source","lencode","distcode","lenbits","distbits","top","dolen","mode","dodist","sane","MAXBITS","lbase","lext","dbase","dext","inftrees","type","lens","lens_index","codes","table_index","work","opts","incr","fill","mask","here_bits","here_op","here_val","sym","min","root","curr","drop","used","huff","base_index","offs","extra_index","Z_FINISH$1","Z_OK$1","Z_STREAM_END$1","Z_NEED_DICT$1","Z_STREAM_ERROR$1","Z_DATA_ERROR$1","Z_MEM_ERROR$1","TYPE","BAD","zswap32","InflateState","havedict","flags","check","total","wbits","ncode","nlen","ndist","have","lendyn","distdyn","back","was","lenfix","distfix","inflateResetKeep","Int32Array","inflateReset","inflateReset2","inflateInit2","virgin","fixedtables","updatewindow","src","copy","inflate_1$2","inflateInit","inflate","put","last_bits","last_op","last_val","hbuf","order","inf_leave","xflags","extra_len","inflateEnd","inflateGetHeader","inflateSetDictionary","inflateInfo","gzheader","Inflate$1","to","inflate$1","inflator","last_avail_out","next_out_utf8","tail","utf8str","inflate_1$1","Inflate","inflateRaw","ungzip","pako","zlib","input_array","all_nodes","_read_root_node","_read_children","node_level","parent_node","child_addr","_add_node","_read_node","root_node","node","_read_node_header","B_LINK_NODE","AbstractBTree","init","addresses","entries_used","address","all_address","root_nodes","concat","BTreeV1","dims","chunk_size","filter_mask","fmt_size","chunk_offset","chunk_address","chunk_shape","data_shape","filter_pipeline","item_getter","item_big_endian","item_size","dtype_class","data_size","current_stride","data_strides","map","chunk_buffer_size","node_keys","node_addresses","nkeys","ik","chunk_buffer","node_key","addr","_filter_chunk","apos","cpos","cview","ci","d","every","cb_offset","datum","itemsize","num_filters","chunk_buffer_out","filter_index","filter_id","GZIP_DEFLATE_FILTER","SHUFFLE_FILTER","buffer_size","byteLength","unshuffled_view","floor","shuffled_view","FLETCH32_FILTER","_verify_fletcher32","_read_tree_header","address_formats","_calculate_address_formats","B_TREE_HEADER","node_size","record_size","nrecords_max","ntotalrecords_max","max_depth","offset_fmt","num1_fmt","num2_fmt","offset_size","num1_size","num2_size","_required_bytes","_int_format","addr_size","_nrecords_max","bytelength","nrecords","record","_parse_record","fmts","address_offset","num1","num2","nodelist","namehash","BTreeV2","creationorder","odd_chunk_buffer","data_length","sum1","sum2","getUint16","ref_sum1","ref_sum2","contents","version_hint","SUPERBLOCK_V0","_end_of_sblock","SUPERBLOCK_V0_SIZE","SUPERBLOCK_V2_V3","SUPERBLOCK_V2_V3_SIZE","FORMAT_SIGNATURE","version","_contents","_root_symbol_table","_fh","sym_table","SymbolTable","group_offset","local_heap","LOCAL_HEAP","data_offset","heap_data","name_size","SYMBOL_TABLE_NODE","SYMBOL_TABLE_NODE_SIZE","n_symbols","SYMBOL_TABLE_ENTRY","SYMBOL_TABLE_ENTRY_SIZE","forEach","entry","link_name","get_object_name","links","cache_type","scratch","ArrayBuffer","bufView","GLOBAL_HEAP_HEADER","GLOBAL_HEAP_HEADER_SIZE","heap_data_size","_header","_objects","GLOBAL_HEAP_OBJECT_SIZE","info","GLOBAL_HEAP_OBJECT","obj_data","FRACTAL_HEAP_HEADER","UNDEFINED_ADDRESS","nbits","block_offset_size","_min_size_nbits","indirect_block_header","indirect_block_header_size","direct_block_header","direct_block_header_size","maximum_dblock_size","_managed_object_offset_size","_managed_object_length_size","_min_size_integer","start_block_size","table_width","log2_maximum_dblock_size","log2","log2_start_block_size","_max_direct_nrows","log2_table_width","_indirect_nrows_sub","nobjects","managed","root_address","nrows","_iter_indirect_block","_read_direct_block","moffset","block_size","heapid","firstbyte","idtype","block_offset_bytes","block_offset","_indirect_info","ndirect","nindirect","direct_blocks","_calc_block_size","indirect_blocks","_iblock_nrows_from_block_size","iblock","row","log2_block_size","ndirect_max","_parse_v1_objects","msgs","msg_data","_parse_v2_objects","_global_heaps","_filter_pipeline","_chunk_params_set","_chunks","_chunk_dims","_chunk_address","msg_offset","find_msg_type","DATATYPE_MSG_TYPE","DatatypeMessage","_get_chunk_params","DATASPACE_MSG_TYPE","DATASPACE_MSG_HEADER_V1","DATASPACE_MSG_HEADER_V1_SIZE","DATASPACE_MSG_HEADER_V2","DATASPACE_MSG_HEADER_V2_SIZE","ndims","filter","determine_data_shape","filter_msgs","DATA_STORAGE_FILTER_PIPELINE_MSG_TYPE","nfilters","filters","_","filter_info","FILTER_PIPELINE_DESCR_V1","FILTER_PIPELINE_DESCR_V1_SIZE","padded_name_length","filter_name","client_data","nf","name_length","optional","num_client_values","client_values","msg_type","attrs","attr_msgs","ATTRIBUTE_MSG_TYPE","unpack_attribute","is_defined","fillvalue","FILLVALUE_MSG_TYPE","FILLVAL_MSG_V1V2","FILLVAL_MSG_V1V2_SIZE","FILLVAL_MSG_V3","FILLVAL_MSG_V3_SIZE","attr_map","ATTR_MSG_HEADER_V1","ATTR_MSG_HEADER_V1_SIZE","ATTR_MSG_HEADER_V3","ATTR_MSG_HEADER_V3_SIZE","replace","console","log","shape","items","_attr_value","character_set","_vlen_size_and_data","vlen","vlen_data","str_data","base_dtype","gheap","vlen_size","gheap_id","GLOBAL_HEAP_ID","gheap_address","MAX_SAFE_INTEGER","GlobalHeap","objects","OBJECT_HEADER_V1","total_header_messages","object_header_blocks","current_block","local_offset","HEADER_MSG_INFO_V1","offset_to_message","HEADER_MSG_INFO_V1_SIZE","OBJECT_CONTINUATION_MSG_TYPE","fh_off","_parse_v2_header","creation_order_size","HEADER_MSG_INFO_V2_SIZE","next_block","HEADER_MSG_INFO_V2","OBJECT_HEADER_V2","times","chunk_fmt","fromEntries","iter_links","SYMBOL_TABLE_MSG_TYPE","_iter_links_from_symbol_tables","LINK_MSG_TYPE","_get_link_from_link_msg","LINK_INFO_MSG_TYPE","_iter_link_from_link_info_msg","sym_tbl_msg","SYMBOL_TABLE_MSG","_iter_links_btree_v1","btree_address","heap_address","btree","BTreeV1Groups","Heap","symbol_table_addresses","symbol_table_address","assign_name","get_links","link_msg","_decode_link_msg","link_type","size_of_length_of_link_name","link_type_field_present","link_name_character_set_field_present","ordered","link_name_character_set","encoding","name_size_fmt","length_of_soft_link_value","info_msg","_decode_link_info_msg","name_btree_address","order_btree_address","_iter_links_btree_v2","FractalHeap","BTreeV2GroupOrders","BTreeV2GroupNames","iter_records","get_data","item","sorted_keys","sort","link_info","LINK_INFO_MSG2","LINK_INFO_MSG1","DATA_STORAGE_MSG_TYPE","_get_data_message_properties","layout_class","property_offset","_get_contiguous_data","_get_chunked_data","arg1","arg2","fullsize","item_is_big_endian","BTreeV1RawDataChunks","construct_data_from_chunks","object_index","dataobjects","parent","getterProxy","file","_links","_dataobjects","_attrs","_keys","groupGetHandler","ref","_get_object_by_address","y","_dereference","path","normpath","sep","lastIndexOf","all_sep","end_sep","posix_dirname","split","next_obj","additional_obj","obj_name","link_target","error","dataobjs","DataObjects","is_dataset","visititems","root_name_length","queue","get_attributes","prop","receiver","filename","SuperBlock","offset_to_dataobjects","userblock_size","obj_addr","_astype","astype","runtime","Op","hasOwn","$Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","context","Context","_invoke","GenStateSuspendedStart","arg","GenStateExecuting","GenStateCompleted","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","tryCatch","GenStateSuspendedYield","makeInvokeMethod","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","NativeIteratorPrototype","Gp","defineIteratorMethods","AsyncIterator","PromiseImpl","invoke","resolve","reject","__await","then","unwrapped","previousPromise","callInvokeWithMethodAndArg","resultName","nextLoc","pushTryEntry","locs","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","displayName","isGeneratorFunction","genFun","ctor","mark","awrap","async","Promise","iter","object","pop","skipTempReset","charAt","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","globalThis","_arrayLikeToArray","_arrayWithHoles","_assertThisInitialized","asyncGeneratorStep","gen","_next","_throw","_asyncToGenerator","_classCallCheck","_createClass","_createForOfIteratorHelper","_createSuper","_defineProperty","_inherits","_isNativeReflectConstruct","_iterableToArrayLimit","_nonIterableRest","_possibleConstructorReturn","_slicedToArray","_unsupportedIterableToArray","WasmArray","owner","wasm","_malloc","x","_free","Uint8WasmArray","Int8WasmArray","Int8Array","Uint16WasmArray","Int16WasmArray","Int16Array","Uint32WasmArray","Int32WasmArray","Float32WasmArray","Float32Array","Float64WasmArray","Float64Array","loadScran","_scriptDir","import","GROWABLE_HEAP_I8","wasmMemory","updateGlobalBufferAndViews","HEAP8","GROWABLE_HEAP_U8","HEAPU8","GROWABLE_HEAP_I16","HEAP16","GROWABLE_HEAP_U16","HEAPU16","GROWABLE_HEAP_I32","HEAP32","GROWABLE_HEAP_U32","HEAPU32","GROWABLE_HEAP_F64","HEAPF64","readyPromiseResolve","readyPromiseReject","Module","objAssign","assign","read_","readAsync","readBinary","moduleOverrides","arguments_","quit_","toThrow","ENVIRONMENT_IS_WEB","ENVIRONMENT_IS_WORKER","importScripts","ENVIRONMENT_IS_NODE","process","versions","ENVIRONMENT_IS_PTHREAD","scriptDirectory","locateFile","location","href","document","currentScript","substr","url","xhr","XMLHttpRequest","open","send","responseText","responseType","response","onload","onerror","warn","warnOnce","shown","wasmBinary","Atomics","load","store","compareExchange","wasmModule","noExitRuntime","WebAssembly","abort","EXITSTATUS","ABORT","condition","TextDecoderWrapper","textDecoder","SharedArrayBuffer","UTF8Decoder","UTF8ArrayToString","idx","maxBytesToRead","endIdx","endPtr","u0","u1","u2","ch","UTF8ToString","ptr","stringToUTF8Array","outIdx","maxBytesToWrite","startIdx","u","stringToUTF8","outPtr","lengthBytesUTF8","HEAPF32","UTF16Decoder","UTF16ToString","maxIdx","codeUnit","stringToUTF16","startPtr","numCharsToWrite","lengthBytesUTF16","UTF32ToString","utf32","stringToUTF32","lengthBytesUTF32","wasmTable","INITIAL_MEMORY","Memory","__ATPRERUN__","__ATINIT__","__ATEXIT__","__ATPOSTRUN__","keepRuntimeAlive","runtimeKeepaliveCounter","initRuntime","FS","initialized","ignorePermissions","TTY","callRuntimeCallbacks","runDependencies","runDependencyWatcher","dependenciesFulfilled","addRunDependency","id","removeRunDependency","clearInterval","callback","what","postMessage","RuntimeError","wasmBinaryFile","tempDouble","tempI64","isDataURI","startsWith","getBinary","URL","ASM_CONSTS","callbacks","getWasmTableEntry","withStackSave","stack","stackSave","stackRestore","cleanupThread","pthread_ptr","pthread","PThread","pthreads","worker","returnWorkerToPool","_exit","implicit","exitOnMainThread","terminateAllThreads","ExitStatus","procExit","exit","unusedWorkers","runningWorkers","tlsInitFunctions","initMainThread","pthreadPoolSize","scran_custom_nthreads","allocateUnusedWorker","initWorker","setExitStatus","terminate","runWithoutMainThreadQueuedCalls","threadInfoStruct","splice","__emscripten_thread_free_data","__emscripten_allow_main_runtime_queued_calls","receiveObjectTransfer","threadInit","loadWasmModuleToWorker","onFinishedLoading","onmessage","cmd","currentProxiedOperationCallerThread","_pthread_self","thread","targetThread","_emscripten_main_thread_process_queued_calls","spawnThread","killThread","loaded","runPthread","alert","message","lineno","pthreadMainJs","Worker","getNewWorker","returnCode","_emscripten_proxy_to_main_thread_js","handleException","stackTop","stackSize","_emscripten_stack_set_limits","_emscripten_get_now","wasmTableMirror","funcPtr","performance","now","setErrNo","___errno_location","_clock_gettime","clk_id","tp","Date","ExceptionInfo","excPtr","set_type","get_type","set_destructor","destructor","get_destructor","set_refcount","refcount","set_caught","get_caught","set_rethrown","rethrown","get_rethrown","add_ref","add","release_ref","sub","threadParams","startRoutine","transferList","PATH","splitPath","normalizeArray","parts","allowAboveRoot","up","unshift","normalize","isAbsolute","trailingSlash","dirname","dir","basename","lastSlash","extname","paths","join2","r","PATH_FS","resolvedPath","resolvedAbsolute","cwd","relative","trim","fromParts","toParts","samePartsLength","outputParts","ttys","shutdown","register","dev","ops","registerDevice","stream_ops","stream","tty","rdev","ErrnoError","seekable","close","read","get_char","bytesRead","timestamp","write","put_char","default_tty_ops","prompt","readline","intArrayFromString","default_tty1_ops","mmapAlloc","alignment","alignMemory","_memalign","zeroMemory","MEMFS","ops_table","mount","createNode","isBlkdev","isFIFO","getattr","node_ops","setattr","lookup","mknod","rename","unlink","rmdir","readdir","symlink","llseek","allocate","mmap","msync","link","readlink","chrdev","chrdev_stream_ops","isDir","isFile","usedBytes","isLink","isChrdev","getFileDataAsTypedArray","expandFileStorage","newCapacity","prevCapacity","oldContents","resizeFileStorage","newSize","attr","ino","nlink","uid","gid","atime","mtime","ctime","blksize","blocks","genericErrors","old_node","new_dir","new_name","new_node","lookupNode","newname","oldpath","position","canOwn","whence","prot","allocated","mmapFlags","mounts","devices","streams","nextInode","nameTable","currentPath","filesystems","syncFSRequests","lookupPath","defaults","follow_mount","recurse_count","current","current_path","islast","isMountpoint","mounted","follow","getPath","isRoot","mountpoint","hashName","parentid","hash","hashAddNode","name_next","hashRemoveNode","errCode","mayLookup","nodeName","FSNode","destroyNode","isSocket","flagModes","modeStringToFlags","flagsToPermissionString","flag","perms","nodePermissions","mayCreate","mayDelete","isdir","errno","mayOpen","MAX_OPEN_FDS","nextfd","fd_start","fd_end","fd","getStream","createStream","FSStream","isRead","isWrite","isAppend","newStream","closeStream","device","getDevice","major","minor","makedev","ma","mi","getMounts","syncfs","populate","completed","doCallback","errored","pseudo","mountRoot","unmount","mkdir","mkdirTree","dirs","mkdev","newpath","old_path","new_path","old_dir","old_dirname","new_dirname","old_name","stat","dontFollow","lstat","chmod","lchmod","fchmod","chown","lchown","fchown","truncate","ftruncate","utime","created","ungotten","readFiles","isClosed","getdents","seeking","bytesWritten","munmap","ioctl","readFile","writeFile","actualNumBytes","isView","chdir","createDefaultDirectories","createDefaultDevices","random_device","crypto","randomBuffer","getRandomValues","getRandomDevice","createDevice","createSpecialDirectories","proc_self","createStandardStreams","ensureErrnoError","setErrno","staticInit","quit","getMode","canRead","canWrite","findObject","dontResolveLastLink","analyzePath","exists","parentExists","parentPath","parentObject","createPath","part","createFile","properties","createDataFile","forceLoadFile","isDevice","isFolder","createLazyFile","LazyUint8Array","lengthKnown","chunkOffset","chunkNum","setDataGetter","cacheLength","datalength","getResponseHeader","hasByteServing","usesGzip","lazyArray","setRequestHeader","overrideMimeType","doXHR","_length","_chunkSize","defineProperties","createPreloadedFile","dontCreateFile","preFinish","Browser","fullname","processData","byteArray","handled","plugin","noRunDep","dep","arrayBuffer","event","asyncLoad","indexedDB","mozIndexedDB","webkitIndexedDB","msIndexedDB","DB_NAME","pathname","DB_VERSION","DB_STORE_NAME","saveFilesToDB","openRequest","onupgradeneeded","createObjectStore","onsuccess","transaction","files","objectStore","ok","fail","putRequest","loadFilesFromDB","db","getRequest","SYSCALLS","mappings","DEFAULT_POLLMASK","calculateAt","dirfd","allowEmpty","dirstream","doStat","abs","getTime","doMsync","doMkdir","doMknod","doReadlink","bufsize","endChar","doAccess","amode","doDup","suggestFD","suggest","doReadv","iov","iovcnt","doWritev","varargs","getStr","getStreamFromFD","get64","___syscall_fcntl64","___syscall_ftruncate64","___syscall_ioctl","argp","___syscall_mmap2","off","malloc","syscallMmap2","___syscall_munmap","syscallMunmap","___syscall_open","___syscall_unlink","getShiftFromSize","embind_charCodes","readLatin1String","awaitingDependencies","registeredTypes","typeDependencies","makeLegalFunctionName","createNamedFunction","body","extendError","baseErrorType","errorName","errorClass","BindingError","throwBindingError","InternalError","throwInternalError","whenDependentTypesAreResolved","myTypes","dependentTypes","getTypeConverters","onComplete","typeConverters","myTypeConverters","registerType","unregisteredTypes","registered","dt","rawType","registeredInstance","ignoreDuplicateRegistrations","cb","ClassHandle_isAliasOf","other","ClassHandle","leftClass","$$","ptrType","registeredClass","rightClass","baseClass","upcast","throwInstanceAlreadyDeleted","finalizationGroup","detachFinalizer","releaseClassHandle","smartPtr","smartPtrType","rawDestructor","runDestructor","attachFinalizer","FinalizationGroup","unregister","ClassHandle_clone","preservePointerOnDelete","clone","deleteScheduled","ClassHandle_delete","ClassHandle_isDeleted","delayFunction","deletionQueue","flushPendingDeletes","ClassHandle_deleteLater","registeredPointers","ensureOverloadTable","proto","methodName","humanName","overloadTable","prevFunc","argCount","exposePublicSymbol","numArguments","RegisteredClass","instancePrototype","getActualType","downcast","pureVirtualFunctions","upcastPointer","ptrClass","desiredClass","constNoSmartPtrRawPointerToWireType","destructors","isReference","_embind_repr","handleClass","genericPointerToWireType","isSmartPointer","rawConstructor","isConst","sharingPolicy","clonedHandle","rawShare","Emval","toHandle","nonConstNoSmartPtrRawPointerToWireType","simpleReadValueFromPointer","pointer","RegisteredPointer_getPointee","rawGetPointee","RegisteredPointer_destructor","RegisteredPointer_deleteObject","downcastPointer","rv","getInheritedInstanceCount","registeredInstances","getLiveInheritedInstances","setDelayFunction","getInheritedInstance","class_","getBasestPointer","makeClassHandle","RegisteredPointer_fromWireType","rawPointer","getPointee","makeDefaultHandle","pointeeType","toType","actualType","registeredPointerRecord","constPointerType","pointerType","dp","RegisteredPointer","destructorFunction","replacePublicSymbol","dynCall","sig","dynCallLegacy","embind__requireFunction","signature","rawFunction","fp","argCache","getDynCaller","UnboundTypeError","getTypeName","___getTypeName","throwUnboundTypeError","types","unboundTypes","seen","visit","heap32VectorToArray","firstElement","runDestructors","del","craftInvokerFunction","argTypes","classType","cppInvokerFunc","cppTargetFunc","isClassMethodFunc","needsDestructorStack","returns","argsList","argsListWired","invokerFnBody","dtorStack","args1","args2","paramName","argumentList","dummy","new_","emval_free_list","emval_handle_array","__emval_decref","count_emval_handles","get_first_emval","toValue","floatReadValueFromPointer","integerReadValueFromPointer","signed","sync","numCallArgs","outerArgs","serializedNumCallArgs","stackAlloc","_emscripten_run_in_main_runtime_thread_js","_emscripten_receive_on_main_thread_js_callArgs","emscripten_realloc_buffer","grow","JSEvents","inEventHandler","removeAllEventListeners","eventHandlers","_removeHandler","deferredCalls","registerRemoveEventListeners","removeEventListenersRegistered","deferCall","targetFunction","precedence","arraysHaveEqualContent","arrA","arrB","removeDeferredCalls","canPerformEventHandlerRequests","currentEventHandler","allowsDeferredCalls","runDeferredCalls","removeAllHandlersOnTarget","eventTypeString","removeEventListener","eventListenerFunc","useCapture","registerOrRemoveHandler","eventHandler","jsEventHandler","handlerFunc","callbackfunc","addEventListener","queueEventHandlerOnThread_iiii","eventHandlerFunc","eventTypeId","eventData","userData","_emscripten_dispatch_to_thread_","getTargetThreadForEventCallback","getNodeNameForTarget","screen","fullscreenEnabled","webkitFullscreenEnabled","_emscripten_set_offscreencanvas_size_on_target_thread_js","targetCanvas","width","height","targetCanvasPtr","jsString","cString","stringToNewUTF8","specialHTMLTargets","findEventTarget","querySelector","findCanvasEventTarget","_emscripten_set_canvas_element_size_calling_thread","canvas","canvasSharedPtr","offscreenCanvas","controlTransferredOffscreen","_emscripten_set_offscreencanvas_size_on_target_thread","autoResizeViewport","GLctxObject","GLctx","prevViewport","getParameter","viewport","_emscripten_set_canvas_element_size_main_thread","GL","counter","buffers","programs","framebuffers","renderbuffers","textures","shaders","vaos","contexts","offscreenCanvases","queries","stringCache","unpackAlignment","recordError","lastError","getNewId","getSource","shader","string","createContext","webGLContextAttributes","getContextSafariWebGL2Fixed","getContext","ver","gl","WebGLRenderingContext","ctx","registerContext","attributes","majorVersion","enableExtensionsByDefault","initExtensions","makeContextCurrent","contextHandle","currentContext","deleteContext","initExtensionsDone","ext","getExtension","divisor","first","primcount","indices","__webgl_enable_ANGLE_instanced_arrays","vao","__webgl_enable_OES_vertex_array_object","bufs","__webgl_enable_WEBGL_draw_buffers","disjointTimerQueryExt","multiDrawWebgl","getSupportedExtensions","__emscripten_webgl_power_preferences","_fd_close","_fd_read","pnum","num","_fd_seek","offset_low","offset_high","newOffset","DOUBLE_LIMIT","_fd_write","readMode","writeMode","embind_init_charCodes","proxiedFunctionTable","stringy","dontAddNull","u8array","numBytesWritten","calledRun","asmLibraryArg","line","a0","a1","tb","__emscripten_thread_init","start_routine","_emscripten_sync_run_in_main_thread_4","primitiveType","minRange","maxRange","trueValue","falseValue","wt","rawPointerType","rawConstPointerType","baseClassRawType","getActualTypeSignature","upcastSignature","downcastSignature","destructorSignature","legalFunctionName","basePrototype","constructor_body","referenceConverter","pointerConverter","constPointerConverter","rawClassType","rawArgTypesAddr","invokerSignature","invoker","rawArgTypes","rawInvoker","isPureVirtual","unboundTypesHandler","substring","className","memberFunction","invokerArgsArray","fromWireType","bitshift","isUnsignedType","dataTypeIndex","TA","decodeMemoryView","stdStringIsUTF8","decodeStartPtr","currentBytePtr","stringSegment","valueIsOfTypeString","Uint8ClampedArray","charCode","charSize","decodeString","encodeString","getHeap","lengthBytesUTF","HEAP","isVoid","timeout","tNow","tEnd","exchange","__emscripten_main_thread_futex","targetThreadId","mainThreadId","argv","impl","requireRegisteredType","dest","copyWithin","requestedSize","oldSize","multiple","maxHeapSize","cutDown","overGrownHeapSize","powerPreference","contextAttributes","minorVersion","explicitSwapControl","proxyContextToMainThread","renderViaOffscreenBackBuffer","_emscripten_webgl_do_create_context","receiveInstance","tlsInitFunc","numWorkersToLoad","receiveInstantiationResult","instantiateArrayBuffer","fetch","credentials","catch","binary","instantiate","reason","instantiateStreaming","createWasm","run","preRun","setTimeout","doRun","postRun","runCaller","ready","cache","initialize","numberOfThreads","localFile","get_error_message"],"sourceRoot":""}